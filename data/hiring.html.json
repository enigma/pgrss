{"href":"hiring.html","title":"Hiring is Obsolete","content":"<font face=\"verdana\" size=\"2\"><table cellspacing=\"0\" width=\"100%\">\n<tr><td bgcolor=\"#ff9922\"><img height=\"15\" src=\"http://www.virtumundo.com/images/spacer.gif\" width=\"1\"/><font size=\"2\">\n<b>Want to start a startup?</b>  Get funded by\n<a href=\"http://ycombinator.com/apply.html\">Y Combinator</a>.\n</font>\n<br/><img height=\"5\" src=\"http://www.virtumundo.com/images/spacer.gif\" width=\"1\"/></td></tr>\n</table>\n<p>\nMay 2005<br><br/><i>(This essay is derived from a talk at the Berkeley CSUA.)</i><br/><br/>The three big powers on the Internet now are Yahoo, Google, and\nMicrosoft.  Average age of their founders: 24.  So it is pretty\nwell established now that grad students can start successful\ncompanies.  And if grad students can do it, why not undergrads?<br/><br/>Like everything else in technology, the cost of starting a startup\nhas decreased dramatically.  Now it's so low that it has disappeared\ninto the noise. The main cost of starting a Web-based\nstartup is food and rent.  Which means it doesn't cost much more\nto start a company than to be a total slacker.  You can probably\nstart a startup on ten thousand dollars of seed funding, if you're\nprepared to live on ramen.<br/><br/>The less it costs to start a company, the less you need the permission\nof investors to do it.  So a lot of people will be able to start\ncompanies now who never could have before.<br/><br/>The most interesting subset may be those in their early twenties.\nI'm not so excited about founders who have everything investors\nwant except intelligence, or everything except energy.  The most\npromising group to be liberated by the new, lower threshold are\nthose who have everything investors want except experience.<br/><br/><b>Market Rate</b><br/><br/>I once claimed that <a href=\"nerds.html\">nerds</a> were unpopular\nin secondary school mainly because they had better things to do\nthan work full-time at being popular.  Some said I was just telling\npeople what they wanted to hear.  Well, I'm now about to do that\nin a spectacular way: I think undergraduates are undervalued.<br/><br/>Or more precisely, I think few realize the huge\nspread in the value of 20 year olds.  Some, it's true, are not very\ncapable.  But others are more capable than all but a handful of 30\nyear olds. <font color=\"#777777\">[<a href=\"#f1n\"><font color=\"#777777\">1</font></a>]</font><br/><br/>Till now the problem has always been that it's difficult to pick\nthem out.  Every VC in the world, if they could go back in time,\nwould try to invest in Microsoft.  But which would have then?  How\nmany would have understood that this particular 19 year old was\nBill Gates?<br/><br/>It's hard to judge the young because (a) they change rapidly, (b)\nthere is great variation between them, and (c) they're individually\ninconsistent.  That last one is a big problem.  When you're young,\nyou occasionally say and do stupid things even when you're smart.\nSo if the algorithm is to filter out people who say stupid things,\nas many investors and employers unconsciously do, you're going to\nget a lot of false positives.<br/><br/>Most organizations who hire people right out of college are only\naware of the average value of 22 year olds, which is not that high.  \nAnd so the idea for most of the twentieth century was that everyone\nhad to begin as a trainee in some \n<a href=\"http://slashdot.org/comments.pl?sid=158756&amp;cid=13299057\">entry-level</a> job.  Organizations  \nrealized there was a lot of variation in the incoming stream, but\ninstead of pursuing this thought they tended to suppress it, in the\nbelief that it was good for even the most promising kids to start \nat the bottom, so they didn't get swelled heads.<br/><br/>The most productive young people will <i>always</i> be undervalued\nby large organizations, because the young have no performance to\nmeasure yet, and any error in guessing their ability will tend \ntoward the mean.<br/><br/>What's an especially productive 22 year old to do?  One thing you   \ncan do is go over the heads of organizations, directly to the users.\nAny company that hires you is, economically, acting as a proxy for\nthe customer.  The rate at which they value you (though they may\nnot consciously realize it) is an attempt to guess your value to  \nthe user.  But there's a way to appeal their judgement.  If you\nwant, you can opt to be valued directly by users, by starting your\nown company.<br/><br/>The market is a lot more discerning than any employer.  And it is\ncompletely non-discriminatory.  On the Internet, nobody knows you're\na dog.  And more to the point, nobody knows you're 22.  All users\ncare about is whether your site or software gives them what they\nwant.  They don't care if the person behind it is a high school \nkid.<br/><br/>If you're really productive, why not make employers pay market rate\nfor you?  Why go work as an ordinary employee for a big\ncompany, when you could start a startup and make them buy it to get\nyou?<br/><br/>When most people hear the word \"startup,\" they think of the famous \nones that have gone public.  But most startups that succeed do it\nby getting bought.  And usually the acquirer doesn't just want the\ntechnology, but the people who created it as well.<br/><br/>Often big companies buy startups before they're profitable.  Obviously\nin such cases they're not after revenues.  What they want is the  \ndevelopment team and the software they've built so far.  When a\nstartup gets bought for 2 or 3 million six months in, it's really\nmore of a hiring bonus than an acquisition.<br/><br/>I think this sort of thing will happen more and more, and that it \nwill be better for everyone.  It's obviously better for the people\nwho start the startup, because they get a big chunk of money up\nfront.  But I think it will be better for the acquirers too.  The\ncentral problem in big companies, and the main reason they're so \nmuch less productive than small companies, is the difficulty of\nvaluing each person's work.  Buying larval startups solves that   \nproblem for them: the acquirer doesn't pay till the developers have\nproven themselves.  Acquirers are protected on the downside, but   \nstill get most of the upside.<br/><br/><b>Product Development</b><br/><br/>Buying startups also solves another problem afflicting big companies:\nthey can't do product development.  Big companies are good at\nextracting the value from existing products, but bad at creating   \nnew ones.<br/><br/>Why? It's worth studying this phenomenon in detail, because this  \nis the raison d'etre of startups.<br/><br/>To start with, most big companies have some kind of turf to protect,\nand this tends to warp their development decisions.  For example,\n<a href=\"road.html\">Web-based</a> applications are hot now, but\nwithin Microsoft there must\nbe a lot of ambivalence about them, because the very idea of Web-based\nsoftware threatens the desktop.  So any Web-based application that  \nMicrosoft ends up with, will probably, like Hotmail, be something   \ndeveloped outside the company.<br/><br/>Another reason big companies are bad at developing new products is\nthat the kind of people who do that tend not to have much power in\nbig companies (unless they happen to be the CEO).  Disruptive\ntechnologies are developed by disruptive people.  And they either\ndon't work for the big company, or have been outmaneuvered by yes-men\nand have comparatively little influence.<br/><br/>Big companies also lose because they usually only build one of each\nthing.  When you only have one Web browser, you can't do anything\nreally risky with it.  If ten different startups design ten different\nWeb browsers and you take the best, you'll probably get something\nbetter.<br/><br/>The more general version of this problem is that there are too many\nnew ideas for companies to explore them all.  There might be 500   \nstartups right now who think they're making something Microsoft\nmight buy.  Even Microsoft probably couldn't manage 500 development\nprojects in-house.<br/><br/>Big companies also don't pay people the right way.  People developing\na new product at a big company get paid roughly the same whether\nit succeeds or fails.  People at a startup expect to get rich if\nthe product succeeds, and get nothing if it fails. <font color=\"#777777\">[<a href=\"#f2n\"><font color=\"#777777\">2</font></a>]</font>  So naturally\nthe people at the startup work a lot harder.<br/><br/>The mere bigness of big companies is an obstacle.  In startups,  \ndevelopers are often forced to talk directly to users, whether they\nwant to or not, because there is no one else to do sales and support.\nIt's painful doing sales, but you learn much more from\ntrying to sell people something than reading what   \nthey said in focus groups.<br/><br/>And then of course, big companies are bad at product development \nbecause they're bad at everything.  Everything happens slower in\nbig companies than small ones, and product development is something\nthat has to happen fast, because you have to go through a lot of   \niterations to get something good.<br/><br/><b>Trend</b><br/><br/>I think the trend of big companies buying startups will only\naccelerate.  One of the biggest remaining obstacles is pride.  Most  \ncompanies, at least unconsciously, feel they ought to be able to\ndevelop stuff in house, and that buying startups is to some degree \nan admission of failure.  And so, as people generally do with\nadmissions of failure, they put it off for as long as possible.\nThat makes the acquisition very expensive when it finally happens.<br/><br/>What companies should do is go out and discover startups when they're\nyoung, before VCs have puffed them up into something that costs\nhundreds of millions to acquire.  Much of what VCs add, the acquirer\ndoesn't need anyway.<br/><br/>Why don't acquirers try to predict the companies they're going to\nhave to buy for hundreds of millions, and grab them early for a     \ntenth or a twentieth of that?  Because they can't predict the winners\nin advance?  If they're only paying a twentieth as much, they only\nhave to predict a twentieth as well.  Surely they can manage that.<br/><br/>I think companies that acquire technology will gradually learn to \ngo after earlier stage startups.  They won't necessarily buy them\noutright.  The solution may be some hybrid of investment and\nacquisition: for example, to buy a chunk of the company and get an\noption to buy the rest later.<br/><br/>When companies buy startups, they're effectively fusing recruiting \nand product development.  And I think that's more efficient than \ndoing the two separately, because you always get people who are\nreally committed to what they're working on.<br/><br/>Plus this method yields teams of developers who already work well\ntogether.  Any conflicts between them have been ironed out under   \nthe very hot iron of running a startup.  By the time the acquirer  \ngets them, they're finishing one another's sentences.  That's  \nvaluable in software, because so many bugs occur at the boundaries \nbetween different people's code.<br/><br/><b>Investors</b><br/><br/>The increasing cheapness of starting a company doesn't just give\nhackers more power relative to employers.  It also gives them more \npower relative to investors.<br/><br/>The conventional wisdom among VCs is that hackers shouldn't be   \nallowed to run their own companies.  The founders are supposed to  \naccept MBAs as their bosses, and themselves take on some title like  \nChief Technical Officer.  There may be cases where this is a good \nidea.  But I think founders will increasingly be able to push back\nin the matter of control, because they just don't need the investors'\nmoney as much as they used to.<br/><br/>Startups are a comparatively new phenomenon.  Fairchild Semiconductor\nis considered the first VC-backed startup, and they were founded   \nin 1959, less than fifty years ago.  Measured on the time scale of   \nsocial change, what we have now is pre-beta.  So we shouldn't assume\nthe way startups work now is the way they have to work.<br/><br/>Fairchild needed a lot of money to get started.  They had to build\nactual factories.  What does the first round of venture funding for\na Web-based startup get spent on today?  More money can't get\nsoftware written faster; it isn't needed for facilities, because\nthose can now be quite cheap; all money can really buy you is sales\nand marketing.  A sales force is worth something, I'll admit.  But\nmarketing is increasingly irrelevant.  On the Internet, anything\ngenuinely good will spread by word of mouth.<br/><br/>Investors' power comes from money.  When startups need less money,   \ninvestors have less power over them.  So future founders may not\nhave to accept new CEOs if they don't want them.  The VCs will have \nto be dragged kicking and screaming down this road, but like many\nthings people have to be dragged kicking and screaming toward, it\nmay actually be good for them.<br/><br/>Google is a sign of the way things are going.  As a condition of\nfunding, their investors insisted they hire someone old and experienced\nas CEO.  But from what I've heard the founders didn't just give in\nand take whoever the VCs wanted.  They delayed for an entire year,\nand when they did finally take a CEO, they chose a guy with a PhD \nin computer science.<br/><br/>It sounds to me as if the founders are still the most powerful\npeople in the company, and judging by Google's performance, their\nyouth and inexperience doesn't seem to have hurt them.  Indeed, I\nsuspect Google has done better than they would have if the founders\nhad given the VCs what they wanted, when they wanted it, and let \nsome MBA take over as soon as they got their first round of funding.<br/><br/>I'm not claiming the business guys installed by VCs have no value.\nCertainly they have.  But they don't need to become the founders'\nbosses, which is what that title CEO means.  I predict that in the \nfuture the executives installed by VCs will increasingly be COOs\nrather than CEOs.  The founders will run engineering directly, and\nthe rest of the company through the COO.<br/><br/><b>The Open Cage</b><br/><br/>With both employers and investors, the balance of power is slowly\nshifting towards the young.  And yet they seem the last to realize\nit.  Only the most ambitious undergrads even consider starting their\nown company when they graduate.  Most just want to get a job.<br/><br/>Maybe this is as it should be.  Maybe if the idea of starting a  \nstartup is intimidating, you filter out the uncommitted.  But I    \nsuspect the filter is set a little too high.  I think there are\npeople who could, if they tried, start successful startups, and who\ninstead let themselves be swept into the intake ducts of big\ncompanies.<br/><br/>Have you ever noticed that when animals are let out of cages, they\ndon't always realize at first that the door's open?  Often they\nhave to be poked with a stick to get them out.  Something similar  \nhappened with blogs.  People could have been publishing online in    \n1995, and yet blogging has only really taken off in the last couple\nyears.  In 1995 we thought only professional writers were entitled\nto publish their ideas, and that anyone else who did was a crank.\nNow publishing online is becoming so popular that everyone wants  \nto do it, even print journalists.  But blogging has not taken off  \nrecently because of any technical innovation; it just took eight\nyears for everyone to realize the cage was open.<br/><br/>I think most undergrads don't realize yet that the economic cage  \nis open.  A lot have been told by their parents that the route to\nsuccess is to get a good job.  This was true when their parents\nwere in college, but it's less true now. The route to success is\nto build something valuable, and you don't have to be working for    \nan existing company to do that.  Indeed, you can often do it better\nif you're not.<br/><br/>When I talk to undergrads, what surprises me most about them is how\nconservative they are.   Not politically, of course.  I mean they\ndon't seem to want to take risks.  This is a mistake, because the\nyounger you are, the more risk you can take.<br/><br/><b>Risk</b><br/><br/>Risk and reward are always proportionate.  For example, stocks are\nriskier than bonds, and over time always have greater returns.  So\nwhy does anyone invest in bonds?  The catch is that phrase \"over\ntime.\"  Stocks will generate greater returns over thirty years, but\nthey might lose value from year to year.  So what you should invest\nin depends on how soon you need the money.  If you're young, you \nshould take the riskiest investments you can find.<br/><br/>All this talk about investing may seem very theoretical.  Most\nundergrads probably have more debts than assets.  They may feel\nthey have nothing to invest.  But that's not true: they have their\ntime to invest, and the same rule about risk applies there.  Your\nearly twenties are exactly the time to take insane career risks.<br/><br/>The reason risk is always proportionate to reward is that market  \nforces make it so.  People will pay extra for stability.  So if you\nchoose stability-- by buying bonds, or by going to work for a big\ncompany-- it's going to cost you.<br/><br/>Riskier career moves pay better on average, because there is less\ndemand for them.  Extreme choices like starting a startup are so  \nfrightening that most people won't even try.  So you don't end up   \nhaving as much competition as you might expect, considering the\nprizes at stake.<br/><br/>The math is brutal.  While perhaps 9 out of 10 startups fail, the  \none that succeeds will pay the founders more than 10 times what\nthey would have made in an ordinary job. <font color=\"#777777\">[<a href=\"#f3n\"><font color=\"#777777\">3</font></a>]</font>\nThat's the sense in\nwhich startups pay better \"on average.\"<br/><br/>Remember that.  If you start a startup, you'll probably fail.  Most\nstartups fail. It's the nature of the business.  But it's not\nnecessarily a mistake to try something that has a 90% chance of\nfailing, if you can afford the risk.  Failing at 40, when you have \na family to support, could be serious.  But if you fail at 22, so    \nwhat?  If you try to start a startup right out of college and it   \ntanks, you'll end up at 23 broke and a lot smarter.  Which, if you\nthink about it, is roughly what you hope to get from a graduate  \nprogram.<br/><br/>Even if your startup does tank, you won't harm your prospects with\nemployers.  To make sure I asked some friends who work for big\ncompanies.  I asked managers at Yahoo, Google, Amazon, Cisco and\nMicrosoft how they'd feel about two candidates, both 24, with equal\nability, one who'd tried to start a startup that tanked, and another\nwho'd spent the two years since college working as a developer at\na big company.  Every one responded that they'd prefer the guy who'd\ntried to start his own company.  Zod Nazem, who's in charge of       \nengineering at Yahoo, said:\n  <blockquote> I actually put more value on the guy with the failed\n  startup.  And you can quote me!  </blockquote>\nSo there you have it.  Want to get hired by Yahoo?  Start your own \ncompany.<br/><br/><b>The Man is the Customer</b><br/><br/>If even big employers think highly of young hackers who start\ncompanies, why don't more do it?  Why are undergrads so conservative?\nI think it's because they've spent so much time in institutions.<br/><br/>The first twenty years of everyone's life consists of being piped\nfrom one institution to another.  You probably didn't have much\nchoice about the secondary schools you went to.  And after high\nschool it was probably understood that you were supposed to go to\ncollege.  You may have had a few different colleges to choose\nbetween, but they were probably pretty similar.  So by this point\nyou've been riding on a subway line for twenty years, and the next\nstop seems to be a job.<br/><br/>Actually college is where the line ends.  Superficially, going to\nwork for a company may feel like just the next in a series of      \ninstitutions, but underneath, everything is different.  The end of\nschool is the fulcrum of your life, the point where you go from   \nnet consumer to net producer.<br/><br/>The other big change is that now, you're steering.  You can go\nanywhere you want. So it may be worth standing back and understanding\nwhat's going on, instead of just doing the default thing.<br/><br/>All through college, and probably long before that, most undergrads \nhave been thinking about what employers want.  But what really \nmatters is what customers want, because they're the ones who give\nemployers the money to pay you.<br/><br/>So instead of thinking about what employers want, you're probably\nbetter off thinking directly about what users want.  To the extent \nthere's any difference between the two, you can even use that to\nyour advantage if you start a company of your own.  For example,\nbig companies like docile conformists.  But this is merely an\nartifact of their bigness, not something customers need.<br/><br/><b>Grad School</b><br/><br/>I didn't consciously realize all this when I was graduating from   \ncollege-- partly because I went straight to grad school.  Grad\nschool can be a pretty good deal, even if you think of one day   \nstarting a startup.  You can start one when you're done, or even\npull the ripcord part way through, like the founders of Yahoo and\nGoogle.<br/><br/>Grad school makes a good launch pad for startups, because you're\ncollected together with a lot of smart people, and you have bigger \nchunks of time to work on your own projects than an undergrad or\ncorporate employee would.  As long as you have a fairly tolerant\nadvisor, you can take your time developing an idea before turning   \nit into a company.  David Filo and Jerry Yang started the Yahoo      \ndirectory in February 1994 and were getting a million hits a day\nby the fall, but they didn't actually drop out of grad school and\nstart a company till March 1995.<br/><br/>You could also try the startup first, and if it doesn't work, then\ngo to grad school.  When startups tank they usually do it fairly\nquickly. Within a year you'll know if you're wasting your time.<br/><br/>If it fails, that is.  If it succeeds, you may have to delay grad\nschool a little longer.  But you'll have a much more enjoyable life  \nonce there than you would on a regular grad student stipend.<br/><br/><b>Experience</b><br/><br/>Another reason people in their early twenties don't start startups\nis that they feel they don't have enough experience.  Most investors\nfeel the same.<br/><br/>I remember hearing a lot of that word \"experience\" when I was in  \ncollege.  What do people really mean by it?  Obviously it's not the\nexperience itself that's valuable, but something it changes in your\nbrain.  What's different about your brain after you have \"experience,\"\nand can you make that change happen faster?<br/><br/>I now have some data on this, and I can tell you what tends to be \nmissing when people lack experience.  I've said that every \n<a href=\"start.html\">startup</a> needs three things: to start with good people,\nto make something users want, and not to spend too much money.  It's\nthe middle one you get wrong when you're inexperienced.  There are   \nplenty of undergrads with enough technical skill to write good\nsoftware, and undergrads are not especially prone to waste money.\nIf they get something wrong, it's usually not realizing they have   \nto make something people <a href=\"bronze.html\">want</a>.<br/><br/>This is not exclusively a failing of the young.  It's common for\nstartup founders of all ages to build things no one wants.<br/><br/>Fortunately, this flaw should be easy to fix.  If undergrads were  \nall bad programmers, the problem would be a lot harder.  It can \ntake years to learn how to program.  But I don't think it takes \nyears to learn how to make things people want.  My hypothesis is\nthat all you have to do is smack hackers on the side of the head\nand tell them: Wake up.  Don't sit here making up a priori theories\nabout what users need.  Go find some users and see what they need.<br/><br/>Most successful startups not only do something very specific, but  \nsolve a problem people already know they have.<br/><br/>The big change that \"experience\" causes in your brain is learning\nthat you need to solve people's problems.  Once you grasp that, you\nadvance quickly to the next step, which is figuring out what those\nproblems are.  And that takes some effort, because the way software\nactually gets used, especially by the people who pay the most for\nit, is not at all what you might expect.  For example, the stated  \npurpose of Powerpoint is to present ideas.  Its real role is to \novercome people's fear of public speaking.  It allows you to give\nan impressive-looking talk about nothing, and it causes the audience\nto sit in a dark room looking at slides, instead of a bright one     \nlooking at you.<br/><br/>This kind of thing is out there for anyone to see.  The key is to\nknow to look for it-- to realize that having an idea for a startup\nis not like having an idea for a class project.  The goal in a\nstartup is not to write a cool piece of software.  It's to make \nsomething people want.  And to do that you have to look at users--\nforget about hacking, and just look at users.  This can be quite a\nmental adjustment, because little if any of the software you write\nin school even has users.  <!-- Imagine the shock you'd feel if you\nspent eight years practicing football drills and only then had to\nplay against an opposing team.  That's the scale of adjustment\ninvolved. --><br/><br/>A few steps before a Rubik's Cube is solved, it still looks like a\nmess.  I think there are a lot of undergrads whose brains are in a  \nsimilar position: they're only a few steps away from being able to\nstart successful startups, if they wanted to, but they don't realize\nit.  They have more than enough technical skill.  They just haven't\nrealized yet that the way to create wealth is to make what users   \nwant, and that employers are just proxies for users in which risk  \nis pooled.<br/><br/>If you're young and smart, you don't need either of those.  You\ndon't need someone else to tell you what users want, because you  \ncan figure it out yourself.  And you don't want to pool risk, because\nthe younger you are, the more risk you should take.<br/><br/><b>A Public Service Message</b><br/><br/>I'd like to conclude with a joint message from me and your parents.\nDon't drop out of college to start a startup.  There's no rush.     \nThere will be plenty of time to start companies after you graduate.\nIn fact, it may be just as well to go work for an existing company\nfor a couple years after you graduate, to learn how companies work.<br/><br/>And yet, when I think about it, I can't imagine telling Bill Gates\nat 19 that he should wait till he graduated to start a company.    \nHe'd have told me to get lost.  And could I have honestly claimed\nthat he was harming his future-- that he was learning less by working\nat ground zero of the microcomputer revolution than he would have\nif he'd been taking classes back at Harvard?  No, probably not.<br/><br/>And yes, while it is probably true that you'll learn some valuable\nthings by going to work for an existing company for a couple years\nbefore starting your own, you'd learn a thing or two running your  \nown company during that time too.<br/><br/>The advice about going to work for someone else would get an even\ncolder reception from the 19 year old Bill Gates.  So I'm supposed \nto finish college, then go work for another company for two years,\nand then I can start my own?  I have to wait till I'm 23?  That's  \n<i>four years</i>.  That's more than twenty percent of my life so\nfar.  Plus in four years it will be way too late to make money     \nwriting a Basic interpreter for the Altair.<br/><br/>And he'd be right.  The Apple II was launched just two years later.\nIn fact, if Bill had finished college and gone to work for another\ncompany as we're suggesting, he might well have gone to work for\nApple.  And while that would probably have been better for all of\nus, it wouldn't have been better for him.<br/><br/>So while I stand by our responsible advice to finish college and\nthen go work for a while before starting a startup, I have to admit\nit's one of those things the old tell the young, but don't expect\nthem to listen to.  We say this sort of thing mainly so we can claim\nwe warned you.  So don't say I didn't warn you.<br/><br/><br/><br/>\n<b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>]\nThe average B-17 pilot in World War II was in his early twenties.\n(Thanks to Tad Marko for pointing this out.)<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>] If a company tried to pay employees this way, they'd be called\nunfair.  And yet when they buy some startups and not others, no one\nthinks of calling that unfair. \n<!--The cause of this discrepancy is\nthe unspoken idea that employers are somehow in loco parentis.  (The\nconcept of an employee evolved from that of a servant.) --><br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>] The 1/10 success rate for startups is a bit of an urban legend.\nIt's suspiciously neat.  My guess is the odds are slightly worse.<br/><br/><b>Thanks</b> to Jessica Livingston for reading drafts of this, to\nthe friends I promised anonymity to for their opinions about hiring,\nand to Karen Nguyen and the Berkeley CSUA for organizing this talk.<br/><br/><br clear=\"all\"/></br></p></font>","date":"2005-05-01T00:00:00Z"}