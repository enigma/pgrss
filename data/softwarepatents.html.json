{"href":"softwarepatents.html","title":"Are Software Patents Evil?","content":"<font face=\"verdana\" size=\"2\"><!--<table width=100% cellspacing=0>\n<tr><td bgcolor=#ffac74><img src=\"http://www.virtumundo.com/images/spacer.gif\"\nheight=15 width=1><font size=2>\n<b>April 29:</b> Free one-day\n<a href=\"http://startupschool.org\">startup school</a>\nfor hackers.\n</font>\n<br><img src=\"http://www.virtumundo.com/images/spacer.gif\" height=5 width=1></td\n></tr>\n</table>\n-->\nMarch 2006<br/><br/><i>(This essay is derived from a talk at Google.)</i><br/><br/>A few weeks ago I found to my surprise that I'd been granted four <a href=\"http://paulgraham.infogami.com/blog/morepatents\">patents</a>.  \nThis was all the more surprising\nbecause I'd only applied for three.  The patents aren't mine, of\ncourse.  They were assigned to Viaweb, and became Yahoo's when they\nbought us.  But the news set me thinking about the question of\nsoftware patents generally.<br/><br/>Patents are a hard problem.  I've had to advise most of the startups\nwe've funded about them, and despite years of experience I'm still\nnot always sure I'm giving the right advice.<br/><br/>One thing I do feel pretty certain of is that if you're against\nsoftware patents, you're against patents in general.  Gradually our\nmachines consist more and more of software.  Things that used to\nbe done with levers and cams and gears are now done with loops and\ntrees and closures.  There's nothing special about physical embodiments\nof control systems that should make them patentable, and the software\nequivalent not.<br/><br/>Unfortunately, patent law is inconsistent on this point.  Patent\nlaw in most countries says that algorithms aren't patentable.  This\nrule is left over from a time when \"algorithm\" meant something like\nthe Sieve of Eratosthenes.  In 1800, people could not see as readily\nas we can that a great many patents on mechanical objects were\nreally patents on the algorithms they embodied.<br/><br/>Patent lawyers still have to pretend that's what they're doing when\nthey patent algorithms.  You must not use the word \"algorithm\" in\nthe title of a patent application, just as you must not use the\nword \"essays\" in the title of a book.  If you want to patent an\nalgorithm, you have to frame it as a computer system executing that algorithm.\nThen it's mechanical; phew.  The default euphemism for algorithm\nis \"system and method.\"  Try a patent search for that phrase and\nsee how many results you get.<br/><br/>Since software patents are no different from hardware patents,\npeople who say \"software patents are evil\" are saying simply \"patents\nare evil.\"  So why do so many people complain about software patents\nspecifically?<br/><br/>I think the problem is more with the patent office than the concept\nof software patents.  Whenever software meets government, bad things\nhappen, because software changes fast and government changes slow.\nThe patent office has been overwhelmed by both the volume and the\nnovelty of applications for software patents, and as a result they've\nmade a lot of mistakes.<br/><br/>The most common is to grant patents that shouldn't be granted.  To\nbe patentable, an invention has to be more than new.  It also has\nto be non-obvious.  And this, especially, is where the USPTO has\nbeen dropping the ball. Slashdot has an icon that expresses the\nproblem vividly: a knife and fork with the words \"patent pending\"\nsuperimposed.<br/><br/>The scary thing is, this is the <i>only</i> icon they have for\npatent stories.  Slashdot readers now take it for granted that a\nstory about a patent will be about a bogus patent.\nThat's how bad the problem has become.<br/><br/>The problem with Amazon's notorious one-click patent, for example,\nis not that it's a software patent, but that it's obvious.  Any\nonline store that kept people's shipping addresses would have\nimplemented this.  The reason Amazon did it first was not that they\nwere especially smart, but because they were one of the earliest\nsites with enough clout to force customers to log in before they\ncould buy something. \n<font color=\"#777777\">[<a href=\"#f1n\"><font color=\"#777777\">1</font></a>]</font><br/><br/>We, as hackers, know the USPTO is letting people patent the knives\nand forks of our world.  The problem is, the USPTO are not hackers.\nThey're probably good at judging new inventions for casting steel\nor grinding lenses, but they don't understand software yet.<br/><br/>At this point an optimist would be tempted to add \"but they will\neventually.\"  Unfortunately that might not be true.  The problem\nwith software patents is an instance of a more general one: the\npatent office takes a while to understand new technology.  If so,\nthis problem will only get worse, because the rate of technological\nchange seems to be increasing.  In thirty years, the patent office\nmay understand the sort of things we now patent as software, but\nthere will be other new types of inventions they understand even\nless.<br/><br/>Applying for a patent is a negotiation.  You generally apply for a\nbroader patent than you think you'll be granted, and the examiners\nreply by throwing out some of your claims and granting others.  So\nI don't really blame Amazon for applying for the one-click patent.\nThe big mistake was the patent office's, for not insisting on\nsomething narrower, with real technical content.  By granting such\nan over-broad patent, the USPTO in effect slept with Amazon on the\nfirst date.  Was Amazon supposed to say no?<br/><br/>Where Amazon went over to the dark side was not in applying for the\npatent, but in enforcing it.  A lot of companies (Microsoft, for\nexample) have been granted large numbers of preposterously over-broad\npatents,  but they keep them mainly for defensive purposes.  Like\nnuclear weapons, the main role of big companies' patent portfolios\nis to threaten anyone who attacks them with a counter-suit.  Amazon's\nsuit against Barnes &amp; Noble was thus the equivalent of a nuclear\nfirst strike.<br/><br/>That suit probably hurt Amazon more than it helped them.  Barnes &amp;\nNoble was a lame site; Amazon would have crushed them anyway.  To\nattack a rival they could have ignored, Amazon put a lasting black\nmark on their own reputation.  Even now I think if you asked hackers\nto free-associate about Amazon, the one-click patent would turn up\nin the first ten topics.<br/><br/>Google clearly doesn't feel that merely holding patents is evil.\nThey've applied for a lot of them.  Are they hypocrites?  Are patents\nevil?<br/><br/>There are really two variants of that question, and people answering\nit often aren't clear in their own minds which they're answering.\nThere's a narrow variant: is it bad, given the current legal system,\nto apply for patents? and also a broader one: is it bad that the\ncurrent legal system allows patents?<br/><br/>These are separate questions.  For example, in preindustrial societies\nlike medieval Europe, when someone attacked you, you didn't call\nthe police.  There were no police.  When attacked, you were supposed\nto fight back, and there were conventions about how to do it.  Was\nthis wrong?  That's two questions: was it wrong to take justice\ninto your own hands, and was it wrong that you had to?  We tend to\nsay yes to the second, but no to the first.  If no one else will\ndefend you, you have to defend yourself.  \n<font color=\"#777777\">[<a href=\"#f2n\"><font color=\"#777777\">2</font></a>]</font><br/><br/>The situation with patents is similar.  Business is a kind of\nritualized warfare.  Indeed, it evolved from actual warfare: most\nearly traders switched on the fly from merchants to pirates depending\non how strong you seemed.  In business there are certain rules\ndescribing how companies may and may not compete with one another,\nand someone deciding that they're going to play by their own rules\nis missing the point.  Saying \"I'm not going to apply for patents\njust because everyone else does\" is not like saying \"I'm not going\nto lie just because everyone else does.\"  It's more like saying\n\"I'm not going to use TCP/IP just because everyone else does.\" Oh\nyes you are.<br/><br/>A closer comparison might be someone seeing a hockey game for the\nfirst time, realizing with shock that the players were <i>deliberately</i>\nbumping into one another, and deciding that one would on no account\nbe so rude when playing hockey oneself.<br/><br/>Hockey allows checking.  It's part of the game.  If your team refuses\nto do it, you simply lose.  So it is in business.  Under the present\nrules, patents are part of the game.<br/><br/>What does that mean in practice?  We tell the startups we fund not\nto worry about infringing patents, because startups rarely get sued\nfor patent infringement.  There are only two reasons someone might\nsue you: for money, or to prevent you from competing with them.\nStartups are too poor to be worth suing for money. And in practice\nthey don't seem to get sued much by competitors, either.  They don't\nget sued by other startups because (a) patent suits are an expensive\ndistraction, and (b) since the other startups are as young as they\nare, their patents probably haven't issued yet. \n<font color=\"#777777\">[<a href=\"#f3n\"><font color=\"#777777\">3</font></a>]</font>\nNor do startups,\nat least in the software business, seem to get sued much by established\ncompetitors.  Despite all the patents Microsoft holds, I don't know\nof an instance where they sued a startup for patent infringement.\nCompanies like Microsoft and Oracle don't win by winning lawsuits.\nThat's too uncertain.  They win by locking competitors out of their\nsales channels.  If you do manage to threaten them, they're more\nlikely to buy you than sue you.<br/><br/>When you read of big companies filing patent suits against smaller\nones, it's usually a big company on the way down, grasping at\nstraws.  For example, Unisys's attempts to enforce their patent on\nLZW compression.  When you see a big company threatening patent\nsuits, sell.  When a company starts fighting over IP, it's a sign\nthey've lost the real battle, for users.<br/><br/>A company that sues competitors for patent infringement is like\na defender who has been beaten so thoroughly that he turns to plead\nwith the referee.  You don't do that if you can still reach the\nball, even if you genuinely believe you've been fouled.  So a company\nthreatening patent suits is a company in <a href=\"http://www.theregister.co.uk/2006/03/15/azul_sues_sun/\">trouble</a>.<br/><br/>When we were working on Viaweb, a bigger company in the e-commerce\nbusiness was granted a patent on online ordering, or something like\nthat.  I got a call from a VP there asking if we'd like to license\nit.  I replied that I thought the patent was completely bogus, and\nwould never hold up in court.  \"Ok,\" he replied.  \"So, are you guys\nhiring?\"<br/><br/>If your startup grows big enough, however, you'll start to get sued,\nno matter what you do.  If you go public, for example, you'll be\nsued by multiple patent trolls who hope you'll pay them off to go\naway.  More on them later.<br/><br/>In other words, no one will sue you for patent infringement till\nyou have money, and once you have money, people will sue you whether\nthey have grounds to or not.  So I advise fatalism.  Don't waste\nyour time worrying about patent infringement.  You're probably\nviolating a patent every time you tie your shoelaces.  At the start,\nat least, just worry about making something great and getting lots\nof users.  If you grow to the point where anyone considers you worth\nattacking, you're doing well.<br/><br/>We do advise the companies we fund to apply for patents, but not\nso they can sue competitors.  Successful startups either get bought\nor grow into big companies.  If a startup wants to grow into a big\ncompany, they should apply for patents to build up the patent\nportfolio they'll need to maintain an armed truce with other big\ncompanies.  If they want to get bought, they should apply for patents\nbecause patents are part of the mating dance with acquirers.<br/><br/>Most startups that succeed do it by getting bought, and most acquirers\ncare about patents.  Startup acquisitions are usually a build-vs-buy\ndecision for the acquirer.  Should we buy this little startup or\nbuild our own?  And two things, especially, make them decide not\nto build their own: if you already have a large and rapidly growing\nuser base, and if you have a fairly solid patent application on\ncritical parts of your software.<br/><br/>There's a third reason big companies should prefer buying to building:\nthat if they built their own, they'd screw it up.  But few big\ncompanies are smart enough yet to admit this to themselves.  It's\nusually the acquirer's engineers who are asked how hard it would\nbe for the company to build their own, and they overestimate their\nabilities.  \n<font color=\"#777777\">[<a href=\"#f4n\"><font color=\"#777777\">4</font></a>]</font>\nA patent seems to change the balance.  It gives the\nacquirer an excuse to admit they couldn't copy what you're doing.\nIt may also help them to grasp what's special about your technology.<br/><br/>Frankly, it surprises me how small a role patents play in the\nsoftware business.  It's kind of ironic, considering all the dire\nthings experts say about software patents stifling innovation, but\nwhen one looks closely at the software business, the most striking\nthing is how little patents seem to matter.<br/><br/>In other fields, companies regularly sue competitors for patent\ninfringement.  For example, the airport baggage scanning business\nwas for many years a cozy duopoly shared between two companies,\nInVision and L-3.  In 2002 a startup called Reveal appeared, with\nnew technology that let them build scanners a third the size.  They\nwere sued for patent infringement before they'd even released a\nproduct.<br/><br/>You rarely hear that kind of story in our world.  The one example\nI've found is, embarrassingly enough, Yahoo, which filed a patent\nsuit against a gaming startup called Xfire in 2005.  Xfire doesn't\nseem to be a very big deal, and it's hard to say why Yahoo felt\nthreatened.  Xfire's VP of engineering had worked at Yahoo on similar\nstuff-- in fact, he was listed as an inventor on the patent Yahoo\nsued over-- so perhaps there was something personal about it.  My\nguess is that someone at Yahoo goofed.  At any rate they didn't\npursue the suit very vigorously.<br/><br/>Why do patents play so small a role in software?  I can think of\nthree possible reasons.<br/><br/>One is that software is so complicated that patents by themselves\nare not worth very much.  I may be maligning other fields here, but\nit seems that in most types of engineering you can hand the details\nof some new technique to a group of medium-high quality people and\nget the desired result.  For example, if someone develops a new\nprocess for smelting ore that gets a better yield, and you assemble\na team of qualified experts and tell them about it, they'll be able\nto get the same yield.  This doesn't seem to work in software.\nSoftware is so subtle and unpredictable that \"qualified experts\"\ndon't get you very far.<br/><br/>That's why we rarely hear phrases like \"qualified expert\" in the\nsoftware business.  What that level of ability can get you is, say,\nto make your software compatible with some other piece of software--\nin eight months, at enormous cost.  To do anything harder you need\nindividual brilliance.  If you assemble a team of qualified experts\nand tell them to make a new web-based email program, they'll get\ntheir asses kicked by a team of inspired nineteen year olds.<br/><br/>Experts can implement, but they can't <a href=\"taste.html\">design</a>.\nOr rather, expertise in implementation is the only kind most people,\nincluding the experts themselves, can measure. \n<font color=\"#777777\">[<a href=\"#f5n\"><font color=\"#777777\">5</font></a>]</font><br/><br/>But design is a definite skill.  It's not just an airy intangible.\nThings always seem intangible when you don't understand them.\nElectricity seemed an airy intangible to most people in 1800.  Who\nknew there was so much to know about it?  So it is with design.\nSome people are good at it and some people are bad at it, and there's\nsomething very tangible they're good or bad at.<br/><br/>The reason design counts so much in software is probably that there\nare fewer constraints than on physical things.  Building physical\nthings is expensive and dangerous.  The space of possible choices\nis smaller; you tend to have to work as part of a larger group; and\nyou're subject to a lot of regulations.  You don't have any of that\nif you and a couple friends decide to create a new web-based\napplication.<br/><br/>Because there's so much scope for design in software, a successful\napplication tends to be way more than the sum of its patents.  What\nprotects little companies from being copied by bigger competitors\nis not just their patents, but the thousand little things the big\ncompany will get wrong if they try.<br/><br/>The second reason patents don't count for much in our world is that\nstartups rarely attack big companies head-on, the way Reveal did.\nIn the software business, startups beat established companies by\ntranscending them.  Startups don't build desktop word processing\nprograms to compete with Microsoft Word. \n<font color=\"#777777\">[<a href=\"#f6n\"><font color=\"#777777\">6</font></a>]</font>\nThey build Writely.\nIf this paradigm is crowded, just wait for the next one; they run\npretty frequently on this route.<br/><br/>Fortunately for startups, big companies are extremely good at denial.\nIf you take the trouble to attack them from an oblique angle, they'll\nmeet you half-way and maneuver to keep you in their blind spot.  To\nsue a startup would mean admitting it was dangerous, and that often\nmeans seeing something the big company doesn't want to see.  IBM\nused to sue its mainframe competitors regularly, but they didn't\nbother much about the microcomputer industry because they didn't\nwant to see the threat it posed.  Companies building web based apps\nare similarly protected from Microsoft, which even now doesn't want\nto imagine a world in which Windows is irrelevant.<br/><br/>The third reason patents don't seem to matter very much in software\nis public opinion-- or rather, hacker opinion.  In a recent <a href=\"http://www.computing.co.uk/forbes/news/2152720/interview-steve-ballmer-linux\">interview</a>,\nSteve Ballmer coyly left open the possibility of attacking Linux\non patent grounds.  But I doubt Microsoft would ever be so stupid.\nThey'd face the mother of all boycotts.  And not just from the\ntechnical community in general; a lot of their own people would\nrebel.<br/><br/>Good hackers care a lot about matters of principle, and they are\nhighly mobile.  If a company starts misbehaving, smart people won't\nwork there.  For some reason this seems to be more true in software\nthan other businesses.  I don't think it's because hackers have\nintrinsically higher principles so much as that their skills are\neasily transferrable.  Perhaps we can split the difference and say\nthat mobility gives hackers the luxury of being principled.<br/><br/>Google's \"don't be evil\" policy may for this reason be the most\nvaluable thing they've discovered.  It's very constraining in some\nways.  If Google does do something evil, they get doubly whacked\nfor it: once for whatever they did, and again for hypocrisy.  But\nI think it's worth it.  It helps them to hire the best people, and\nit's better, even from a purely selfish point of view, to be\nconstrained by principles than by stupidity.<br/><br/>(I wish someone would get this point across to the present\nadministration.)<br/><br/>I'm not sure what the proportions are of the preceding three\ningredients, but the custom among the big companies seems to be not\nto sue the small ones, and the startups are mostly too busy and too\npoor to sue one another.  So despite the huge number of software\npatents there's not a lot of suing going on.  With one exception:\npatent trolls.<br/><br/>Patent trolls are companies consisting mainly of lawyers whose whole\nbusiness is to accumulate patents and threaten to sue companies who\nactually make things.  Patent trolls, it seems safe to say, are\nevil.  I feel a bit stupid saying that, because when you're saying\nsomething that Richard Stallman and Bill Gates would both agree\nwith, you must be perilously close to tautologies.<br/><br/>The CEO of Forgent, one of the most notorious patent trolls, says\nthat what his company does is \"the American way.\" Actually that's\nnot true. The American way is to make money by <a href=\"wealth.html\">creating wealth</a>, not by suing people. \n<font color=\"#777777\">[<a href=\"#f7n\"><font color=\"#777777\">7</font></a>]</font>\nWhat companies like Forgent do is actually the proto-industrial\nway.  In the period just before the industrial revolution, some of\nthe greatest fortunes in countries like England and France were\nmade by courtiers who extracted some lucrative right from the crown--\nlike the right to collect taxes on the import of silk-- and then\nused this to squeeze money from the merchants in that business.  So\nwhen people compare patent trolls to the mafia, they're more right\nthan they know, because the mafia too are not merely bad, but bad\nspecifically in the sense of being an obsolete business model.<br/><br/>Patent trolls seem to have caught big companies by surprise.  In\nthe last couple years they've extracted hundreds of millions of\ndollars from them.  Patent trolls are hard to fight precisely because\nthey create nothing.  Big companies are safe from being sued by\nother big companies because they can threaten a counter-suit.  But\nbecause patent trolls don't make anything, there's nothing they can\nbe sued for.  I predict this loophole will get closed fairly quickly,\nat least by legal standards.  It's clearly an abuse of the system,\nand the victims are powerful.\n<font color=\"#777777\">[<a href=\"#f8n\"><font color=\"#777777\">8</font></a>]</font><br/><br/>But evil as patent trolls are, I don't think they hamper innovation\nmuch.  They don't sue till a startup has made money, and by that\npoint the innovation that generated it has already happened.  I\ncan't think of a startup that avoided working on some problem because\nof patent trolls.<br/><br/>So much for hockey as the game is played now.  What about the more\ntheoretical question of whether hockey would be a better game without\nchecking?  Do patents encourage or discourage innovation?<br/><br/>This is a very hard question to answer in the general case.  People\nwrite whole books on the topic.  One of my main hobbies is the\nhistory of technology, and even though I've studied the subject for\nyears, it would take me several weeks of research to be able to say\nwhether patents have in general been a net win.<br/><br/>One thing I can say is that 99.9% of the people who express opinions\non the subject do it not based on such research, but out of a kind\nof religious conviction.  At least, that's the polite way of putting\nit; the colloquial version involves speech coming out of organs not\ndesigned for that purpose.<br/><br/>Whether they encourage innovation or not, patents were at least\nintended to.  You don't get a patent for nothing.  In return for\nthe exclusive right to use an idea, you have to <i>publish</i> it,\nand it was largely to encourage such openness that patents were\nestablished.<br/><br/>Before patents, people protected ideas by keeping them secret.  With\npatents, central governments said, in effect, if you tell everyone\nyour idea, we'll protect it for you.  There is a parallel here to\nthe rise of civil order, which happened at roughly the same time.\nBefore central governments were powerful enough to enforce order,\nrich people had private armies.  As governments got more powerful,\nthey gradually compelled magnates to cede most responsibility for\nprotecting them.  (Magnates still have bodyguards, but no longer\nto protect them from other magnates.)<br/><br/>Patents, like police, are involved in many abuses.  But in both\ncases the default is something worse. The choice is not \"patents\nor freedom?\" any more than it is \"police or freedom?\" The actual\nquestions are respectively \"patents or secrecy?\" and \"police or\ngangs?\"<br/><br/>As with gangs, we have some idea what secrecy would be like, because\nthat's how things used to be.  The economy of medieval Europe was\ndivided up into little tribes, each jealously guarding their\nprivileges and secrets.  In Shakespeare's time, \"mystery\" was\nsynonymous with \"craft.\"   Even today we can see an echo of the\nsecrecy of medieval guilds, in the now pointless secrecy of the\nMasons.<br/><br/>The most memorable example of medieval industrial secrecy is probably\nVenice, which forbade glassblowers to leave the city, and sent\nassassins after those who tried.  We might like to think we wouldn't\ngo so far, but the movie industry has already tried to pass <a href=\"http://news.com.com/2100-1026_3-5106684.html\">laws</a>\nprescribing three year prison terms just for putting movies on\npublic networks.  Want to try a frightening thought experiment? If\nthe movie industry could have any law they wanted, where would they\nstop?  Short of the death penalty, one assumes, but how close would\nthey get?<br/><br/>Even worse than the spectacular abuses might be the overall decrease\nin efficiency that would accompany increased secrecy.  As anyone\nwho has dealt with organizations that operate on a \"need to know\"\nbasis can attest, dividing information up into little cells is\nterribly inefficient.  The flaw in the \"need to know\" principle is\nthat you don't <i>know</i> who needs to know something.  An idea\nfrom one area might spark a great discovery in another.  But the\ndiscoverer doesn't know he needs to know it.<br/><br/>If secrecy were the only protection for ideas, companies wouldn't\njust have to be secretive with other companies; they'd have to be\nsecretive internally.  This would encourage what is already the\nworst trait of big companies.<br/><br/>I'm not saying secrecy would be worse than patents, just that we\ncouldn't discard patents for free.  Businesses would become more\nsecretive to compensate, and in some fields this might get ugly.\nNor am I defending the current patent system.  There is clearly a\nlot that's broken about it.   But the breakage seems to affect\nsoftware less than most other fields.<br/><br/>In the software business I know from experience whether patents\nencourage or discourage innovation, and the answer is the type that\npeople who like to argue about public policy least like to hear:\nthey don't affect innovation much, one way or the other.  Most\ninnovation in the software business happens in startups, and startups\nshould simply ignore other companies' patents.  At least, that's\nwhat we advise, and we bet money on that advice.<br/><br/>The only real role of patents, for most startups, is as an element\nof the mating dance with acquirers.  There patents do help a little.\nAnd so they do encourage innovation indirectly, in that they give\nmore power to startups, which is where, pound for pound, the most\ninnovation happens.  But even in the mating dance, patents are of\nsecondary importance.  It matters more to make something great and\nget a lot of users.<br/><br/><br/><br/><b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>]\nYou have to be careful here, because a great discovery often\nseems obvious in retrospect.  One-click ordering, however, is not\nsuch a discovery.<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>]\n\"Turn the other cheek\" skirts the issue; the critical question\nis not how to deal with slaps, but sword thrusts.<br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>]\nApplying for a patent is now very slow, but it might actually\nbe bad if that got fixed.  At the moment the time it takes to get\na patent is conveniently just longer than the time it takes a startup\nto succeed or fail.<br/><br/>[<a name=\"f4n\"><font color=\"#000000\">4</font></a>]\nInstead of the canonical \"could you build this?\" maybe the corp\ndev guys should be asking \"will you build this?\" or even \"why haven't\nyou already built this?\"<br/><br/>[<a name=\"f5n\"><font color=\"#000000\">5</font></a>]\nDesign ability is so hard to measure that you can't even trust\nthe design world's internal standards.  You can't assume that someone\nwith a degree in design is any good at design, or that an eminent\ndesigner is any better than his peers.  If that worked, any company\ncould build products as good as Apple's just by hiring \nsufficiently qualified designers.<br/><br/>[<a name=\"f6n\"><font color=\"#000000\">6</font></a>]\nIf anyone wanted to try, we'd be interested to hear from them.\nI suspect it's one of those things that's not as hard as everyone\nassumes.<br/><br/>[<a name=\"f7n\"><font color=\"#000000\">7</font></a>]\nPatent trolls can't even claim, like speculators, that they\n\"create\" liquidity.<br/><br/>[<a name=\"f8n\"><font color=\"#000000\">8</font></a>]\nIf big companies don't want to wait for the government to take\naction, there is a way to fight back themselves.  For a long time\nI thought there wasn't, because there was nothing to grab onto.\nBut there is one resource patent trolls need: lawyers.  Big technology\ncompanies between them generate a lot of legal business.  If they\nagreed among themselves never to do business with any firm employing\nanyone who had worked for a patent troll, either as an employee or\nas outside counsel, they could probably starve the trolls of the\nlawyers they need.<br/><br/><b>Thanks</b> to Dan Bloomberg, Paul Buchheit, Sarah Harlin, \nJessica Livingston, and Peter Norvig\nfor reading drafts of this, to Joel Lehrer and Peter Eng for answering\nmy questions about patents, and to Ankur Pansari for inviting me\nto speak.<br/><br/></font>","date":"2006-03-01T00:00:00Z"}