{"href":"early.html","title":"Early Work","content":"<font face=\"verdana\" size=\"2\">October 2020<br/><br/>One of the biggest things holding people back from doing great work\nis the fear of making something lame. And this fear is not an\nirrational one. Many great projects go through a stage early on\nwhere they don't seem very impressive, even to their creators. You\nhave to push through this stage to reach the great work that lies\nbeyond. But many people don't. Most people don't even reach the\nstage of making something they're embarrassed by, let alone continue\npast it. They're too frightened even to start.<br/><br/>Imagine if we could turn off the fear of making something lame.\nImagine how much more we'd do.<br/><br/>Is there any hope of turning it off? I think so. I think the habits\nat work here are not very deeply rooted.<br/><br/>Making new things is itself a new thing for us as a species. It has\nalways happened, but till the last few centuries it happened so\nslowly as to be invisible to individual humans. And since we didn't\nneed customs for dealing with new ideas, we didn't develop any.<br/><br/>We just don't have enough experience with early versions of ambitious\nprojects to know how to respond to them. We judge them as we would\njudge more finished work, or less ambitious projects. We don't\nrealize they're a special case.<br/><br/>Or at least, most of us don't. One reason I'm confident we can do\nbetter is that it's already starting to happen. There are already\na few places that are living in the future in this respect. Silicon\nValley is one of them: an unknown person working on a strange-sounding\nidea won't automatically be dismissed the way they would back home.\nIn Silicon Valley, people have learned how dangerous that is.<br/><br/>The right way to deal with new ideas is to treat them as a challenge\nto your imagination � not just to have lower standards, but to\n<a href=\"https://paulgraham.com/altair.html\"><u>switch polarity</u></a> entirely, from listing \nthe reasons an idea won't\nwork to trying to think of ways it could. That's what I do when I\nmeet people with new ideas. I've become quite good at it, but I've\nhad a lot of practice. Being a partner at Y Combinator means being\npractically immersed in strange-sounding ideas proposed by unknown\npeople. Every six months you get thousands of new ones thrown at\nyou and have to sort through them, knowing that in a world with a\npower-law distribution of outcomes, it will be painfully obvious\nif you miss the needle in this haystack. Optimism becomes\nurgent.<br/><br/>But I'm hopeful that, with time, this kind of optimism can become\nwidespread enough that it becomes a social custom, not just a trick\nused by a few specialists. It is after all an extremely lucrative\ntrick, and those tend to spread quickly.<br/><br/>Of course, inexperience is not the only reason people are too harsh\non early versions of ambitious projects. They also do it to seem\nclever. And in a field where the new ideas are risky, like startups,\nthose who dismiss them are in fact more likely to be right. Just\nnot when their predictions are \n<a href=\"https://paulgraham.com/swan.html\"><u>weighted by outcome</u></a>.<br/><br/>But there is another more sinister reason people dismiss new ideas.\nIf you try something ambitious, many of those around you will hope,\nconsciously or unconsciously, that you'll fail. They worry that if\nyou try something ambitious and succeed, it will put you above them.\nIn some countries this is not just an individual failing but part\nof the national culture.<br/><br/>I wouldn't claim that people in Silicon Valley overcome these\nimpulses because they're morally better. \n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f1n\"><font color=\"#dddddd\">1</font></a>]</font>\nThe reason many hope\nyou'll succeed is that they hope to rise with you. For investors\nthis incentive is particularly explicit. They want you to succeed\nbecause they hope you'll make them rich in the process. But many\nother people you meet can hope to benefit in some way from your\nsuccess. At the very least they'll be able to say, when you're\nfamous, that they've known you since way back.<br/><br/>But even if Silicon Valley's encouraging attitude\nis rooted in self-interest, it has over time actually grown into a\nsort of benevolence. Encouraging startups has been practiced for\nso long that it has become a custom. Now it just seems that that's\nwhat one does with startups.<br/><br/>Maybe Silicon Valley is too optimistic. Maybe it's too easily fooled\nby impostors. Many less optimistic journalists want to believe that.\nBut the lists of impostors they cite are suspiciously short, and\nplagued with asterisks. \n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f2n\"><font color=\"#dddddd\">2</font></a>]</font> If you use revenue as the test, Silicon\nValley's optimism seems better tuned than the rest of the world's.\nAnd because it works, it will spread.<br/><br/>There's a lot more to new ideas than new startup ideas, of course.\nThe fear of making something lame holds people back in every field.\nBut Silicon Valley shows how quickly customs can evolve to support\nnew ideas. And that in turn proves that dismissing new ideas is not\nso deeply rooted in human nature that it can't be unlearnt.<br/><br/>\n<center>___________</center><br/><br/>\nUnfortunately, if you want to do new things, you'll face a force\nmore powerful than other people's skepticism: your own skepticism.\nYou too will judge your early work too harshly. How do you avoid\nthat?<br/><br/>This is a difficult problem, because you don't want to completely\neliminate your horror of making something lame. That's what steers\nyou toward doing good work. You just want to turn it off temporarily,\nthe way a painkiller temporarily turns off pain.<br/><br/>People have already discovered several techniques that work. Hardy\nmentions two in <i>A Mathematician's Apology</i>:\n<blockquote>\n  Good work is not done by \"humble\" men. It is one of the first\n  duties of a professor, for example, in any subject, to exaggerate\n  a little both the importance of his subject and his importance\n  in it.\n</blockquote>\nIf you overestimate the importance of what you're working on, that\nwill compensate for your mistakenly harsh judgment of your initial\nresults. If you look at something that's 20% of the way to a goal\nworth 100 and conclude that it's 10% of the way to a goal worth\n200, your estimate of its expected value is correct even though\nboth components are wrong.<br/><br/>It also helps, as Hardy suggests, to be slightly overconfident.\nI've noticed in many fields that the most successful people are\nslightly overconfident. On the face of it this seems implausible.\nSurely it would be optimal to have exactly the right estimate of\none's abilities. How could it be an advantage to be mistaken?\nBecause this error compensates for other sources of error in the\nopposite direction: being slightly overconfident armors you against\nboth other people's skepticism and your own.<br/><br/>Ignorance has a similar effect. It's safe to make the mistake of\njudging early work as finished work if you're a sufficiently lax\njudge of finished work. I doubt it's possible to cultivate this\nkind of ignorance, but empirically it's a real advantage, especially\nfor the young.<br/><br/>Another way to get through the lame phase of ambitious projects is\nto surround yourself with the right people � to create an eddy in\nthe social headwind. But it's not enough to collect people who are\nalways encouraging. You'd learn to discount that. You need colleagues\nwho can actually tell an ugly duckling from a baby swan. The people\nbest able to do this are those working on similar projects of their\nown, which is why university departments and research labs work so\nwell. You don't need institutions to collect colleagues. They\nnaturally coalesce, given the chance. But it's very much worth\naccelerating this process by seeking out other people trying to do\nnew things.<br/><br/>Teachers are in effect a special case of colleagues. It's a teacher's\njob both to see the promise of early work and to encourage you to\ncontinue. But teachers who are good at this are unfortunately quite\nrare, so if you have the opportunity to learn from one, take it.\n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f3n\"><font color=\"#dddddd\">3</font></a>]</font><br/><br/>For some it might work to rely on sheer discipline: to tell yourself\nthat you just have to press on through the initial crap phase and\nnot get discouraged. But like a lot of \"just tell yourself\" advice,\nthis is harder than it sounds. And it gets still harder as you get\nolder, because your standards rise. The old do have one compensating\nadvantage though: they've been through this before.<br/><br/>It can help if you focus less on where you are and more on the rate\nof change. You won't worry so much about doing bad work if you can\nsee it improving. Obviously the faster it improves, the easier this\nis. So when you start something new, it's good if you can spend a\nlot of time on it. That's another advantage of being young: you\ntend to have bigger blocks of time.<br/><br/>Another common trick is to start by considering new work to be of\na different, less exacting type. To start a painting saying that\nit's just a sketch, or a new piece of software saying that it's\njust a quick hack. Then you judge your initial results by a lower\nstandard. Once the project is rolling you can sneakily convert it\nto something more.\n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f4n\"><font color=\"#dddddd\">4</font></a>]</font><br/><br/>This will be easier if you use a medium that lets you work fast and\ndoesn't require too much commitment up front. It's easier to convince\nyourself that something is just a sketch when you're drawing in a\nnotebook than when you're carving stone. Plus you get initial results\nfaster. \n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f5n\"><font color=\"#dddddd\">5</font></a>]</font>\n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f6n\"><font color=\"#dddddd\">6</font></a>]</font><br/><br/>It will be easier to try out a risky project if you think of it as\na way to learn and not just as a way to make something. Then even\nif the project truly is a failure, you'll still have gained by it.\nIf the problem is sharply enough defined, failure itself is\nknowledge: if the theorem you're trying to prove turns out to\nbe false, or you use a structural member of a certain size and\nit fails under stress, you've learned something, even if it\nisn't what you wanted to learn.\n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f7n\"><font color=\"#dddddd\">7</font></a>]</font><br/><br/>One motivation that works particularly well for me is curiosity.\nI like to try new things just to see how they'll turn out. We started\nY Combinator in this spirit, and it was one of main things that\nkept me going while I was working on \n<a href=\"https://paulgraham.com/bel.html\"><u>Bel</u></a>. Having worked for so long\nwith various dialects of Lisp, I was very curious to see what its\ninherent shape was: what you'd end up with if you followed the\naxiomatic approach all the way.<br/><br/>But it's a bit strange that you have to play mind games with yourself\nto avoid being discouraged by lame-looking early efforts. The thing\nyou're trying to trick yourself into believing is in fact the truth.\nA lame-looking early version of an ambitious project truly is more\nvaluable than it seems. So the ultimate solution may be to teach\nyourself that.<br/><br/>One way to do it is to study the histories of people who've\ndone great work. What were they thinking early on? What was the\nvery first thing they did? It can sometimes be hard to get an\naccurate answer to this question, because people are often embarrassed\nby their earliest work and make little effort to publish it. (They\ntoo misjudge it.) But when you can get an accurate picture of the\nfirst steps someone made on the path to some great work, they're\noften pretty feeble.\n<font color=\"#dddddd\">[<a href=\"https://paulgraham.com/early.html#f8n\"><font color=\"#dddddd\">8</font></a>]</font><br/><br/>Perhaps if you study enough such cases, you can teach yourself to\nbe a better judge of early work. Then you'll be immune both to other\npeople's skepticism and your own fear of making something lame.\nYou'll see early work for what it is.<br/><br/>Curiously enough, the solution to the problem of judging early work\ntoo harshly is to realize that our attitudes toward it are themselves\nearly work. Holding everything to the same standard is a crude\nversion 1. We're already evolving better customs, and we can already\nsee signs of how big the payoff will be.<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\n<b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>]\nThis assumption may be too conservative. There is some evidence\nthat historically the Bay Area has attracted a \n<a href=\"https://paulgraham.com/cities.html\"><u>different sort of person</u></a> than, \nsay, New York City.<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>]\nOne of their great favorites is Theranos. But the most conspicuous\nfeature of Theranos's cap table is the absence of Silicon Valley\nfirms. Journalists were fooled by Theranos, but Silicon Valley\ninvestors weren't.<br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>]\nI made two mistakes about teachers when I was younger.  I\ncared more about professors' research than their reputations as\nteachers, and I was also wrong about what it meant to be a good\nteacher. I thought it simply meant to be good at explaining things.<br/><br/>[<a name=\"f4n\"><font color=\"#000000\">4</font></a>]\nPatrick Collison points out that you can go past treating\nsomething as a hack in the sense of a prototype and onward to the\nsense of the word that means something closer to a practical joke:\n<blockquote>\n  I think there may be something related to being a hack that can\n  be powerful � the idea of making the tenuousness and implausibility\n  <i>a feature</i>. \"Yes, it's a bit ridiculous, right?  I'm just trying\n  to see how far such a naive approach can get.\" YC seemed to me\n  to have this characteristic.\n</blockquote>\n[<a name=\"f5n\"><font color=\"#000000\">5</font></a>]\nMuch of the advantage of switching from physical to digital\nmedia is not the software per se but that it lets you start something\nnew with little upfront commitment.<br/><br/>[<a name=\"f6n\"><font color=\"#000000\">6</font></a>]\nJohn Carmack adds:\n<blockquote>\n  The value of a medium without a vast gulf between the early work\n  and the final work is exemplified in game mods. The original\n  Quake game was a golden age for mods, because everything was very\n  flexible, but so crude due to technical limitations, that quick\n  hacks to try out a gameplay idea weren't all <i>that</i> far from the\n  official game. Many careers were born from that, but as the\n  commercial game quality improved over the years, it became almost\n  a full time job to make a successful mod that would be appreciated\n  by the community. This was dramatically reversed with Minecraft\n  and later Roblox, where the entire esthetic of the experience was\n  so explicitly crude that innovative gameplay concepts became the\n  overriding value. These \"crude\" game mods by single authors are\n  now often bigger deals than massive professional teams' work.\n</blockquote>\n[<a name=\"f7n\"><font color=\"#000000\">7</font></a>]\nLisa Randall suggests that we\n<blockquote>\n  treat new things as experiments. That way there's no such thing\n  as failing, since you learn something no matter what. You treat\n  it like an experiment in the sense that if it really rules something\n  out, you give up and move on, but if there's some way to vary it\n  to make it work better, go ahead and do that\n</blockquote>\n[<a name=\"f8n\"><font color=\"#000000\">8</font></a>]\nMichael Nielsen points out that the internet has made this\neasier, because you can see programmers' first commits, musicians'\nfirst videos, and so on.<br/><br/><br/><br/><b>Thanks</b> to Trevor Blackwell, John Carmack, Patrick Collison, Jessica\nLivingston, Michael Nielsen, and Lisa Randall for reading drafts\nof this.<br/><br/></font>","date":"2020-10-01T00:00:00Z"}