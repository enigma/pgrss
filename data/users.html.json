{"href":"users.html","title":"What I've Learned from Users","content":"<font face=\"verdana\" size=\"2\">September 2022<br/><br/>I recently told applicants to Y Combinator that the best advice I\ncould give for getting in, per word, was \n<blockquote>\n  Explain what you've learned from users.\n</blockquote>\nThat tests a lot of things: whether you're paying attention to\nusers, how well you understand them, and even how much they need\nwhat you're making.<br/><br/>Afterward I asked myself the same question. What have I learned\nfrom YC's users, the startups we've funded?<br/><br/>The first thing that came to mind was that most startups have the\nsame problems. No two have exactly the same problems, but it's\nsurprising how much the problems remain the same, regardless of\nwhat they're making. Once you've advised 100 startups all doing\ndifferent things, you rarely encounter problems you haven't seen\nbefore.<br/><br/>This fact is one of the things that makes YC work. But I didn't\nknow it when we started YC. I only had a few data points: our own\nstartup, and those started by friends. It was a surprise to me how\noften the same problems recur in different forms. Many later stage\ninvestors might never realize this, because later stage investors\nmight not advise 100 startups in their whole career, but a YC partner\nwill get this much experience in the first year or two.<br/><br/>That's one advantage of funding large numbers of early stage companies\nrather than smaller numbers of later-stage ones. You get a lot of\ndata. Not just because you're looking at more companies, but also\nbecause more goes wrong.<br/><br/>But knowing (nearly) all the problems startups can encounter doesn't\nmean that advising them can be automated, or reduced to a formula.\nThere's no substitute for individual office hours with a YC partner.\nEach startup is unique, which means they have to be advised\nby specific partners who know them well.\n<font color=\"#dddddd\">[<a href=\"#f1n\"><font color=\"#dddddd\">1</font></a>]</font><br/><br/>We learned that the hard way, in the notorious \"batch that broke\nYC\" in the summer of 2012. Up till that point we treated the partners\nas a pool. When a startup requested office hours, they got the next\navailable slot posted by any partner. That meant every partner had\nto know every startup. This worked fine up to 60 startups, but when\nthe batch grew to 80, everything broke. The founders probably didn't\nrealize anything was wrong, but the partners were confused and\nunhappy because halfway through the batch they still didn't know\nall the companies yet.\n<font color=\"#dddddd\">[<a href=\"#f2n\"><font color=\"#dddddd\">2</font></a>]</font><br/><br/>At first I was puzzled. How could things be fine at 60 startups and\nbroken at 80? It was only a third more. Then I realized what had\nhappened. We were using an <i>O(n<sup><small>2</small></sup>)</i> algorithm. So of course it blew\nup.<br/><br/>The solution we adopted was the classic one in these situations.\nWe sharded the batch into smaller groups of startups, each overseen\nby a dedicated group of partners. That fixed the problem, and has\nworked fine ever since. But the batch that broke YC was a powerful\ndemonstration of how individualized the process of advising startups\nhas to be.<br/><br/>Another related surprise is how bad founders can be at realizing\nwhat their problems are. Founders will sometimes come in to talk\nabout some problem, and we'll discover another much bigger one in\nthe course of the conversation. For example (and this case is all\ntoo common), founders will come in to talk about the difficulties\nthey're having raising money, and after digging into their situation,\nit turns out the reason is that the company is doing badly, and\ninvestors can tell. Or founders will come in worried that they still\nhaven't cracked the problem of user acquisition, and the reason turns out\nto be that their product isn't good enough. There have been times\nwhen I've asked \"Would you use this yourself, if you hadn't built\nit?\" and the founders, on thinking about it, said \"No.\" Well, there's\nthe reason you're having trouble getting users.<br/><br/>Often founders know what their problems are, but not their relative\nimportance.\n<font color=\"#dddddd\">[<a href=\"#f3n\"><font color=\"#dddddd\">3</font></a>]</font>\nThey'll come in to talk about three problems\nthey're worrying about. One is of moderate importance, one doesn't\nmatter at all, and one will kill the company if it isn't addressed\nimmediately. It's like watching one of those horror movies where\nthe heroine is deeply upset that her boyfriend cheated on her, and\nonly mildly curious about the door that's mysteriously ajar. You\nwant to say: never mind about your boyfriend, think about that door!\nFortunately in office hours you can. So while startups still die\nwith some regularity, it's rarely because they wandered into a room\ncontaining a murderer. The YC partners can warn them where the\nmurderers are.<br/><br/>Not that founders listen. That was another big surprise: how often\nfounders don't listen to us. A couple weeks ago I talked to a partner\nwho had been working for YC for a couple batches and was starting\nto see the pattern. \"They come back a year later,\" she said, \"and\nsay 'We wish we'd listened to you.'\"<br/><br/>It took me a long time to figure out why founders don't listen. At\nfirst I thought it was mere stubbornness. That's part of the reason,\nbut another and probably more important reason is that so much about\nstartups is <a href=\"before.html\">counterintuitive</a>. \nAnd when you tell someone something\ncounterintuitive, what it sounds to them is wrong. So the reason\nfounders don't listen to us is that they don't <i>believe</i> us. At\nleast not till experience teaches them otherwise.\n<font color=\"#dddddd\">[<a href=\"#f4n\"><font color=\"#dddddd\">4</font></a>]</font><br/><br/>The reason startups are so counterintuitive is that they're so\ndifferent from most people's other experiences. No one knows what\nit's like except those who've done it. Which is why YC partners\nshould usually have been founders themselves. But strangely enough,\nthe counterintuitiveness of startups turns out to be another of the\nthings that make YC work. If it weren't counterintuitive, founders\nwouldn't need our advice about how to do it.<br/><br/>Focus is doubly important for early stage startups, because not\nonly do they have a hundred different problems, they don't have\nanyone to work on them except the founders. If the founders focus\non things that don't matter, there's no one focusing on the things\nthat do. So the essence of what happens at YC is to figure out which\nproblems matter most, then cook up ideas for solving them — ideally\nat a resolution of a week or less — and then try those ideas and\nmeasure how well they worked. The focus is on action, with measurable,\nnear-term results.<br/><br/>This doesn't imply that founders should rush forward regardless of\nthe consequences. If you correct course at a high enough frequency,\nyou can be simultaneously decisive at a micro scale and tentative\nat a macro scale. The result is a somewhat winding path, but executed\nvery rapidly, like the path a running back takes downfield. And in\npractice there's less backtracking than you might expect. Founders\nusually guess right about which direction to run in, especially if\nthey have someone experienced like a YC partner to bounce their\nhypotheses off. And when they guess wrong, they notice fast, because\nthey'll talk about the results at office hours the next week.\n<font color=\"#dddddd\">[<a href=\"#f5n\"><font color=\"#dddddd\">5</font></a>]</font><br/><br/>A small improvement in navigational ability can make you a lot\nfaster, because it has a double effect: the path is shorter, and\nyou can travel faster along it when you're more certain it's the\nright one. That's where a lot of YC's value lies, in helping founders\nget an extra increment of focus that lets them move faster. And\nsince moving fast is the essence of a startup, YC in effect makes\nstartups more startup-like.<br/><br/>Speed defines startups. Focus enables speed. YC improves focus.<br/><br/>Why are founders uncertain about what to do? Partly because startups\nalmost by definition are doing something new, which means no one\nknows how to do it yet, or in most cases even what \"it\" is. Partly\nbecause startups are so counterintuitive generally. And partly\nbecause many founders, especially young and ambitious ones, have\nbeen trained to win the wrong way. That took me years to figure\nout. The educational system in most countries trains you to win by\n<a href=\"lesson.html\">hacking the test</a> \ninstead of actually doing whatever it's supposed\nto measure. But that stops working when you start a startup. So\npart of what YC does is to retrain founders to stop trying to hack\nthe test. (It takes a surprisingly long time. A year in, you still\nsee them reverting to their old habits.)<br/><br/>YC is not simply more experienced founders passing on their knowledge.\nIt's more like specialization than apprenticeship. The knowledge\nof the YC partners and the founders have different shapes: It\nwouldn't be worthwhile for a founder to acquire the encyclopedic\nknowledge of startup problems that a YC partner has, just as it\nwouldn't be worthwhile for a YC partner to acquire the depth of\ndomain knowledge that a founder has. That's why it can still be\nvaluable for an experienced founder to do YC, just as it can still\nbe valuable for an experienced athlete to have a coach.<br/><br/>The other big thing YC gives founders is colleagues, and this may\nbe even more important than the advice of partners. If you look at\nhistory, great work clusters around certain places and institutions:\nFlorence in the late 15th century, the University of Göttingen in\nthe late 19th, <i>The New Yorker</i> under Ross, Bell Labs, Xerox PARC.\nHowever good you are, good colleagues make you better. Indeed, very\nambitious people probably need colleagues more than anyone else,\nbecause they're so starved for them in everyday life.<br/><br/>Whether or not YC manages one day to be listed alongside those\nfamous clusters, it won't be for lack of trying. We were very aware\nof this historical phenomenon and deliberately designed YC to be\none. By this point it's not bragging to say that it's the biggest\ncluster of great startup founders. Even people trying to attack YC\nconcede that.<br/><br/>Colleagues and startup founders are two of the most powerful forces\nin the world, so you'd expect it to have a big effect to combine\nthem. Before YC, to the extent people thought about the question\nat all, most assumed they couldn't be combined — that loneliness\nwas the price of independence. That was how it felt to us when we\nstarted our own startup in Boston in the 1990s. We had a handful\nof older people we could go to for advice (of varying quality), but\nno peers. There was no one we could commiserate with about the\nmisbehavior of investors, or speculate with about the future of\ntechnology. I often tell founders to make something they themselves\nwant, and YC is certainly that: it was designed to be exactly what\nwe wanted when we were starting a startup.<br/><br/>One thing we wanted was to be able to get seed funding without\nhaving to make the rounds of random rich people. That has become a\ncommodity now, at least in the US. But great colleagues can never\nbecome a commodity, because the fact that they cluster in some\nplaces means they're proportionally absent from the rest.<br/><br/>Something magical happens where they do cluster though. The energy\nin the room at a YC dinner is like nothing else I've experienced.\nWe would have been happy just to have one or two other startups to\ntalk to. When you have a whole roomful it's another thing entirely.<br/><br/>YC founders aren't just inspired by one another. They also help one\nanother. That's the happiest thing I've learned about startup\nfounders: how generous they can be in helping one another. We noticed\nthis in the first batch and consciously designed YC to magnify it.\nThe result is something far more intense than, say, a university.\nBetween the partners, the alumni, and their batchmates, founders\nare surrounded by people who want to help them, and can.<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>] \nThis is why I've never liked it when people refer to YC as a\n\"bootcamp.\" It's intense like a bootcamp, but the opposite in\nstructure. Instead of everyone doing the same thing, they're each\ntalking to YC partners to figure out what their specific startup\nneeds.<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>] \nWhen I say the summer 2012 batch was broken, I mean it felt\nto the partners that something was wrong. Things weren't yet so\nbroken that the startups had a worse experience. In fact that batch\ndid unusually well.<br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>] \nThis situation reminds me of the research showing that people\nare much better at answering questions than they are at judging how\naccurate their answers are. The two phenomena feel very similar.<br/><br/>[<a name=\"f4n\"><font color=\"#000000\">4</font></a>] \nThe <a href=\"airbnbs.html\">Airbnbs</a> were \nparticularly good at listening — partly\nbecause they were flexible and disciplined, but also because they'd\nhad such a rough time during the preceding year. They were ready\nto listen.<br/><br/>[<a name=\"f5n\"><font color=\"#000000\">5</font></a>] \nThe optimal unit of decisiveness depends on how long it takes\nto get results, and that depends on the type of problem you're\nsolving. When you're negotiating with investors, it could be a\ncouple days, whereas if you're building hardware it could be months.<br/><br/><br/><br/>\n<font color=\"888888\"><b>Thanks</b> to Trevor Blackwell, Jessica Livingston, \nHarj Taggar, and Garry Tan for reading drafts of this.</font><br/><br/></font>","date":"2022-09-01T00:00:00Z"}