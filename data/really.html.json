{"href":"really.html","title":"What Startups Are Really Like","content":"<font face=\"verdana\" size=\"2\"><table cellspacing=\"0\" width=\"100%\">\n<tr><td bgcolor=\"#ff9922\"><img height=\"15\" src=\"http://www.virtumundo.com/images/spacer.gif\" width=\"1\"/><font size=\"2\">\n<b>Want to start a startup?</b>  Get funded by\n<a href=\"http://ycombinator.com/apply.html\">Y Combinator</a>.\n</font>\n<br/><img height=\"5\" src=\"http://www.virtumundo.com/images/spacer.gif\" width=\"1\"/></td></tr>\n</table>\n<p>\nOctober 2009<br><br/><i>(This  essay is derived from a talk at the 2009 Startup School.)</i><br/><br/>I wasn't sure what to talk about at Startup School, so I decided\nto ask the founders of the startups we'd funded.  What hadn't I\nwritten about yet?<br/><br/>I'm in the unusual position of being able to test the essays I write\nabout startups.  I hope the ones on other topics are right, but I\nhave no way to test them.  The ones on startups get tested by about\n70 people every 6 months.<br/><br/>So I sent all the founders an email asking what surprised them about\nstarting a startup.  This amounts to asking what I got wrong, because\nif I'd explained things well enough, nothing should have surprised\nthem.<br/><br/>I'm proud to report I got one response saying:\n<blockquote>\n    What surprised me the most is that everything was actually\n    fairly predictable!\n</blockquote>\nThe bad news is that I got over 100 other responses listing the\nsurprises they encountered.<br/><br/>There were very clear patterns in the responses; it was remarkable\nhow often several people had been surprised by exactly the same\nthing.  These were the biggest:<br/><br/>\n<b>1. Be Careful with Cofounders</b><br/><br/>This was the surprise mentioned by the most founders.  There were\ntwo types of responses: that you have to be careful who you pick\nas a cofounder, and that you have to work hard to maintain your\nrelationship.<br/><br/>What people wished they'd paid more attention to when choosing\ncofounders was character and commitment, not ability.  This was\nparticularly true with startups that failed.  The lesson: don't\npick cofounders who will flake.<br/><br/>Here's a typical reponse:\n<blockquote>\n    You haven't seen someone's true colors unless you've worked\n    with them on a startup.\n</blockquote>\nThe reason character is so important is that it's tested more\nseverely than in most other situations.  One founder said explicitly\nthat the relationship between founders was more important than\nability:\n<blockquote>\n    I would rather cofound a startup with a friend than a stranger\n    with higher output.  Startups are so hard and emotional that\n    the bonds and emotional and social support that come with\n    friendship outweigh the extra output lost.\n</blockquote>\nWe learned this lesson a long time ago.  If you look at the YC\napplication, there are more questions about the commitment and\nrelationship of the founders than their ability.<br/><br/>Founders of successful startups talked less about choosing cofounders\nand more about how hard they worked to maintain their relationship.\n<blockquote>\n    One thing that surprised me is how the relationship of startup\n    founders goes from a friendship to a marriage.  My relationship\n    with my cofounder went from just being friends to seeing each\n    other all the time, fretting over the finances and cleaning up\n    shit. And the startup was our baby.  I summed it up once like\n    this: \"It's like we're married, but we're not fucking.\"\n</blockquote>\nSeveral people used that word \"married.\"  It's a far more intense\nrelationship than you usually see between coworkersâ€”partly because\nthe stresses are so much greater, and partly because at first the\nfounders are the whole company.  So this relationship has to be\nbuilt of top quality materials and carefully maintained.  It's the\nbasis of everything.<br/><br/>\n<b>2. Startups Take Over Your Life</b><br/><br/>Just as the relationship between cofounders is more intense than\nit usually is between coworkers, so is the relationship between the\nfounders and the company.  Running a startup is not like having a\njob or being a student, because it never stops.  This is so foreign\nto most people's experience that they don't get it till it happens.\n<font color=\"#999999\">[<a href=\"#f1n\"><font color=\"#999999\">1</font></a>]</font>\n<blockquote>\n    I didn't realize I would spend almost every waking moment either\n    working or thinking about our startup.  You enter a whole\n    different way of life when it's your company vs. working for\n    someone else's company.\n</blockquote>\nIt's exacerbated by the fast pace of startups, which makes it seem\nlike time slows down:\n<blockquote>\n    I think the thing that's been most surprising to me is how one's\n    perspective on time shifts. Working on our startup, I remember\n    time seeming to stretch out, so that a month was a huge interval.\n</blockquote>\nIn the best case, total immersion can be exciting:\n<blockquote>\n    It's surprising how much you become consumed by your startup,\n    in that you think about it day and night, but never once does\n    it feel like \"work.\"\n</blockquote>\nThough I have to say, that quote is from someone we funded this\nsummer.  In a couple years he may not sound so chipper.<br/><br/>\n<b>3. It's an Emotional Roller-coaster</b><br/><br/>This was another one lots of people were surprised about.  The ups\nand downs were more extreme than they were prepared for.<br/><br/>In a startup, things seem great one moment and hopeless the next.\nAnd by next, I mean a couple hours later.\n<blockquote>\n    The emotional ups and downs were the biggest surprise for me.\n    One day, we'd think of ourselves as the next Google and dream\n    of buying islands; the next, we'd be pondering how to let our\n    loved ones know of our utter failure; and on and on.\n</blockquote>\nThe hard part, obviously, is the lows.  For a lot of founders that\nwas the big surprise:\n<blockquote>\n    How hard it is to keep everyone motivated during rough days or\n    weeks, i.e. how low the lows can be.\n</blockquote>\nAfter a while, if you don't have significant success to cheer you\nup, it wears you out:\n<blockquote>\n    Your most basic advice to founders is \"just don't die,\" but the\n    energy to keep a company going in lieu of unburdening success\n    isn't free; it is siphoned from the founders themselves.\n</blockquote>\nThere's a limit to how much you can take.  If you get to the point\nwhere you can't keep working anymore, it's not the end of the world.\nPlenty of famous founders have had some failures along the way.<br/><br/>\n<b>4. It Can Be Fun</b><br/><br/>The good news is, the highs are also very high.  Several founders\nsaid what surprised them most about doing a startup was how fun it\nwas:\n<blockquote>\n    I think you've left out just how fun it is to do a startup. I\n    am more fulfilled in my work than pretty much any of my friends\n    who did not start companies.\n</blockquote>\nWhat they like most is the freedom:\n<blockquote>\n    I'm surprised by how much better it feels to be working on\n    something that is challenging and creative, something I believe\n    in, as opposed to the hired-gun stuff I was doing before.  I\n    knew it would feel better; what's surprising is how much better.\n</blockquote>\nFrankly, though, if I've misled people here, I'm not eager to fix\nthat.  I'd rather have everyone think starting a startup is grim\nand hard than have founders go into it expecting it to be fun, and\na few months later saying \"This is supposed to be <i>fun</i>? Are you\nkidding?\"<br/><br/>The truth is, it wouldn't be fun for most people.  A lot of what\nwe try to do in the application process is to weed out the people\nwho wouldn't like it, both for our sake and theirs.<br/><br/>The best way to put it might be that starting a startup is fun the\nway a survivalist training course would be fun, if you're into that\nsort of thing.  Which is to say, not at all, if you're not.<br/><br/>\n<b>5. Persistence Is the Key</b><br/><br/>A lot of founders were surprised how important persistence was in\nstartups. It was both a negative and a positive surprise: they were\nsurprised both by the degree of persistence required\n<blockquote>\n    Everyone said how determined and resilient you must be, but\n    going through it made me realize that the determination required\n    was still understated.\n</blockquote>\nand also by the degree to which persistence alone was able to\ndissolve obstacles:\n<blockquote>\n    If you are persistent, even problems that seem out of your\n    control (i.e. immigration) seem to work themselves out.\n</blockquote>\nSeveral founders mentioned specifically how much more important\npersistence was than intelligence.\n<blockquote>\n    I've been surprised again and again by just how much more\n    important persistence is than raw intelligence.\n</blockquote>\nThis applies not just to intelligence but to ability in general,\nand that's why so many people said character was more important in\nchoosing cofounders.<br/><br/>\n<b>6. Think Long-Term</b><br/><br/>You need persistence because everything takes longer than you expect.\nA lot of people were surprised by that.\n<blockquote>\n    I'm continually surprised by how long everything can take.\n    Assuming your product doesn't experience the explosive growth\n    that very few products do, everything from development to\n    dealmaking (especially dealmaking) seems to take 2-3x longer\n    than I always imagine.\n</blockquote>\nOne reason founders are surprised is that because they work fast,\nthey expect everyone else to.   There's a shocking amount of shear\nstress at every point where a startup touches a more bureaucratic\norganization, like a big company or a VC fund.  That's why fundraising\nand the enterprise market kill and maim so many startups.  \n<font color=\"#999999\">[<a href=\"#f2n\"><font color=\"#999999\">2</font></a>]</font><br/><br/>But I think the reason most founders are surprised by how long it\ntakes is that they're overconfident.  They think they're going to\nbe an instant success, like YouTube or Facebook.  You tell them\nonly 1 out of 100 successful startups has a trajectory like that,\nand they all think \"we're going to be that 1.\"<br/><br/>Maybe they'll listen to one of the more successful founders:\n<blockquote>\n    The top thing I didn't understand before going into it is that\n    persistence is the name of the game. For the vast majority of\n    startups that become successful, it's going to be a <i>really</i>\n    long journey, at least 3 years and probably 5+.\n</blockquote>\nThere is a positive side to thinking longer-term.  It's not just\nthat you have to resign yourself to everything taking longer than\nit should.  If you work patiently it's less stressful, and you can\ndo better work:\n<blockquote>\n    Because we're relaxed, it's so much easier to have fun doing\n    what we do. Gone is the awkward nervous energy fueled by the\n    desperate need to not fail guiding our actions. We can concentrate\n    on doing what's best for our company, product, employees and\n    customers.\n</blockquote>\nThat's why things get so much better when you hit ramen profitability.\nYou can shift into a different mode of working.<br/><br/><b>7. Lots of Little Things</b><br/><br/>We often emphasize how rarely startups win simply because they hit\non some magic idea.  I think founders have now gotten that into\ntheir heads.  But a lot were surprised to find this also applies\nwithin startups.  You have to do lots of different things:\n<blockquote>\n    It's much more of a grind than glamorous. A timeslice selected\n    at random would more likely find me tracking down a weird DLL\n    loading bug on Swedish Windows, or tracking down a bug in the\n    financial model Excel spreadsheet the night before a board\n    meeting, rather than having brilliant flashes of strategic\n    insight.\n</blockquote>\nMost hacker-founders would like to spend all their time programming.\nYou won't get to, unless you fail.  Which can be transformed into:\nIf you spend all your time programming, you will fail.<br/><br/>The principle extends even into programming.  There is rarely a\nsingle brilliant hack that ensures success:\n<blockquote>\n    I learnt never to bet on any one feature or deal or anything\n    to bring you success. It is never a single thing.  Everything\n    is just incremental and you just have to keep doing lots of\n    those things until you strike something.\n</blockquote>\nEven in the rare cases where a clever hack makes your fortune, you\nprobably won't know till later:\n<blockquote>\n    There is no such thing as a killer feature. Or at least you\n    won't know what it is.\n</blockquote>\nSo the best strategy is to try lots of different things.  The reason\nnot to put all your eggs in one basket is not the usual one,\nwhich applies even when you know which basket is best.  In a startup\nyou don't even know that.<br/><br/>\n<b>8. Start with Something Minimal</b><br/><br/>Lots of founders mentioned how important it was to launch with the\nsimplest possible thing.  By this point everyone knows you should\nrelease fast and iterate.  It's practically a mantra at YC.  But\neven so a lot of people seem to have been burned by not doing it:\n<blockquote>\n    Build the absolute smallest thing that can be considered a\n    complete application and ship it.\n</blockquote>\nWhy do people take too long on the first version?  Pride, mostly.\nThey hate to release something that could be better.  They worry\nwhat people will say about them.  But you have to overcome this:\n<blockquote>\n    Doing something \"simple\" at first glance does not mean you\n    aren't doing something meaningful, defensible, or valuable.\n</blockquote>\nDon't worry what people will say.  If your first version is so\nimpressive that trolls don't make fun of it, you waited too long\nto launch.  \n<font color=\"#999999\">[<a href=\"#f3n\"><font color=\"#999999\">3</font></a>]</font><br/><br/>One founder said this should be your approach to all programming,\nnot just startups, and I tend to agree.\n<blockquote>\n    Now, when coding, I try to think \"How can I write this such\n    that if people saw my code, they'd be amazed at how little there\n    is and how little it does?\"\n</blockquote>\nOver-engineering is poison.  It's not like doing extra work for\nextra credit.  It's more like telling a lie that you then have to\nremember so you don't contradict it.<br/><br/>\n<b>9. Engage Users</b><br/><br/>Product development is a conversation with the user that doesn't\nreally start till you launch.  Before you launch, you're like a\npolice artist before he's shown the first version of his sketch to\nthe witness.<br/><br/>It's so important to launch fast that it may be better to think of\nyour initial version not as a product, but as a trick for getting\nusers to start talking to you.\n<blockquote>\n    I learned to think about the initial stages of a startup as a\n    giant experiment. All products should be considered experiments,\n    and those that have a market show promising results extremely\n    quickly.\n</blockquote>\nOnce you start talking to users, I guarantee you'll be surprised\nby what they tell you.\n<blockquote>\n    When you let customers tell you what they're after, they will\n    often reveal amazing details about what they find valuable as\n    well what they're willing to pay for.\n</blockquote>\nThe surprise is generally positive as well as negative. They won't\nlike what you've built, but there will be other things they would\nlike that would be trivially easy to implement.  It's not till you\nstart the conversation by launching the wrong thing that they can\nexpress (or perhaps even realize) what they're looking for.<br/><br/>\n<b>10. Change Your Idea</b><br/><br/>To benefit from engaging with users you have to be willing to change\nyour idea.  We've always encouraged founders to see a startup idea\nas a hypothesis rather than a blueprint.  And yet they're still\nsurprised how well it works to change the idea.\n<blockquote>\n    Normally if you complain about something being hard, the general\n    advice is to work harder.  With a startup, I think you should\n    find a problem that's easy for you to solve.  Optimizing in\n    solution-space is familiar and straightforward, but you can\n    make enormous gains playing around in problem-space.\n</blockquote>\nWhereas mere determination, without flexibility, is a greedy algorithm\nthat may get you nothing more than a mediocre local maximum:\n<blockquote>\n    When someone is determined, there's still a danger that they'll\n    follow a long, hard path that ultimately leads nowhere.\n</blockquote>\nYou want to push forward, but at the same time twist and turn to\nfind the most promising path.  One founder put it very succinctly:\n<blockquote>\n    Fast iteration is the key to success.\n</blockquote>\nOne reason this advice is so hard to follow is that people don't\nrealize how hard it is to judge startup ideas, particularly their\nown.  Experienced founders learn to keep an open mind:\n<blockquote>\n    Now I don't laugh at ideas anymore, because I realized how\n    terrible I was at knowing if they were good or not.\n</blockquote>\nYou can never tell what will work.  You just have to do whatever\nseems best at each point.  We do this with YC itself.  We still\ndon't know if it will work, but it seems like a decent hypothesis.<br/><br/>\n<b>11. Don't Worry about Competitors</b><br/><br/>When you think you've got a great idea, it's sort of like having a\nguilty conscience about something.  All someone has to do is look\nat you funny, and you think \"Oh my God, <i>they know.</i>\"<br/><br/>These alarms are almost always false:\n<blockquote>\n    Companies that seemed like competitors and threats at first\n    glance usually never were when you really looked at it. Even\n    if they were operating in the same area, they had a different\n    goal.\n</blockquote>\nOne reason people overreact to competitors is that they overvalue\nideas.  If ideas really were the key, a competitor with the same\nidea would be a real threat.  But it's usually execution that\nmatters:\n<blockquote>\n    All the scares induced by seeing a new competitor pop up are\n    forgotten weeks later. It always comes down to your own product\n    and approach to the market.\n</blockquote>\nThis is generally true even if competitors get lots of attention.\n<blockquote>\n    Competitors riding on lots of good blogger perception aren't\n    really the winners and can disappear from the map quickly.  You\n    need consumers after all.\n</blockquote>\nHype doesn't make satisfied users, at least not for something as\ncomplicated as technology.<br/><br/><b>12. It's Hard to Get Users</b><br/><br/>A lot of founders complained about how hard it was to get users,\nthough.\n<blockquote>\n    I had no idea how much time and effort needed to go into attaining\n    users.\n</blockquote>\nThis is a complicated topic.  When you can't get users, it's hard\nto say whether the problem is lack of exposure, or whether the\nproduct's simply bad.  Even good products can be blocked by switching\nor integration costs:\n<blockquote>\n    Getting people to use a new service is incredibly difficult.\n    This is especially true for a service that other companies can\n    use, because it requires their developers to do work. If you're\n    small, they don't think it is urgent. \n<font color=\"#999999\">[<a href=\"#f4n\"><font color=\"#999999\">4</font></a>]</font>\n</blockquote>\nThe sharpest criticism of YC came from a founder who said we didn't\nfocus enough on customer acquisition:\n<blockquote>\n    YC preaches \"make something people want\" as an engineering task,\n    a never ending stream of feature after feature until enough\n    people are happy and the application takes off.  There's very\n    little focus on the cost of customer acquisition.\n</blockquote>\nThis may be true; this may be something we need to fix, especially\nfor applications like games.  If you make something where the\nchallenges are mostly technical, you can rely on word of mouth,\nlike Google did.  One founder was surprised by how well that worked\nfor him:\n<blockquote>\n    There is an irrational fear that no one will buy your product.\n    But if you work hard and incrementally make it better, there\n    is no need to worry.\n</blockquote>\nBut with other types of startups you may win less by features and\nmore by deals and marketing.<br/><br/>\n<b>13. Expect the Worst with Deals</b><br/><br/>Deals fall through.  That's a constant of the startup world.  Startups\nare powerless, and good startup ideas generally seem wrong.  So\neveryone is nervous about closing deals with you, and you have no\nway to make them.<br/><br/>This is particularly true with investors:\n<blockquote>\n    In retrospect, it would have been much better if we had operated\n    under the assumption that we would never get any additional\n    outside investment.  That would have focused us on finding\n    revenue streams early.\n</blockquote>\nMy advice is generally pessimistic.  Assume you won't get money,\nand if someone does offer you any, assume you'll never get any more.\n<blockquote>\n    If someone offers you money, take it. You say it a lot, but I\n    think it needs even more emphasizing.  We had the opportunity\n    to raise a lot more money than we did last year and I wish we\n    had.\n</blockquote>\nWhy do founders ignore me?  Mostly because they're optimistic by\nnature.  The mistake is to be optimistic about things you can't\ncontrol. By all means be optimistic about your ability to make\nsomething great.  But you're asking for trouble if you're optimistic\nabout big companies or investors.<br/><br/>\n<b>14. Investors Are Clueless</b><br/><br/>A lot of founders mentioned how surprised they were by the cluelessness\nof investors:\n<blockquote>\n    They don't even know about the stuff they've invested in.  I\n    met some investors that had invested in a hardware device and\n    when I asked them to demo the device they had difficulty switching\n    it on.\n</blockquote>\nAngels are a bit better than VCs, because they usually have startup\nexperience themselves:\n<blockquote>\n    VC investors don't know half the time what they are talking\n    about and are years behind in their thinking.  A few were great,\n    but 95% of the investors we dealt with were unprofessional,\n    didn't seem to be very good at business or have any kind of\n    creative vision. Angels were generally much better to talk to.\n</blockquote>\nWhy are founders surprised that VCs are clueless?  I think it's\nbecause they seem so formidable.<br/><br/>The reason VCs seem formidable is that it's their profession to.\nYou get to be a VC by convincing asset managers to trust you with\nhundreds of millions of dollars.  How do you do that?  You have to\nseem confident, and you have to seem like you understand technology.\n<font color=\"#999999\">[<a href=\"#f5n\"><font color=\"#999999\">5</font></a>]</font><br/><br/>\n<b>15. You May Have to Play Games</b><br/><br/>Because investors are so bad at judging you, you have to work harder\nthan you should at selling yourself. One founder said the thing\nthat surprised him most was\n<blockquote>\n    The degree to which feigning certitude impressed investors.\n</blockquote>\nThis is the thing that has surprised <i>me</i> most about YC founders'\nexperiences.  This summer we invited some of the alumni to talk to\nthe new startups about fundraising, and pretty much 100% of their\nadvice was about investor psychology.  I thought I was cynical about\nVCs, but the founders were much more cynical.\n<blockquote>\n    A lot of what startup founders do is just posturing.  It works.\n</blockquote>\nVCs themselves have no idea of the extent to which the startups\nthey like are the ones that are best at selling themselves to VCs.\n<font color=\"#999999\">[<a href=\"#f6n\"><font color=\"#999999\">6</font></a>]</font>\nIt's exactly the same phenomenon we saw a step earlier.  VCs get\nmoney by seeming confident to LPs, and founders get money by seeming\nconfident to VCs.<br/><br/>\n<b>16. Luck Is a Big Factor</b><br/><br/>With two such random linkages in the path between startups and\nmoney, it shouldn't be surprising that luck is a big factor in\ndeals.  And yet a lot of founders are surprised by it.\n<blockquote>\n    I didn't realize how much of a role luck plays and how much is\n    outside of our control.\n</blockquote>\nIf you think about famous startups, it's pretty clear how big a\nrole luck plays.  Where would Microsoft be if IBM insisted on an\nexclusive license for DOS?<br/><br/>Why are founders fooled by this?  Business guys probably aren't,\nbut hackers are used to a world where skill is paramount, and you\nget what you deserve.\n<blockquote>\n    When we started our startup, I had bought the hype of the startup\n    founder dream: that this is a game of skill. It is, in some\n    ways.  Having skill is valuable. So is being determined as all\n    hell. But being lucky is the critical ingredient.\n</blockquote>\nActually the best model would be to say that the outcome is the\n<i>product</i> of skill, determination, and luck.  No matter how much\nskill and determination you have, if you roll a zero for luck, the\noutcome is zero.<br/><br/>These quotes about luck are not from founders whose startups failed.\nFounders who fail quickly tend to blame themselves.  Founders who\nsucceed quickly don't usually realize how lucky they were.  It's\nthe ones in the middle who see how important luck is.<br/><br/>\n<b>17. The Value of Community</b><br/><br/>A surprising number of founders said what surprised them most about\nstarting a startup was the value of community.  Some meant the\nmicro-community of YC founders:\n<blockquote>\n    The immense value of the peer group of YC companies, and facing\n    similar obstacles at similar times.\n</blockquote>\nwhich shouldn't be that surprising, because that's why it's structured\nthat way.  Others were surprised at the value of the startup community\nin the larger sense:\n<blockquote>\n    How advantageous it is to live in Silicon Valley, where you\n    can't help but hear all the cutting-edge tech and startup news,\n    and run into useful people constantly.\n</blockquote>\nThe specific thing that surprised them most was the general spirit\nof benevolence:\n<blockquote>\n    One of the most surprising things I saw was the willingness of\n    people to help us. Even people who had nothing to gain went out\n    of their way to help our startup succeed.\n</blockquote>\nand particularly how it extended all the way to the top:\n<blockquote>\n    The surprise for me was how accessible important and interesting\n    people are. It's amazing how easily you can reach out to people\n    and get immediate feedback.\n</blockquote>\nThis is one of the reasons I like being part of this world.  Creating\nwealth is not a zero-sum game, so you don't have to stab people in\nthe back to win.<br/><br/>\n<b>18. You Get No Respect</b><br/><br/>There was one surprise founders mentioned that I'd forgotten about:\nthat outside the startup world, startup founders get no respect.\n<blockquote>\n    In social settings, I found that I got a lot more respect when\n    I said, \"I worked on Microsoft Office\" instead of \"I work at a\n    small startup you've never heard of called x.\"\n</blockquote>\nPartly this is because the rest of the world just doesn't get\nstartups, and partly it's yet another consequence of the fact that\nmost good startup ideas seem bad:\n<blockquote>\n    If you pitch your idea to a random person, 95% of the time\n    you'll find the person instinctively thinks the idea will be a\n    flop and you're wasting your time (although they probably won't\n    say this directly).\n</blockquote>\nUnfortunately this extends even to dating:\n<blockquote>\n    It surprised me that being a startup founder does not get you\n    more admiration from women.\n</blockquote>\nI did know about that, but I'd forgotten.<br/><br/>\n<b>19. Things Change as You Grow</b><br/><br/>The last big surprise founders mentioned is how much things changed\nas they grew.  The biggest change was that you got to program even\nless:\n<blockquote>\n    Your job description as technical founder/CEO is completely\n    rewritten every 6-12 months. Less coding, more\n    managing/planning/company building, hiring, cleaning up messes,\n    and generally getting things in place for what needs to happen\n    a few months from now.\n</blockquote>\nIn particular, you now have to deal with employees, who often have\ndifferent motivations:\n<blockquote>\n    I knew the founder equation and had been focused on it since I\n    knew I wanted to start a startup as a 19 year old.  The employee\n    equation is quite different so it took me a while to get it\n    down.\n</blockquote>\nFortunately, it can become a lot less stressful once you reach\ncruising altitude:\n<blockquote>\n    I'd say 75% of the stress is gone now from when we first started.\n    Running a business is so much more enjoyable now.  We're more\n    confident. We're more patient. We fight less. We sleep more.\n</blockquote>\nI wish I could say it was this way for every startup that succeeded,\nbut 75% is probably on the high side.<br/><br/>\n<b>The Super-Pattern</b><br/><br/>There were a few other patterns, but these were the biggest.  One's\nfirst thought when looking at them all is to ask if there's a\nsuper-pattern, a pattern to the patterns.<br/><br/>I saw it immediately, and so did a YC founder I read the list to.\nThese are supposed to be the surprises, the things I didn't tell\npeople.  What do they all have in common?  They're all things I\ntell people.  If I wrote a new essay with the same outline as this\nthat wasn't summarizing the founders' responses, everyone would say\nI'd run out of ideas and was just repeating myself.<br/><br/>What is going on here?<br/><br/>When I look at the responses, the common theme is that\nstarting a startup was like I said, but way more so.  People just\ndon't seem to get how different it is till they do it.  Why?  The\nkey to that mystery is to ask, how different <i>from what?</i>  Once you\nphrase it that way, the answer is obvious: from a job.  Everyone's\nmodel of work is a job.  It's completely pervasive.  Even if you've\nnever had a job, your parents probably did, along with practically\nevery other adult you've met.<br/><br/>Unconsciously, everyone expects a startup to be like a job, and\nthat explains most of the surprises.  It explains why people are\nsurprised how carefully you have to choose cofounders and how hard\nyou have to work to maintain your relationship.  You don't have to\ndo that with coworkers.  It explains why the ups and downs are\nsurprisingly extreme.  In a job there is much more damping.  But\nit also explains why the good times are surprisingly good: most\npeople can't imagine such freedom.  As you go down the list, almost\nall the surprises are surprising in how much a startup differs from\na job.<br/><br/>You probably can't overcome anything so pervasive as the model of\nwork you grew up with.  So the best solution is to be consciously\naware of that.  As you go into a startup, you'll be thinking \"everyone\nsays it's really extreme.\"  Your next thought will probably be \"but\nI can't believe it will be that bad.\"  If you want to avoid being\nsurprised, the next thought after that should be: \"and the reason\nI can't believe it will be that bad is that my model of work is a\njob.\"<br/><br/><br/><br/><br/><br/><br/><br/>\n<b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>]\nGraduate students might understand it.  In grad school you\nalways feel you should be working on your thesis.  It doesn't end\nevery semester like classes do.<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>]\nThe best way for a startup to engage with slow-moving\norganizations is to fork off separate processes to deal with them.\nIt's when they're on the critical path that they kill youâ€”when\nyou depend on closing a deal to move forward.  It's worth taking\nextreme measures to avoid that.<br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>]\nThis is a variant of Reid Hoffman's principle that if you\naren't embarrassed by what you launch with, you waited too long to\nlaunch.<br/><br/>[<a name=\"f4n\"><font color=\"#000000\">4</font></a>]\nThe question to ask about what you've built is not whether it's\ngood, but whether it's good enough to supply the activation energy\nrequired.<br/><br/>[<a name=\"f5n\"><font color=\"#000000\">5</font></a>]\nSome VCs seem to understand technology because they actually\ndo, but that's overkill; the defining test is whether you can talk\nabout it well enough to convince limited partners.<br/><br/>[<a name=\"f6n\"><font color=\"#000000\">6</font></a>]\nThis is the same phenomenon you see with defense contractors\nor fashion brands.  The dumber the customers, the more effort you\nexpend on the process of selling things to them rather than making\nthe things you sell.<br/><br/><b>Thanks:</b> to Jessica Livingston for reading drafts of this,\nand to all the founders who responded to my email.<br/><br/><br/><br/><b>Related:</b><br/><br/></br></p></font>","date":"2009-10-01T00:00:00Z"}