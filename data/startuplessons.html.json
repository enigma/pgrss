{"href":"startuplessons.html","title":"The Hardest Lessons for Startups to Learn","content":"<font face=\"verdana\" size=\"2\">April 2006<br/><br/><i>(This essay is derived from a talk at the 2006 \n<a href=\"http://startupschool.org\">Startup School</a>.)</i><br/><br/>The startups we've funded so far are pretty quick, but they seem\nquicker to learn some lessons than others.  I think it's because\nsome things about startups are kind of counterintuitive.<br/><br/>We've now \n<a href=\"http://ycombinator.com\">invested</a> \nin enough companies that I've learned a trick\nfor determining which points are the counterintuitive ones:\nthey're the ones I have to keep repeating.<br/><br/>So I'm going to number these points, and maybe with future startups\nI'll be able to pull off a form of Huffman coding. I'll make them\nall read this, and then instead of nagging them in detail, I'll\njust be able to say: <i>number four!</i><br/><br/>\n<b>1. Release Early.</b><br/><br/>The thing I probably repeat most is this recipe for a startup: get\na version 1 out fast, then improve it based on users' reactions.<br/><br/>By \"release early\" I don't mean you should release something full\nof bugs, but that you should release something minimal.  Users hate\nbugs, but they don't seem to mind a minimal version 1, if there's\nmore coming soon.<br/><br/>There are several reasons it pays to get version 1 done fast.  One\nis that this is simply the right way to write software, whether for\na startup or not.  I've been repeating that since 1993, and I haven't seen much since to\ncontradict it.  I've seen a lot of startups die because they were\ntoo slow to release stuff, and none because they were too quick.\n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f1n\"><font color=\"#777777\">1</font></a>]</font><br/><br/>One of the things that will surprise you if you build something\npopular is that you won't know your users.  <a href=\"http://reddit.com\">Reddit</a> now has almost half a million\nunique visitors a month.  Who are all those people?  They have no\nidea.  No web startup does.  And since you don't know your users,\nit's dangerous to guess what they'll like.  Better to release\nsomething and let them tell you.<br/><br/><a href=\"http://wufoo.com\">Wufoo</a> took this to heart and released\ntheir form-builder before the underlying database.  You can't even\ndrive the thing yet, but 83,000 people came to sit in the driver's\nseat and hold the steering wheel.  And Wufoo got valuable feedback\nfrom it: Linux users complained they used too much Flash, so they\nrewrote their software not to.  If they'd waited to release everything\nat once, they wouldn't have discovered this problem till it was\nmore deeply wired in.<br/><br/>Even if you had no users, it would still be important to release\nquickly, because for a startup the initial release acts as a shakedown\ncruise.  If anything major is broken-- if the idea's no good,\nfor example, or the founders hate one another-- the stress of getting\nthat first version out will expose it.  And if you have such problems\nyou want to find them early.<br/><br/>Perhaps the most important reason to release early, though, is that\nit makes you work harder.  When you're working on something that\nisn't released, problems are intriguing.  In something that's out\nthere, problems are alarming.  There is a lot more urgency once you\nrelease.  And I think that's precisely why people put it off.  They\nknow they'll have to work a lot harder once they do. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f2n\"><font color=\"#777777\">2</font></a>]</font><br/><br/>\n<b>2. Keep Pumping Out Features.</b><br/><br/>Of course, \"release early\" has a second component, without which\nit would be bad advice.  If you're going to start with something\nthat doesn't do much, you better improve it fast.<br/><br/>What I find myself repeating is \"pump out features.\"  And this rule\nisn't just for the initial stages.  This is something all startups\nshould do for as long as they want to be considered startups.<br/><br/>I don't mean, of course, that you should make your application ever\nmore complex.  By \"feature\" I mean one unit of hacking-- one quantum\nof making users' lives better.<br/><br/>As with exercise, improvements beget improvements.  If you run every\nday, you'll probably feel like running tomorrow.  But if you skip\nrunning for a couple weeks, it will be an effort to drag yourself\nout.  So it is with hacking: the more ideas you implement, the more\nideas you'll have.  You should make your system better at least in\nsome small way every day or two.<br/><br/>This is not just a good way to get development done; it is also a\nform of marketing.  Users love a site that's constantly improving.\nIn fact, users expect a site to improve.  Imagine if you visited a\nsite that seemed very good, and then returned two months later and\nnot one thing had changed.  Wouldn't it start to seem lame? \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f3n\"><font color=\"#777777\">3</font></a>]</font><br/><br/>They'll like you even better when you improve in response to their\ncomments, because customers are used to companies ignoring them.\nIf you're the rare exception-- a company that actually listens--\nyou'll generate fanatical loyalty.  You won't need to advertise,\nbecause your users will do it for you.<br/><br/>This seems obvious too, so why do I have to keep repeating it?  I\nthink the problem here is that people get used to how things are.\nOnce a product gets past the stage where it has glaring flaws, you\nstart to get used to it, and gradually whatever features it happens\nto have become its identity.  For example, I doubt many people at\nYahoo (or Google for that matter) realized how much better web mail\ncould be till Paul Buchheit showed them.<br/><br/>I think the solution is to assume that anything you've made is far\nshort of what it could be.  Force yourself, as a sort of intellectual\nexercise, to keep thinking of improvements.  Ok, sure, what you\nhave is perfect.  But if you had to change something, what would\nit be?<br/><br/>If your product seems finished, there are two possible explanations:\n(a) it is finished, or (b) you lack imagination.  Experience suggests\n(b) is a thousand times more likely.<br/><br/>\n<b>3. Make Users Happy.</b><br/><br/>Improving constantly is an instance of a more general rule: make\nusers happy.  One thing all startups have in common is that they\ncan't force anyone to do anything.  They can't force anyone to use\ntheir software, and they can't force anyone to do deals with them.\nA startup has to sing for its supper.  That's why the successful\nones make great things.  They have to, or die.<br/><br/>When you're running a startup you feel like a little bit of debris\nblown about by powerful winds.  The most powerful wind is users.\nThey can either catch you and loft you up into the sky, as they did\nwith Google, or leave you flat on the pavement, as they do with\nmost startups.  Users are a fickle wind, but more powerful than any\nother.  If they take you up, no competitor can keep you down.<br/><br/>As a little piece of debris, the rational thing for you to do is\nnot to lie flat, but to curl yourself into a shape the wind will\ncatch.<br/><br/>I like the wind metaphor because it reminds you how impersonal the\nstream of traffic is.  The vast majority of people who visit your\nsite will be casual visitors.  It's them you have to design your\nsite for.  The people who really care will find what they want by\nthemselves.<br/><br/>The median visitor will arrive with their finger poised on the Back\nbutton.  Think about your own experience: most links you\nfollow lead to something lame.  Anyone who has used the web for\nmore than a couple weeks has been <i>trained</i> to click on Back after\nfollowing a link.  So your site has to say \"Wait!  Don't click on\nBack.  This site isn't lame.  Look at this, for example.\"<br/><br/>There are two things you have to do to make people pause.  The most\nimportant is to explain, as concisely as possible, what the hell\nyour site is about.  How often have you visited a site that seemed\nto assume you already knew what they did?  For example, the corporate\nsite that says the\ncompany makes\n<blockquote>\n  enterprise content management solutions for business that enable\n  organizations to unify people, content and processes to minimize\n  business risk, accelerate time-to-value and sustain lower total\n  cost of ownership.\n</blockquote>\nAn established company may get away with such an opaque description,\nbut no startup can.  A startup\nshould be able to explain in one or two sentences exactly what it\ndoes. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f4n\"><font color=\"#777777\">4</font></a>]</font>\nAnd not just to users.  You need this for everyone:\ninvestors, acquirers, partners, reporters, potential employees, and\neven current employees.  You probably shouldn't even start a company\nto do something that can't be described compellingly in one or two\nsentences.<br/><br/>The other thing I repeat is to give people everything you've got,\nright away.  If you have something impressive, try to put it on the\nfront page, because that's the only one most visitors will see.\nThough indeed there's a paradox here: the more you push the good\nstuff toward the front, the more likely visitors are to explore\nfurther. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f5n\"><font color=\"#777777\">5</font></a>]</font><br/><br/>In the best case these two suggestions get combined: you tell\nvisitors what your site is about by <i>showing</i> them.  One of the\nstandard pieces of advice in fiction writing is \"show, don't tell.\"\nDon't say that a character's angry; have him grind his teeth, or\nbreak his pencil in half.  Nothing will explain what your site does\nso well as using it.<br/><br/>The industry term here is \"conversion.\"  The job of your site is\nto convert casual visitors into users-- whatever your definition\nof a user is.  You can measure this in your growth rate.  Either\nyour site is catching on, or it isn't, and you must know which.  If\nyou have decent growth, you'll win in the end, no matter how obscure\nyou are now.  And if you don't, you need to fix something.<br/><br/>\n<b>4. Fear the Right Things.</b><br/><br/>Another thing I find myself saying a lot is \"don't worry.\"  Actually,\nit's more often \"don't worry about this; worry about that instead.\"\nStartups are right to be paranoid, but they sometimes fear the wrong\nthings.<br/><br/>Most visible disasters are not so alarming as they seem.  Disasters\nare normal in a startup: a founder quits, you discover a patent\nthat covers what you're doing, your servers keep crashing, you run\ninto an insoluble technical problem, you have to change your name,\na deal falls through-- these are all par for the course.  They won't\nkill you unless you let them.<br/><br/>Nor will most competitors.  A lot of startups worry \"what if Google\nbuilds something like us?\"  Actually big companies are not the ones\nyou have to worry about-- not even Google.  The people at Google\nare smart, but no smarter than you; they're not as motivated, because\nGoogle is not going to go out of business if this one product fails;\nand even at Google they have a lot of bureaucracy to slow them down.<br/><br/>What you should fear, as a startup, is not the established players,\nbut other startups you don't know exist yet.  They're way more\ndangerous than Google because, like you, they're cornered animals.<br/><br/>Looking just at existing competitors can give you a false sense of\nsecurity.  You should compete against what someone else <i>could</i> be\ndoing, not just what you can see people doing.  A corollary is that\nyou shouldn't relax just because you have no visible competitors\nyet.  No matter what your idea, there's someone else out there\nworking on the same thing.<br/><br/>That's the downside of it being easier to start a startup: more people\nare doing it.  But I disagree with Caterina Fake when she says that\nmakes this a bad time to start a startup.  More people are starting\nstartups, but not as many more as could.  Most college graduates\nstill think they have to get a job.  The average person can't ignore\nsomething that's been beaten into their head since they were three\njust because serving web pages recently got a lot cheaper.<br/><br/>And in any case, competitors are not the biggest threat.  Way more\nstartups hose themselves than get crushed by competitors.  There\nare a lot of ways to do it, but the three main ones are internal\ndisputes, inertia, and ignoring users.  Each is, by itself, enough\nto kill you.  But if I had to pick the worst, it would be ignoring\nusers.  If you want a recipe for a startup that's going to die,\nhere it is: a couple of founders who have some great idea they know\neveryone is going to love, and that's what they're going to build,\nno matter what.<br/><br/>Almost everyone's initial plan is broken.  If companies stuck to\ntheir initial plans, Microsoft would be selling programming languages,\nand Apple would be selling printed circuit boards.  In both cases\ntheir customers told them what their business should be-- and they\nwere smart enough to listen.<br/><br/>As Richard Feynman said, the imagination of nature is greater than\nthe imagination of man.  You'll find more interesting things by\nlooking at the world than you could ever produce just by thinking.\nThis principle is very powerful.  It's why the best abstract painting\nstill falls short of Leonardo, for example.  And it applies to\nstartups too.  No idea for a product could ever be so clever as the\nones you can discover by smashing a beam of prototypes into a beam\nof users.<br/><br/>\n<b>5. Commitment Is a Self-Fulfilling Prophecy.</b><br/><br/>I now have enough experience with startups to be able to say what\nthe most important quality is in a startup founder, and it's not\nwhat you might think.  The most important quality in a startup\nfounder is determination.  Not intelligence-- determination.<br/><br/>This is a little depressing.  I'd like to believe Viaweb succeeded\nbecause we were smart, not merely determined.  A lot of people in\nthe startup world want to believe that.  Not just founders, but\ninvestors too.  They like the idea of inhabiting a world ruled by\nintelligence.  And you can tell they really believe this, because\nit affects their investment decisions.<br/><br/>Time after time VCs invest in startups founded by eminent professors.\nThis may work in biotech, where a lot of startups simply commercialize\nexisting research, but in software you want to invest in students,\nnot professors.  Microsoft, Yahoo, and Google were all founded by\npeople who dropped out of school to do it.  What students lack in\nexperience they more than make up in dedication.<br/><br/>Of course, if you want to get rich, it's not enough merely to be\ndetermined.  You have to be smart too, right?  I'd like to think\nso, but I've had an experience that convinced me otherwise: I spent\nseveral years living in New York.<br/><br/>You can lose quite a lot in the brains department and it won't kill\nyou.  But lose even a little bit in the commitment department, and\nthat will kill you very rapidly.<br/><br/>Running a startup is like walking on your hands: it's possible, but\nit requires extraordinary effort.  If an ordinary employee were\nasked to do the things a startup founder has to, he'd be very\nindignant.  Imagine if you were hired at some big company, and in\naddition to writing software ten times faster than you'd ever had\nto before, they expected you to answer support calls, administer\nthe servers, design the web site, cold-call customers, find the\ncompany office space, and go out and get everyone lunch.<br/><br/>And to do all this not in the calm, womb-like atmosphere of a big\ncompany, but against a backdrop of constant disasters.  That's the\npart that really demands determination.  In a startup, there's\nalways some disaster happening.  So if you're the least bit inclined\nto find an excuse to quit, there's always one right there.<br/><br/>But if you lack commitment, chances are it will have been hurting\nyou long before you actually quit.  Everyone who deals with startups\nknows how important commitment is, so if they sense you're ambivalent,\nthey won't give you much attention.  If you lack commitment, you'll\njust find that for some mysterious reason good things happen to\nyour competitors but not to you.  If you lack commitment, it will\nseem to you that you're unlucky.<br/><br/>Whereas if you're determined to stick around, people will pay\nattention to you, because odds are they'll have to deal with you\nlater.  You're a local, not just a tourist, so everyone has to come\nto terms with you.<br/><br/>At Y Combinator we sometimes mistakenly fund teams who have the\nattitude that they're going to give this startup thing a shot for\nthree months, and if something great happens, they'll stick with\nit-- \"something great\" meaning either that someone wants to buy\nthem or invest millions of dollars in them.  But if this is your\nattitude, \"something great\" is very unlikely to happen to you,\nbecause both acquirers and investors judge you by your level of\ncommitment.<br/><br/>If an acquirer thinks you're going to stick around no matter what,\nthey'll be more likely to buy you, because if they don't and you\nstick around, you'll probably grow, your price will go up, and\nthey'll be left wishing they'd bought you earlier.  Ditto for\ninvestors.  What really motivates investors, even big VCs, is not\nthe hope of good returns, but the fear of missing out. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f6n\"><font color=\"#777777\">6</font></a>]</font>\nSo if\nyou make it clear you're going to succeed no matter what, and the only\nreason you need them is to make it happen a little faster, you're\nmuch more likely to get money.<br/><br/>You can't fake this.  The only way to convince everyone that you're\nready to fight to the death is actually to be ready to.<br/><br/>You have to be the right kind of determined, though.  I carefully\nchose the word determined rather than stubborn, because stubbornness\nis a disastrous quality in a startup.  You have to be determined,\nbut flexible, like a running back.  A successful running back doesn't\njust put his head down and try to run through people.  He improvises:\nif someone appears in front of him, he runs around them; if someone\ntries to grab him, he spins out of their grip; he'll even run in\nthe wrong direction briefly if that will help.  The one thing he'll\nnever do is stand still. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f7n\"><font color=\"#777777\">7</font></a>]</font><br/><br/>\n<b>6. There Is Always Room.</b><br/><br/>I was talking recently to a startup founder about whether it might\nbe good to add a social component to their software.  He said he\ndidn't think so, because the whole social thing was tapped out.\nReally?  So in a hundred years the only social networking sites\nwill be the Facebook, MySpace, Flickr, and Del.icio.us?  Not likely.<br/><br/>There is always room for new stuff.  At every point in history,\neven the darkest bits of the dark ages, people were discovering\nthings that made everyone say \"why didn't anyone think of that\nbefore?\"  We know this continued to be true up till 2004, when the\nFacebook was founded-- though strictly speaking someone else did\nthink of that.<br/><br/>The reason we don't see the opportunities all around us is that we\nadjust to however things are, and assume that's how things have to\nbe.  For example, it would seem crazy to most people to try to make\na better search engine than Google.  Surely that field, at least,\nis tapped out.  Really?  In a hundred years-- or even twenty-- are\npeople still going to search for information using something like\nthe current Google?  Even Google probably doesn't think that.<br/><br/>In particular, I don't think there's any limit to the number of\nstartups.  Sometimes you hear people saying \"All these guys starting\nstartups now are going to be disappointed. How many little startups\nare Google and Yahoo going to buy, after all?\" That sounds cleverly\nskeptical, but I can prove it's mistaken.  No one proposes that\nthere's some limit to the number of people who can be employed in\nan economy consisting of big, slow-moving companies with a couple\nthousand people each.  Why should there be any limit to the number\nwho could be employed by small, fast-moving companies with ten each?\nIt seems to me the only limit would be the number of people who\nwant to work that hard.<br/><br/>The limit on the number of startups is not the number that can get\nacquired by Google and Yahoo-- though it seems even that should\nbe unlimited, if the startups were actually worth buying-- but the\namount of wealth that can be created.  And I don't think there's\nany limit on that, except cosmological ones.<br/><br/>So for all practical purposes, there is no limit to the number of\nstartups.  Startups make wealth, which means they make things people\nwant, and if there's a limit on the number of things people want,\nwe are nowhere near it.  I still don't even have a flying car.<br/><br/>\n<b>7. Don't Get Your Hopes Up.</b><br/><br/>This is another one I've been repeating since long before Y Combinator.\nIt was practically the corporate motto at Viaweb.<br/><br/>Startup founders are naturally optimistic.  They wouldn't do it\notherwise.  But you should treat your optimism the way you'd treat\nthe core of a nuclear reactor: as a source of power that's also\nvery dangerous.  You have to build a shield around it, or it will\nfry you.<br/><br/>The shielding of a reactor is not uniform; the reactor would be\nuseless if it were.  It's pierced in a few places to let pipes in.\nAn optimism shield has to be pierced too.  I think the place to\ndraw the line is between what you expect of yourself, and what you\nexpect of other people.  It's ok to be optimistic about what you\ncan do, but assume the worst about machines and other people.<br/><br/>This is particularly necessary in a startup, because you tend to\nbe pushing the limits of whatever you're doing.  So things don't\nhappen in the smooth, predictable way they do in the rest of the\nworld.  Things change suddenly, and usually for the worse.<br/><br/>Shielding your optimism is nowhere more important than with deals.\nIf your startup is doing a deal, just assume it's not going to\nhappen.  The VCs who say they're going to invest in you aren't.\nThe company that says they're going to buy you isn't.  The big\ncustomer who wants to use your system in their whole company won't.\nThen if things work out you can be pleasantly surprised.<br/><br/>The reason I warn startups not to get their hopes up is not to save\nthem from being <i>disappointed</i> when things fall through.  It's\nfor a more practical reason: to prevent them from leaning their\ncompany against something that's going to fall over, taking them\nwith it.<br/><br/>For example, if someone says they want to invest in you, there's a\nnatural tendency to stop looking for other investors.  That's why\npeople proposing deals seem so positive: they <i>want</i> you to\nstop looking.  And you want to stop too, because doing deals is a\npain.  Raising money, in particular, is a huge time sink.  So you\nhave to consciously force yourself to keep looking.<br/><br/>Even if you ultimately do the first deal, it will be to your advantage\nto have kept looking, because you'll get better terms.  Deals are\ndynamic; unless you're negotiating with someone unusually honest,\nthere's not a single point where you shake hands and the deal's\ndone. There are usually a lot of subsidiary questions to be cleared\nup after the handshake, and if the other side senses weakness-- if\nthey sense you need this deal-- they will be very tempted to screw\nyou in the details.<br/><br/>VCs and corp dev guys are professional negotiators.  They're trained\nto take advantage of weakness. \n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f8n\"><font color=\"#777777\">8</font></a>]</font>\nSo while they're often nice\nguys, they just can't help it.  And as pros they do this more than\nyou.  So don't even try to bluff them.  The only way a startup can\nhave any leverage in a deal is genuinely not to need it.  And if\nyou don't believe in a deal, you'll be less likely to depend on it.<br/><br/>So I want to plant a hypnotic suggestion in your heads: when you\nhear someone say the words \"we want to invest in you\" or \"we want\nto acquire you,\" I want the following phrase to appear automatically\nin your head: <i>don't get your hopes up.</i>  Just continue running\nyour company as if this deal didn't exist.  Nothing is more likely\nto make it close.<br/><br/>The way to succeed in a startup is to focus on the goal of getting\nlots of users, and keep walking swiftly toward it while investors\nand acquirers scurry alongside trying to wave money in your face.<br/><br/>\n<b>Speed, not Money</b><br/><br/>The way I've described it, starting a startup sounds pretty stressful.\nIt is.  When I talk to the founders of the companies we've funded,\nthey all say the same thing: I knew it would be hard, but I didn't\nrealize it would be this hard.<br/><br/>So why do it?  It would be worth enduring a lot of pain and stress\nto do something grand or heroic, but just to make money?  Is making\nmoney really that important?<br/><br/>No, not really.  It seems ridiculous to me when people take business\ntoo seriously.  I regard making money as a boring errand to be got\nout of the way as soon as possible.  There is nothing grand or\nheroic about starting a startup per se.<br/><br/>So why do I spend so much time thinking about startups?  I'll tell\nyou why.  Economically, a startup is best seen not as a way to get\nrich, but as a way to work faster.  You have to make a living, and\na startup is a way to get that done quickly, instead of letting it\ndrag on through your whole life.\n<font color=\"#777777\">[<a href=\"https://paulgraham.com/startuplessons.html#f9n\"><font color=\"#777777\">9</font></a>]</font><br/><br/>We take it for granted most of the time, but human life is fairly\nmiraculous.  It is also palpably short.  You're given this marvellous\nthing, and then poof, it's taken away.  You can see why people\ninvent gods to explain it.  But even to people who don't believe\nin gods, life commands respect.  There are times in most of our\nlives when the days go by in a blur, and almost everyone has a\nsense, when this happens, of wasting something precious.  As Ben\nFranklin said, if you love life, don't waste time, because time is\nwhat life is made of.<br/><br/>So no, there's nothing particularly grand about making money.  That's\nnot what makes startups worth the trouble.  What's important about\nstartups is the speed.  By compressing the dull but necessary task\nof making a living into the smallest possible time, you show respect\nfor life, and there is something grand about that.<br/><br/><br/><br/><br/><br/><b>Notes</b><br/><br/>[<a name=\"f1n\"><font color=\"#000000\">1</font></a>]\nStartups can die from releasing something full of bugs, and not\nfixing them fast enough, but I don't know of any that died from\nreleasing something stable but minimal very early, then promptly\nimproving it.<br/><br/>[<a name=\"f2n\"><font color=\"#000000\">2</font></a>]\nI know this is why I haven't released Arc.  The moment I do,\nI'll have people nagging me for features.<br/><br/>[<a name=\"f3n\"><font color=\"#000000\">3</font></a>]\nA web site is different from a book or movie or desktop application\nin this respect.  Users judge a site not as a single snapshot, but\nas an animation with multiple frames.  Of the two, I'd say the rate of\nimprovement is more important to users than where you currently\nare.<br/><br/>[<a name=\"f4n\"><font color=\"#000000\">4</font></a>]\nIt should not always tell this to users, however.  For example,\nMySpace is basically a replacement mall for mallrats.  But it was\nwiser for them, initially, to pretend that the site was about bands.<br/><br/>[<a name=\"f5n\"><font color=\"#000000\">5</font></a>]\nSimilarly, don't make users register to try your site.  Maybe\nwhat you have is so valuable that visitors should gladly register\nto get at it.  But they've been trained to expect the opposite.\nMost of the things they've tried on the web have sucked-- and\nprobably especially those that made them register.<br/><br/>[<a name=\"f6n\"><font color=\"#000000\">6</font></a>]\nVCs have rational reasons for behaving this way. They don't\nmake their money (if they make money) off their median investments.\nIn a typical fund, half the companies fail, most of the rest generate\nmediocre returns, and one or two \"make the fund\" by succeeding\nspectacularly.  So if they miss just a few of the most promising\nopportunities, it could hose the whole fund.<br/><br/>[<a name=\"f7n\"><font color=\"#000000\">7</font></a>]\nThe attitude of a running back doesn't translate to soccer.\nThough it looks great when a forward dribbles past multiple defenders,\na player who persists in trying such things will do worse in the\nlong term than one who passes.<br/><br/>[<a name=\"f8n\"><font color=\"#000000\">8</font></a>]\nThe reason Y Combinator never negotiates valuations\nis that we're not professional negotiators, and don't want to turn\ninto them.<br/><br/>[<a name=\"f9n\"><font color=\"#000000\">9</font></a>]\nThere are two ways to do \n<a href=\"https://paulgraham.com/love.html\">work you love</a>: (a) to make money, then work\non what you love, or (b) to get a job where you get paid to work on\nstuff you love.  In practice the first phases of both\nconsist mostly of unedifying schleps, and in (b) the second phase is less\nsecure.<br/><br/><b>Thanks</b> to Sam Altman, Trevor Blackwell, Beau Hartshorne, Jessica \nLivingston, and Robert Morris for reading drafts of this.<br/><br/></font>","date":"2006-04-01T00:00:00Z"}