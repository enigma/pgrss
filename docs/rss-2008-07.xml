<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Paul Graham's Essays</title>
    <link>https://enigma.github.io/pgrss/rss.xml</link>
    <description>Paul Graham's Essays</description>
    <atom:link href="https://enigma.github.io/pgrss/rss-2008-07.xml" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Jul 2008 00:00:00 +0000</lastBuildDate>
    <item>
      <title>The Pooled-Risk Company Management Company</title>
      <link>https://paulgraham.com//prcmc.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2008&lt;br/&gt;&lt;br/&gt;At this year's startup school, David Heinemeier Hansson gave a
 &lt;a href="http://www.omnisio.com/startupschool08/david-heinemeier-hansson-at-startup-school-08"&gt;talk&lt;/a&gt;
in which he suggested that startup founders
should do things the old fashioned way.  Instead of hoping to get
rich by building a valuable company and then selling stock in a
"liquidity event," founders should start companies that make money
and live off the revenues.&lt;br/&gt;&lt;br/&gt;Sounds&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2008&lt;br/&gt;&lt;br/&gt;At this year's startup school, David Heinemeier Hansson gave a
 &lt;a href="http://www.omnisio.com/startupschool08/david-heinemeier-hansson-at-startup-school-08"&gt;talk&lt;/a&gt;
in which he suggested that startup founders
should do things the old fashioned way.  Instead of hoping to get
rich by building a valuable company and then selling stock in a
"liquidity event," founders should start companies that make money
and live off the revenues.&lt;br/&gt;&lt;br/&gt;Sounds like a good plan.  Let's think about the optimal way to do
this.&lt;br/&gt;&lt;br/&gt;One disadvantage of living off the revenues of your company is that
you have to keep running it.  And as anyone who runs their own
business can tell you, that requires your complete attention.  You
can't just start a business and check out once things are going
well, or they stop going well surprisingly fast.&lt;br/&gt;&lt;br/&gt;The main economic motives of startup founders seem to be freedom
and security.  They want enough money that (a) they don't have to
worry about running out of money and (b) they can spend their time
how they want.  Running your own business offers neither.  You
certainly don't have freedom: no boss is so demanding.  Nor do you
have security, because if you stop paying attention to the company,
its revenues go away, and with them your income.&lt;br/&gt;&lt;br/&gt;The best case, for most people, would be if you could hire someone
to manage the company for you once you'd grown it to a certain size.
Suppose you could find a really good manager.  Then you would have
both freedom and security.  You could pay as little attention to
the business as you wanted, knowing that your manager would keep
things running smoothly.  And that being so, revenues would continue
to flow in, so you'd have security as well.&lt;br/&gt;&lt;br/&gt;There will of course be some founders who wouldn't like that idea:
the ones who like running their company so much that there's nothing
else they'd rather do.  But this group must be small.  The way you
succeed in most businesses is to be fanatically attentive
to customers' needs.  What are the odds that your own desires would
coincide exactly with the demands of this powerful, external force?&lt;br/&gt;&lt;br/&gt;Sure, running your own company can be fairly interesting.  Viaweb
was more interesting than any job I'd had before.  And since I made
much more money from it, it offered the highest ratio of income to
boringness of anything I'd done, by orders of magnitude.  But was
it &lt;i&gt;the&lt;/i&gt; most interesting work I could imagine doing?  No.&lt;br/&gt;&lt;br/&gt;Whether the number of founders in the same position is asymptotic
or merely large, there are certainly a lot of them.  For them the
right approach would be to hand the company over to a professional
manager eventually, if they could find one who was good enough.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;So far so good.  But what if your manager was hit by a bus?  What
you really want is a management company to run your company for
you.  Then you don't depend on any one person.&lt;br/&gt;&lt;br/&gt;If you own rental property, there are companies you can hire to
manage it for you.  Some will do everything, from finding tenants
to fixing leaks.  Of course, running companies is a lot more
complicated than managing rental property, but let's suppose there
were management companies that could do it for you. They'd charge
a lot, but wouldn't it be worth it?  I'd sacrifice a large percentage
of the income for the extra peace of mind.&lt;br/&gt;&lt;br/&gt;I realize what I'm describing already sounds too good to be true, but I
can think of a way to make it even more attractive.  If
company management companies existed, there would be an additional
service they could offer clients: they could let them insure their
returns by pooling their risk.  After all, even a perfect manager can't save a company
when, as sometimes happens, its whole market dies, just as property
managers can't save you from the building burning down.  But a
company that managed a large enough number of companies could say
to all its clients: we'll combine the revenues from all your
companies, and pay you your proportionate share.&lt;br/&gt;&lt;br/&gt;If such management companies existed, they'd offer the maximum of
freedom and security.  Someone would run your company for you, and
you'd be protected even if it happened to die.&lt;br/&gt;&lt;br/&gt;Let's think about how such a management company might be organized.
The simplest way would be to have a new kind of stock representing
the total pool of companies they were managing.  When you signed
up, you'd trade your company's stock for shares of this pool, in
proportion to an estimate of your company's value that you'd both
agreed upon.  Then you'd automatically get your share of the returns
of the whole pool.&lt;br/&gt;&lt;br/&gt;The catch is that because this kind of trade would be hard to undo,
you couldn't switch management companies.  But there's a way they
could fix that: suppose all the company management companies got
together and agreed to allow their clients to exchange shares in
all their pools.  Then you could, in effect, simultaneously choose
all the management companies to run yours for you, in whatever
proportion you wanted, and change your mind later as often as you
wanted.&lt;br/&gt;&lt;br/&gt;If such pooled-risk company management companies existed, signing
up with one would seem the ideal plan for most people following the
route David advocated.&lt;br/&gt;&lt;br/&gt;Good news: they do exist.  What I've just
described is an acquisition by a public company.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Unfortunately, though public acquirers are structurally identical
to pooled-risk company management companies, they don't think of
themselves that way.  With a property management company, you can
just walk in whenever you want and say "manage my rental property
for me" and they'll do it.  Whereas acquirers are, as of this
writing, extremely fickle.  Sometimes they're in a buying mood and
they'll overpay enormously; other times they're not interested.
They're like property management companies run by madmen.  Or more
precisely, by Benjamin Graham's Mr. Market.&lt;br/&gt;&lt;br/&gt;So while on average public acquirers behave like pooled-risk company
managers, you need a window of several years to get average case
performance.  If you wait long enough (five years, say) you're
likely to hit an up cycle where some acquirer is hot to buy you.
But you can't choose when it happens.&lt;br/&gt;&lt;br/&gt;You can't assume investors will carry you for as long as you might
have to wait. Your company has to make money.  Opinions are divided
about how early to focus on that.  
&lt;a href="http://susanitsa.wordpress.com/2006/11/08/the-joe-kraus-qa-better-late/"&gt;Joe Kraus&lt;/a&gt; says you should try
charging customers right away.  And yet some of the most successful
startups, including Google, ignored revenue at first and concentrated
exclusively on development.  The answer probably depends on the
type of company you're starting.  I can imagine some where trying
to make sales would be a good heuristic for product design, and
others where it would just be a distraction.  The test is probably
whether it helps you to understand your users.&lt;br/&gt;&lt;br/&gt;You can choose whichever revenue strategy you think is best for the
type of company you're starting, so long as you're profitable.
Being profitable ensures you'll get at least the average of the
acquisition marketâ€”in which public companies do behave as pooled-risk
company management companies.&lt;br/&gt;&lt;br/&gt;David isn't mistaken in saying you should start a company to live
off its revenues.  The mistake is thinking this is somehow opposed
to starting a company and selling it.  In fact, for most people the
latter is merely the optimal case of the former.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, Michael
Mandel, Robert Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;
&lt;!--
http://news.ycombinator.com/item?id=254335"
--&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//prcmc.html</guid>
      <pubDate>Tue, 01 Jul 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Lies We Tell Kids</title>
      <link>https://paulgraham.com//lies.html</link>
      <description>&lt;font face="verdana" size="2"&gt;May 2008&lt;br/&gt;&lt;br/&gt;Adults lie constantly to kids.  I'm not saying we should stop, but
I think we should at least examine which lies we tell and why.&lt;br/&gt;&lt;br/&gt;There may also be a benefit to us.  We were all lied to as kids,
and some of the lies we were told still affect us.  So by studying
the ways adults lie to kids, we may be able to clear our heads of
lies we were told.&lt;br/&gt;&lt;br/&gt;I'm using the word "lie" in a very general sense: not just overt
falsehoods, but also a&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;May 2008&lt;br/&gt;&lt;br/&gt;Adults lie constantly to kids.  I'm not saying we should stop, but
I think we should at least examine which lies we tell and why.&lt;br/&gt;&lt;br/&gt;There may also be a benefit to us.  We were all lied to as kids,
and some of the lies we were told still affect us.  So by studying
the ways adults lie to kids, we may be able to clear our heads of
lies we were told.&lt;br/&gt;&lt;br/&gt;I'm using the word "lie" in a very general sense: not just overt
falsehoods, but also all the more subtle ways we mislead kids.
Though "lie" has negative connotations, I don't mean to suggest we
should never do thisâ€”just that we should pay attention when
we do.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One of the most remarkable things about the way we lie to kids is
how broad the conspiracy is.  All adults know what their culture 
lies to kids about: they're the questions you answer "Ask
your parents."  If a kid asked who won the World Series in 1982
or what the atomic weight of carbon was, you could just tell him.
But if a kid asks you "Is there a God?" or "What's a prostitute?"
you'll probably say "Ask your parents."&lt;br/&gt;&lt;br/&gt;Since we all agree, kids see few cracks in the view of the world
presented to them.  The biggest disagreements are between parents
and schools, but even those are small. Schools are careful what
they say about controversial topics, and if they do contradict what
parents want their kids to believe, parents either pressure the
school into keeping 
&lt;a href="http://www.google.com/search?q=parents+complain+inappropriate+book"&gt;quiet&lt;/a&gt; or move their kids to a new school.&lt;br/&gt;&lt;br/&gt;The conspiracy is so thorough that most kids who discover it do so
only by discovering internal contradictions in what they're told.
It can be traumatic for the ones who wake up during the operation.
Here's what happened to Einstein:
&lt;blockquote&gt;
  Through the reading of popular scientific books I soon reached
  the conviction that much in the stories of the Bible could not
  be true.  The consequence was a positively fanatic freethinking
  coupled with the impression that youth is intentionally being
  deceived by the state through lies: it was a crushing impression.
  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
I remember that feeling.  By 15 I was convinced the world was corrupt
from end to end.  That's why movies like &lt;i&gt;The Matrix&lt;/i&gt; have such
resonance.  Every kid grows up in a fake world.  In a way it would
be easier if the forces behind it were as clearly differentiated
as a bunch of evil machines, and one could make a clean break just by
taking a pill.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Protection&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If you ask adults why they lie to kids, the most common reason they
give is to protect them.  And kids do need protecting.  The environment
you want to create for a newborn child will be quite unlike the
streets of a big city.&lt;br/&gt;&lt;br/&gt;That seems so obvious it seems wrong to call it a lie.  It's certainly
not a bad lie to tell, to give a baby the impression the world is
quiet and warm and safe.  But this harmless type of lie can turn
sour if left unexamined.&lt;br/&gt;&lt;br/&gt;Imagine if you tried to keep someone in as protected an environment
as a newborn till age 18.  To mislead someone so grossly about the
world would seem not protection but abuse.  That's an extreme
example, of course; when parents do that sort of thing it becomes
national news.  But you see the same problem on a smaller scale in
the malaise teenagers feel in suburbia.&lt;br/&gt;&lt;br/&gt;The main purpose of suburbia is to provide a protected environment
for children to grow up in.  And it seems great for 10 year olds.
I liked living in suburbia when I was 10.  I didn't notice how
sterile it was.  My whole world was no bigger than a few friends'
houses I bicycled to and some woods I ran around in.  On a log scale
I was midway between crib and globe.  A suburban street was just
the right size.  But as I grew older, suburbia started to feel
suffocatingly fake.&lt;br/&gt;&lt;br/&gt;Life can be pretty good at 10 or 20, but it's often frustrating at
15.  This is too big a problem to solve here, but certainly one
reason life sucks at 15 is that kids are trapped in a world designed
for 10 year olds.&lt;br/&gt;&lt;br/&gt;What do parents hope to protect their children from by raising them
in suburbia?  A friend who moved out of Manhattan said merely that
her 3 year old daughter "saw too much."  Off the top of my head,
that might include: people who are high or drunk, poverty, madness,
gruesome medical conditions, sexual behavior of various degrees of
oddness, and violent anger.&lt;br/&gt;&lt;br/&gt;I think it's the anger that would worry me most if I had a 3 year
old.  I was 29 when I moved to New York and I was surprised even
then.  I wouldn't want a 3 year old to see some of the disputes I
saw.  It would be too frightening.  A lot of the things adults
conceal from smaller children, they conceal because they'd be
frightening, not because they want to conceal the existence of such
things.  Misleading the child is just a byproduct.&lt;br/&gt;&lt;br/&gt;This seems one of the most justifiable types of lying adults do to
kids.  But because the lies are indirect we don't keep a very strict
accounting of them.  Parents know they've concealed the facts about
sex, and many at some point sit their kids down and explain more.
But few tell their kids about the differences between the real world
and the cocoon they grew up in.  Combine this with the confidence
parents try to instill in their kids, and every year you get a new
crop of 18 year olds who think they know how to run the world.&lt;br/&gt;&lt;br/&gt;Don't all 18 year olds think they know how to run the world?  Actually
this seems to be a recent innovation, no more than about 100 years old.
In preindustrial times teenage kids were junior members of the adult
world and comparatively well aware of their shortcomings.  They
could see they weren't as strong or skillful as the village smith.
In past times people lied to kids about some things more than we
do now, but the lies implicit in an artificial, protected environment
are a recent invention.  Like a lot of new inventions, the rich got
this first.  Children of kings and great magnates were the first
to grow up out of touch with the world.  Suburbia means half the
population can live like kings in that respect.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Sex (and Drugs)&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'd have different worries about raising teenage kids in New York.
I'd worry less about what they'd see, and more about what they'd
do.  I went to college with a lot of kids who grew up in Manhattan,
and as a rule they seemed pretty jaded.  They seemed to have lost
their virginity at an average of about 14 and by college had tried
more drugs than I'd even heard of.&lt;br/&gt;&lt;br/&gt;The reasons parents don't want their teenage kids having sex are
complex.  There are some obvious dangers: pregnancy and sexually
transmitted diseases.  But those aren't the only reasons parents
don't want their kids having sex.  The average parents of a 14 year
old girl would hate the idea of her having sex even if there were
zero risk of pregnancy or sexually transmitted diseases.&lt;br/&gt;&lt;br/&gt;Kids can probably sense they aren't being told the whole story.
After all, pregnancy and sexually transmitted diseases are just as
much a problem for adults, and they have sex.&lt;br/&gt;&lt;br/&gt;What really bothers parents about their teenage kids having sex?
Their dislike of the idea is so visceral it's probably inborn.  But
if it's inborn it should be universal, and there are plenty of
societies where parents don't mind if their teenage kids have
sexâ€”indeed, where it's normal for 14 year olds to become
mothers.  So what's going on?  There does seem to be a universal
taboo against sex with prepubescent children.  One can imagine
evolutionary reasons for that.  And I think this is the main reason
parents in industrialized societies dislike teenage kids having
sex.  They still think of them as children, even though biologically
they're not, so the taboo against child sex still has force.&lt;br/&gt;&lt;br/&gt;One thing adults conceal about sex they also conceal about drugs:
that it can cause great pleasure.  That's what makes sex and drugs
so dangerous. The desire for them can cloud one's judgementâ€”which
is especially frightening when the judgement being clouded is the
already wretched judgement of a teenage kid.&lt;br/&gt;&lt;br/&gt;Here parents' desires conflict.  Older societies told kids they had
bad judgement, but modern parents want their children to be confident.
This may well be a better plan than the old one of putting them in
their place, but it has the side effect that after having implicitly
lied to kids about how good their judgement is, we then have to lie
again about all the things they might get into trouble with if they
believed us.&lt;br/&gt;&lt;br/&gt;If parents told their kids the truth about sex and drugs, it would
be: the reason you should avoid these things is that you have lousy
judgement.  People with twice your experience still get burned by
them.  But this may be one of those cases where the truth wouldn't
be convincing, because one of the symptoms of bad judgement is
believing you have good judgement.  When you're too weak to lift
something, you can tell, but when you're making a decision impetuously,
you're all the more sure of it.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Innocence&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Another reason parents don't want their kids having sex is that
they want to keep them innocent.  Adults have a certain model of
how kids are supposed to behave, and it's different from what they
expect of other adults.&lt;br/&gt;&lt;br/&gt;One of the most obvious differences is the words kids are allowed
to use.  Most parents use words when talking to other adults that
they wouldn't want their kids using.  They try to hide even the
existence of these words for as long as they can.  And this is
another of those conspiracies everyone participates in: everyone
knows you're not supposed to swear in front of kids.&lt;br/&gt;&lt;br/&gt;I've never heard more different explanations for anything parents
tell kids than why they shouldn't swear.  Every parent I know forbids
their children to swear, and yet no two of them have the same
justification.  It's clear most start with not wanting kids to
swear, then make up the reason afterward.&lt;br/&gt;&lt;br/&gt;So my theory about what's going on is that the &lt;i&gt;function&lt;/i&gt; of
swearwords is to mark the speaker as an adult.  There's no difference
in the meaning of "shit" and "poopoo."  So why should one be ok for
kids to say and one forbidden?  The only explanation is: by definition.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Why does it bother adults so much when kids do things reserved for
adults?   The idea of a foul-mouthed, cynical 10 year old leaning
against a lamppost with a cigarette hanging out of the corner of
his mouth is very disconcerting.  But why?&lt;br/&gt;&lt;br/&gt;One reason we want kids to be innocent is that we're programmed to
like certain kinds of helplessness.  I've several times heard mothers
say they deliberately refrained from correcting their young children's
mispronunciations because they were so cute.  And if you think about
it, cuteness is helplessness. Toys and cartoon characters meant to
be cute always have clueless expressions and stubby, ineffectual
limbs.&lt;br/&gt;&lt;br/&gt;It's not surprising we'd have an inborn desire to love and protect
helpless creatures, considering human offspring are so helpless for
so long.  Without the helplessness that makes kids cute, they'd be
very annoying.  They'd merely seem like incompetent adults.  But
there's more to it than that.  The reason our hypothetical jaded
10 year old bothers me so much is not just that he'd be annoying,
but that he'd have cut off his prospects for growth so early.  To
be jaded you have to think you know how the world works, and any
theory a 10 year old had about that would probably be a pretty
narrow one.&lt;br/&gt;&lt;br/&gt;Innocence is also open-mindedness.  We want kids to be innocent so
they can continue to learn.  Paradoxical as it sounds, there are
some kinds of knowledge that get in the way of other kinds of
knowledge.  If you're going to learn that the world is a brutal
place full of people trying to take advantage of one another, you're
better off learning it last.  Otherwise you won't bother learning
much more.&lt;br/&gt;&lt;br/&gt;Very smart adults often seem unusually innocent, and I don't think
this is a coincidence.  I think they've deliberately avoided learning
about certain things.  Certainly I do.  I used to think I wanted
to know everything.  Now I know I don't.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Death&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;After sex, death is the topic adults lie most conspicuously about
to kids.  Sex I believe they conceal because of deep taboos.  But
why do we conceal death from kids?   Probably because small children
are particularly horrified by it.  They want to feel safe, and death
is the ultimate threat.&lt;br/&gt;&lt;br/&gt;One of the most spectacular lies our parents told us was about the
death of our first cat.  Over the years, as we asked for more
details, they were compelled to invent more, so the story grew quite
elaborate.  The cat had died at the vet's office.  Of what?  Of the
anaesthesia itself.  Why was the cat at the vet's office?  To be
fixed.  And why had such a routine operation killed it?  It wasn't
the vet's fault; the cat had a congenitally weak heart; the anaesthesia
was too much for it; but there was no way anyone could have
known this in advance.  It was not till we were in our twenties
that the truth came out: my sister, then about three, had accidentally
stepped on the cat and broken its back.&lt;br/&gt;&lt;br/&gt;They didn't feel the need to tell us the cat was now happily in cat
heaven.  My parents never claimed that people or animals who died
had "gone to a better place," or that we'd meet them again.  It
didn't seem to harm us.&lt;br/&gt;&lt;br/&gt;My grandmother told us an edited version of the death of my
grandfather.  She said they'd been sitting reading one day, and
when she said something to him, he didn't answer.  He seemed to be
asleep, but when she tried to rouse him, she couldn't.  "He was
gone." Having a heart attack sounded like falling asleep.  Later I
learned it hadn't been so neat, and the heart attack had taken most
of a day to kill him.&lt;br/&gt;&lt;br/&gt;Along with such outright lies, there must have been a lot of changing
the subject when death came up.  I can't remember that, of course,
but I can infer it from the fact that I didn't really grasp I was
going to die till I was about 19.  How could I have missed something
so obvious for so long?  Now that I've seen parents managing the
subject, I can see how: questions about death are gently but firmly
turned aside.&lt;br/&gt;&lt;br/&gt;On this topic, especially, they're met half-way by kids.  Kids often
want to be lied to.  They want to believe they're living in a
comfortable, safe world as much as their parents want them to believe
it.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Identity&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some parents feel a strong adherence to an ethnic or religious group
and want their kids to feel it too.  This usually requires two
different kinds of lying: the first is to tell the child that he
or she is an X, and the second is whatever specific lies Xes
differentiate themselves by believing.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Telling a child they have a particular ethnic or religious identity
is one of the stickiest things you can tell them.  Almost anything
else you tell a kid, they can change their mind about later when
they start to think for themselves.  But if you tell a kid they're
a member of a certain group, that seems nearly impossible to shake.&lt;br/&gt;&lt;br/&gt;This despite the fact that it can be one of the most premeditated
lies parents tell.  When parents are of different religions, they'll
often agree between themselves that their children will be "raised
as Xes."  And it works. The kids obligingly grow up considering
themselves as Xes, despite the fact that if their parents had chosen
the other way, they'd have grown up considering themselves as Ys.&lt;br/&gt;&lt;br/&gt;One reason this works so well is the second kind of lie involved.
The truth is common property.  You can't distinguish your group by
doing things that are rational, and believing things that are true.
If you want to set yourself apart from other people, you have to
do things that are arbitrary, and believe things that are false.
And after having spent their whole lives doing things that are arbitrary
and believing things that are false, and being regarded as odd by
"outsiders" on that account, the cognitive dissonance pushing
children to regard themselves as Xes must be enormous.  If they
aren't an X, why are they attached to all these arbitrary beliefs
and customs?  If they aren't an X, why do all the non-Xes call them
one?&lt;br/&gt;&lt;br/&gt;This form of lie is not without its uses.  You can use it to carry
a payload of beneficial beliefs, and they will also become part of
the child's identity.  You can tell the child that in addition to
never wearing the color yellow, believing the world was created by
a giant rabbit, and always snapping their fingers before eating
fish, Xes are also particularly honest and industrious.  Then X
children will grow up feeling it's part of their identity to be
honest and industrious.&lt;br/&gt;&lt;br/&gt;This probably accounts for a lot of the spread of modern religions,
and explains why their doctrines are a combination of the useful
and the bizarre.  The bizarre half is what makes the religion stick,
and the useful half is the payload.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Authority&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;One of the least excusable reasons adults lie to kids is to maintain
power over them.  Sometimes these lies are truly sinister, like a
child molester telling his victims they'll get in trouble if they
tell anyone what happened to them.  Others seem more innocent; it
depends how badly adults lie to maintain their power, and what they
use it for.&lt;br/&gt;&lt;br/&gt;Most adults make some effort to conceal their flaws from children.
Usually their motives are mixed.  For example, a father who has an
affair generally conceals it from his children.  His motive is
partly that it would worry them, partly that this would introduce
the topic of sex, and partly (a larger part than he would admit)
that he doesn't want to tarnish himself in their eyes.&lt;br/&gt;&lt;br/&gt;If you want to learn what lies are told to kids, read almost any
book written to teach them about "issues."
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Peter Mayle wrote
one called &lt;i&gt;Why Are We Getting a Divorce?&lt;/i&gt;  It begins with the three
most important things to remember about divorce, one of which is:
&lt;blockquote&gt;
  You shouldn't put the blame on one parent, because divorce is
  never only one person's fault.
  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
Really?  When a man runs off with his secretary, is it always partly
his wife's fault?  But I can see why Mayle might have said this.
Maybe it's more important for kids to respect their parents than
to know the truth about them.&lt;br/&gt;&lt;br/&gt;But because adults conceal their flaws, and at the same time insist
on high standards of behavior for kids, a lot of kids grow up feeling
they fall hopelessly short.  They walk around feeling horribly evil
for having used a swearword, while in fact most of the adults around
them are doing much worse things.&lt;br/&gt;&lt;br/&gt;This happens in intellectual as well as moral questions.  The more
confident people are, the more willing they seem to be to answer a
question "I don't know."  Less confident people feel they have to
have an answer or they'll look bad.  My parents were pretty good
about admitting when they didn't know things, but I must have been
told a lot of lies of this type by teachers, because I rarely heard
a teacher say "I don't know" till I got to college.  I remember
because it was so surprising to hear someone say that in front of
a class.&lt;br/&gt;&lt;br/&gt;The first hint I had that teachers weren't omniscient came in sixth
grade, after my father contradicted something I'd learned in school.
When I protested that the teacher had said the opposite, my father
replied that the guy had no idea what he was talking aboutâ€”that
he was just an elementary school teacher, after all.&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Just&lt;/i&gt; a teacher?  The phrase seemed almost grammatically ill-formed.
Didn't teachers know everything about the subjects they taught?
And if not, why were they the ones teaching us?&lt;br/&gt;&lt;br/&gt;The sad fact is, US public school teachers don't generally understand
the stuff they're teaching very well.  There are some sterling
exceptions, but as a rule people planning to go into teaching rank
academically near the bottom of the college population.  So the
fact that I still thought at age 11 that teachers were infallible
shows what a job the system must have done on my brain.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;School&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;What kids get taught in school is a complex mix of lies.  The most
excusable are those told to simplify ideas to make them easy to
learn.  The problem is, a lot of propaganda gets slipped into the
curriculum in the name of simplification.&lt;br/&gt;&lt;br/&gt;Public school textbooks represent a compromise between what various
powerful groups want kids to be told.  The lies are rarely overt.
Usually they consist either of omissions or of over-emphasizing
certain topics at the expense of others.  The view of history we
got in elementary school was a crude hagiography, with at least one
representative of each powerful group.&lt;br/&gt;&lt;br/&gt;The famous scientists I remember were Einstein, Marie Curie, and
George Washington Carver.   Einstein was a big deal because his
work led to the atom bomb.  Marie Curie was involved with X-rays.
But I was mystified about Carver.  He seemed to have done stuff
with peanuts.&lt;br/&gt;&lt;br/&gt;It's obvious now that he was on the list because he was black (and
for that matter that Marie Curie was on it because she was a woman),
but as a kid I was confused for years about him.  I wonder if it
wouldn't have been better just to tell us the truth: that there
weren't any famous black scientists.  Ranking George Washington
Carver with Einstein misled us not only about science, but about
the obstacles blacks faced in his time.&lt;br/&gt;&lt;br/&gt;As subjects got softer, the lies got more frequent.  By the time
you got to politics and recent history, what we were taught was
pretty much pure propaganda.  For example, we were taught to regard
political leaders as saintsâ€”especially the recently martyred
Kennedy and King.  It was astonishing to learn later that they'd
both been serial womanizers, and that Kennedy was a speed freak to
boot.  (By the time King's plagiarism emerged, I'd lost the ability
to be surprised by the misdeeds of famous people.)&lt;br/&gt;&lt;br/&gt;I doubt you could teach kids recent history without teaching them
lies, because practically everyone who has anything to say about
it has some kind of spin to put on it.  Much recent history &lt;i&gt;consists&lt;/i&gt;
of spin.  It would probably be better just to teach them metafacts
like that.&lt;br/&gt;&lt;br/&gt;Probably the biggest lie told in schools, though, is that the way
to succeed is through following "the rules."  In fact most such
rules are just hacks to manage large groups efficiently.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Peace&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Of all the reasons we lie to kids, the most powerful is probably
the same mundane reason they lie to us.&lt;br/&gt;&lt;br/&gt;Often when we lie to people it's not part of any conscious strategy,
but because they'd react violently to the truth.  Kids, almost by
definition, lack self-control.  They react violently to thingsâ€”and
so they get lied to a lot. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/lies.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A few Thanksgivings ago, a friend of mine found himself in a situation
that perfectly illustrates the complex motives we have when we lie
to kids.  As the roast turkey appeared on the table, his alarmingly
perceptive 5 year old son suddenly asked if the turkey had wanted
to die.  Foreseeing disaster, my friend and his wife rapidly
improvised: yes, the turkey had wanted to die, and in fact had lived
its whole life with the aim of being their Thanksgiving dinner.
And that (phew) was the end of that.&lt;br/&gt;&lt;br/&gt;Whenever we lie to kids to protect them, we're usually also lying
to keep the peace.&lt;br/&gt;&lt;br/&gt;One consequence of this sort of calming lie is that we grow up
thinking horrible things are normal.  It's hard for us to feel a
sense of urgency as adults over something we've literally been
trained not to worry about.  When I was about 10 I saw a documentary
on pollution that put me into a panic.  It seemed the planet was
being irretrievably ruined.  I went to my mother afterward to ask
if this was so.  I don't remember what she said, but she made me
feel better, so I stopped worrying about it.&lt;br/&gt;&lt;br/&gt;That was probably the best way to handle a frightened 10 year old.
But we should understand the price.  This sort of lie is one of the
main reasons bad things persist: we're all trained to ignore them.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Detox&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A sprinter in a race almost immediately enters a state called "oxygen
debt."  His body switches to an emergency source of energy that's
faster than regular aerobic respiration.  But this process builds
up waste products that ultimately require extra oxygen to break
down, so at the end of the race he has to stop and pant for a while
to recover.&lt;br/&gt;&lt;br/&gt;We arrive at adulthood with a kind of truth debt.  We were told a
lot of lies to get us (and our parents) through our childhood.  Some
may have been necessary.  Some probably weren't.  But we all arrive
at adulthood with heads full of lies.&lt;br/&gt;&lt;br/&gt;There's never a point where the adults sit you down and explain all
the lies they told you.  They've forgotten most of them.  So if
you're going to clear these lies out of your head, you're going to
have to do it yourself.&lt;br/&gt;&lt;br/&gt;Few do.  Most people go through life with bits of packing material
adhering to their minds and never know it.  You probably never can
completely undo the effects of lies you were told as a kid, but
it's worth trying.  I've found that whenever I've been able to undo
a lie I was told, a lot of other things fell into place.&lt;br/&gt;&lt;br/&gt;Fortunately, once you arrive at adulthood you get a valuable new
resource you can use to figure out what lies you were told.  You're
now one of the liars.  You get to watch behind the scenes as adults
spin the world for the next generation of kids.&lt;br/&gt;&lt;br/&gt;The first step in clearing your head is to realize how far you are
from a neutral observer.  When I left high school I was, I thought,
a complete skeptic.  I'd realized high school was crap.  I thought
I was ready to question everything I knew.  But among the many other
things I was ignorant of was how much debris there already was in
my head.  It's not enough to consider your mind a blank slate.  You
have to consciously erase it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
One reason I stuck with such a brutally simple word is that
the lies we tell kids are probably not quite as harmless as we
think.  If you look at what adults told children in the past, it's
shocking how much they lied to them.  Like us, they did it with the
best intentions.  So if we think we're as open as one could reasonably
be with children, we're probably fooling ourselves.  Odds are people
in 100 years will be as shocked at some of the lies we tell as we
are at some of the lies people told 100 years ago.&lt;br/&gt;&lt;br/&gt;I can't predict which these will be, and I don't want to write an
essay that will seem dumb in 100 years.  So instead of using special
euphemisms for lies that seem excusable according to present fashions,
I'm just going to call all our lies lies.&lt;br/&gt;&lt;br/&gt;(I have omitted one type: lies told to play games with kids'
credulity.  These range from "make-believe," which is not really a
lie because it's told with a wink, to the frightening lies told by
older siblings.   There's not much to say about these: I wouldn't
want the first type to go away, and wouldn't expect the second type
to.)&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Calaprice, Alice (ed.), &lt;i&gt;The Quotable Einstein&lt;/i&gt;, Princeton
University Press, 1996.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
If you ask parents why kids shouldn't swear, the less educated
ones usually reply with some question-begging answer like "it's
inappropriate," while the more educated ones come up with elaborate
rationalizations.  In fact the less educated parents seem closer
to the truth.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
As a friend with small children pointed out, it's easy for small
children to consider themselves immortal, because time seems to
pass so slowly for them.  To a 3 year old, a day feels like a month
might to an adult.  So 80 years sounds to him like 2400 years would
to us.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
I realize I'm going to get endless grief for classifying religion
as a type of lie.  Usually people skirt that issue with some
equivocation implying that lies believed for a sufficiently long
time by sufficiently large numbers of people are immune to the usual
standards for truth.  But because I can't predict which lies future
generations will consider inexcusable, I can't safely omit any type
we tell.  Yes, it seems unlikely that religion will be out of fashion
in 100 years, but no more unlikely than it would have seemed to
someone in 1880 that schoolchildren in 1980 would be taught that
masturbation was perfectly normal and not to feel guilty about it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Unfortunately the payload can consist of bad customs as well
as good ones.  For example, there are certain qualities that some
groups in America consider "acting white."  In fact most of them
could as accurately be called "acting Japanese."  There's nothing
specifically white about such customs. They're common to all cultures
with long traditions of living in cities.  So it is probably a
losing bet for a group to consider behaving the opposite way as
part of its identity.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
In this context, "issues" basically means "things we're going
to lie to them about."  That's why there's a special name for these
topics.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
Mayle, Peter, &lt;i&gt;Why Are We Getting a Divorce?&lt;/i&gt;, Harmony, 1988.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
The ironic thing is, this is also the main reason kids lie to
adults.  If you freak out when people tell you alarming things,
they won't tell you them.  Teenagers don't tell their parents what
happened that night they were supposed to be staying at a friend's
house for the same reason parents don't tell 5 year olds the truth
about the Thanksgiving turkey.  They'd freak if they knew.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Marc Andreessen, Trevor Blackwell,
Patrick Collison, Jessica Livingston, Jackie McDonough, Robert
Morris, and David Sloo for reading drafts of this.  And since there
are some controversial ideas here, I should add that none of them
agreed with everything in it.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//lies.html</guid>
      <pubDate>Thu, 01 May 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Disconnecting Distraction</title>
      <link>https://paulgraham.com//distraction.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;i&gt;Note: The strategy described at the end of this essay didn't work.
It would work for a while, and then I'd gradually find myself
using the Internet on my work computer.  I'm trying other
strategies now, but I think this time I'll wait till I'm sure
they work before writing about them.&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;May 2008&lt;br/&gt;&lt;br/&gt;Procrastination feeds on distractions.  Most people find it
uncomfortable just to sit and do nothing; you avoid work by doing
something else.&lt;br/&gt;&amp;lt;br/&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;i&gt;Note: The strategy described at the end of this essay didn't work.
It would work for a while, and then I'd gradually find myself
using the Internet on my work computer.  I'm trying other
strategies now, but I think this time I'll wait till I'm sure
they work before writing about them.&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;May 2008&lt;br/&gt;&lt;br/&gt;Procrastination feeds on distractions.  Most people find it
uncomfortable just to sit and do nothing; you avoid work by doing
something else.&lt;br/&gt;&lt;br/&gt;So one way to beat procrastination is to starve it of distractions.
But that's not as straightforward as it sounds, because there are
people working hard to distract you.  Distraction is not a static
obstacle that you avoid like you might avoid a rock in the road.
Distraction seeks you out.&lt;br/&gt;&lt;br/&gt;Chesterfield described dirt as matter out of place.  Distracting
is, similarly, desirable at the wrong time.  And technology is
continually being refined to produce more and more desirable things.
Which means that as we learn to avoid one class of distractions,
new ones constantly appear, like drug-resistant bacteria.&lt;br/&gt;&lt;br/&gt;Television, for example, has after 50 years of refinement reached
the point where it's like visual crack.  I realized when I was 13
that TV was addictive, so I stopped watching it.  But I read recently
 that the average American watches 
&lt;a href="http://www.forbes.com/forbes/2003/0929/076.html"&gt;4 hours&lt;/a&gt; 
of TV a day.  A quarter
of their life.&lt;br/&gt;&lt;br/&gt;TV is in decline now, but only because people have found even more
addictive ways of wasting time.  And what's especially dangerous
is that many happen at your computer.  This is no accident.  An
ever larger percentage of office workers sit in front of computers
connected to the Internet, and distractions always evolve toward
the procrastinators.&lt;br/&gt;&lt;br/&gt;I remember when computers were, for me at least, exclusively for
work.  I might occasionally dial up a server to get mail or ftp
files, but most of the time I was offline.  All I could do was write
and program.  Now I feel as if someone snuck a television onto my
desk.  Terribly addictive things are just a click away.  Run into
an obstacle in what you're working on?  Hmm, I wonder what's new
online.  Better check.&lt;br/&gt;&lt;br/&gt;After years of carefully avoiding classic time sinks like TV, games,
and Usenet, I still managed to fall prey to distraction, because
I didn't realize that it evolves.  Something that used to be safe,
using the Internet, gradually became more and more dangerous.  Some
days I'd wake up, get a cup of tea and check the news, then check
email, then check the news again, then answer a few emails, then
suddenly notice it was almost lunchtime and I hadn't gotten any real
work done.  And this started to happen more and more often.&lt;br/&gt;&lt;br/&gt;It took me surprisingly long to realize how distracting the Internet
had become, because the problem was intermittent.  I ignored it the
way you let yourself ignore a bug that only appears intermittently.  When
I was in the middle of a project, distractions weren't really a
problem.  It was when I'd finished one project and was deciding
what to do next that they always bit me.&lt;br/&gt;&lt;br/&gt;Another reason it was hard to notice the danger of this new type
of distraction was that social customs hadn't yet caught up with
it.  If I'd spent a whole morning sitting on a sofa watching TV,
I'd have noticed very quickly.  That's a known danger sign, like
drinking alone.  But using the Internet still looked and felt a 
lot like work.&lt;br/&gt;&lt;br/&gt;Eventually, though, it became clear that the Internet had become so much
more distracting that I had to start treating it differently.
Basically, I had to add a new application to my list of known time
sinks: Firefox.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;The problem is a hard one to solve because most people still need
the Internet for some things.  If you drink too much, you can solve
that problem by stopping entirely.  But you can't solve the problem
of overeating by stopping eating.  I couldn't simply avoid the 
Internet entirely, as I'd done with previous time sinks.&lt;br/&gt;&lt;br/&gt;At first I tried rules.  For example, I'd tell myself I was only
going to use the Internet twice a day.  But these schemes never
worked for long.  Eventually something would come up that required
me to use it more than that.  And then I'd gradually slip back
into my old ways.&lt;br/&gt;&lt;br/&gt;Addictive things have to be treated as if they were sentient
adversariesâ€”as if there were a little man in your head always
cooking up the most plausible arguments for doing whatever you're
trying to stop doing.  If you leave a path to it, he'll find it.&lt;br/&gt;&lt;br/&gt;The key seems to be visibility.  The biggest ingredient in most bad habits
is denial.  So you have to make it so that you can't merely &lt;i&gt;slip&lt;/i&gt;
into doing the thing you're trying to avoid.  It has to set off
alarms.&lt;br/&gt;&lt;br/&gt;Maybe in the long term the right answer for dealing with Internet
distractions will be 
&lt;a href="http://rescuetime.com"&gt;software&lt;/a&gt; that watches and controls them.  But
in the meantime I've found a more drastic solution that definitely
works: to set up a separate computer for using the Internet.&lt;br/&gt;&lt;br/&gt;I now leave wifi turned off on my main computer except when I need
to transfer a file or edit a web page, and I have a separate laptop 
on the other side
of the room that I use to check mail or browse the web.  (Irony of
ironies, it's the computer Steve Huffman wrote Reddit on.  When
Steve and Alexis auctioned off their old laptops for charity, I
bought them for the Y Combinator museum.)&lt;br/&gt;&lt;br/&gt;My rule is that I can spend as much time online as I want, as long
as I do it on that computer.  And this turns out to be enough.  When
I have to sit on the other side of the room to check email or browse
the web, I become much more aware of it.  Sufficiently aware, in
my case at least, that it's hard to spend more than about an hour
a day online.&lt;br/&gt;&lt;br/&gt;And my main computer is now freed for work.  If you try this trick,
you'll probably be struck by how different it feels when your
computer is disconnected from the Internet.  It was alarming to me
how foreign it felt to sit in front of a computer that could
only be used for work, because that showed how much time I must
have been wasting.&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Wow.  All I can do at this computer is work.  Ok, I better work
then.&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;That's the good part.  Your old bad habits now help you to work.
You're used to sitting in front of that computer for hours at a
time.   But you can't browse the web or check email now.  What are
you going to do?  You can't just sit there.  So you start working.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//distraction.html</guid>
      <pubDate>Thu, 01 May 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Cities and Ambition</title>
      <link>https://paulgraham.com//cities.html</link>
      <description>&lt;font face="verdana" size="2"&gt;May 2008&lt;br/&gt;&lt;br/&gt;&lt;!-- &lt;table width=410 cellpadding=6 cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ffffdd&gt;
&lt;table width=100% cellpadding=0 cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ffffdd&gt;&lt;font size=2&gt;
"In Boston they ask, How much does he know? 
In New York, How much is he worth? 
In Philadelphia, Who were his parents?"&lt;br /&gt;&lt;br /&gt;- Mark Twain
&lt;/font&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
--&gt;
Great cities attract ambitious people.  You can sense it when you
walk around one.  In a hundred&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;May 2008&lt;br/&gt;&lt;br/&gt;&lt;!-- &lt;table width=410 cellpadding=6 cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ffffdd&gt;
&lt;table width=100% cellpadding=0 cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ffffdd&gt;&lt;font size=2&gt;
"In Boston they ask, How much does he know? 
In New York, How much is he worth? 
In Philadelphia, Who were his parents?"&lt;br /&gt;&lt;br /&gt;- Mark Twain
&lt;/font&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
--&gt;
Great cities attract ambitious people.  You can sense it when you
walk around one.  In a hundred subtle ways, the city sends you a
message: you could do more; you should try harder.&lt;br/&gt;&lt;br/&gt;The surprising thing is how different these messages can be.  New
York tells you, above all: you should make more money.  There are
other messages too, of course.  You should be hipper.  You should
be better looking.  But the clearest message is that you should be
richer.&lt;br/&gt;&lt;br/&gt;What I like about Boston (or rather Cambridge) is that the message
there is: you should be smarter.  You really should get around to
reading all those books you've been meaning to.&lt;br/&gt;&lt;br/&gt;When you ask what message a city sends, you sometimes get surprising
answers.  As much as they respect brains in Silicon Valley, the
message the Valley sends is: you should be more powerful.&lt;br/&gt;&lt;br/&gt;That's not quite the same message New York sends.  Power matters
in New York too of course, but New York is pretty impressed by a
billion dollars even if you merely inherited it.  In Silicon Valley
no one would care except a few real estate agents.  What matters
in Silicon Valley is how much effect you have on the world.  The
reason people there care about Larry and Sergey is not their wealth
but the fact that they control Google, which affects practically
everyone.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;How much does it matter what message a city sends?  Empirically,
the answer seems to be: a lot. You might think that if you had
enough strength of mind to do great things, you'd be able to transcend
your environment.  Where you live should make at most a couple
percent difference.  But if you look at the historical evidence,
it seems to matter more than that.  Most people who did great things
were clumped together in a few places where that sort of thing was
done at the time.&lt;br/&gt;&lt;br/&gt;You can see how powerful cities are from something I wrote about
&lt;a href="https://paulgraham.com/taste.html"&gt;earlier&lt;/a&gt;: the case of the Milanese Leonardo.  
Practically every
fifteenth century Italian painter you've heard of was from Florence,
even though Milan was just as big.  People in Florence weren't
genetically different, so you have to assume there was someone born
in Milan with as much natural ability as Leonardo.  What happened
to him?&lt;br/&gt;&lt;br/&gt;If even someone with the same natural ability as Leonardo
couldn't beat the force of environment, do you suppose you can?&lt;br/&gt;&lt;br/&gt;I don't.  I'm fairly stubborn, but I wouldn't try to fight this
force.  I'd rather use it.  So I've thought a lot about where to
live.&lt;br/&gt;&lt;br/&gt;I'd always imagined Berkeley would be the ideal place â€” that
it would basically be Cambridge with good weather.  But when I
finally tried living there a couple years ago, it turned out not
to be.  The message Berkeley sends is: you should live better.  Life
in Berkeley is very civilized.  It's probably the place in America
where someone from Northern Europe would feel most at home.  But
it's not humming with ambition.&lt;br/&gt;&lt;br/&gt;In retrospect it shouldn't have been surprising that a place so
pleasant would attract people interested above all in quality of
life.  Cambridge with good weather, it turns out, is not Cambridge.
The people you find in Cambridge are not there by accident.  You
have to make sacrifices to live there.  It's expensive and somewhat
grubby, and the weather's often bad.  So the kind of people you
find in Cambridge are the kind of people who want to live where the
smartest people are, even if that means living in an expensive,
grubby place with bad weather.&lt;br/&gt;&lt;br/&gt;As of this writing, Cambridge seems to be the intellectual capital
of the world.  I realize that seems a preposterous claim.  What
makes it true is that it's more preposterous to claim about anywhere
else.  American universities currently seem to be the best, judging
from the flow of ambitious students.  And what US city has a stronger
claim?  New York?  A fair number of smart people, but diluted by a
much larger number of neanderthals in suits.  The Bay Area has a
lot of smart people too, but again, diluted;  there are two great
universities, but they're far apart.  Harvard and MIT are practically
adjacent by West Coast standards, and they're surrounded by about
20 other colleges and universities.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/cities.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Cambridge as a result feels like a town whose main industry is
ideas, while New York's is finance and Silicon Valley's is startups.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;When you talk about cities in the sense we are, what you're really
talking about is collections of people.  For a long time cities
were the only large collections of people, so you could use the two
ideas interchangeably.  But we can see how much things are changing
from the examples I've mentioned.  New York is a classic great city.
But Cambridge is just part of a city, and Silicon Valley is not
even that.  (San Jose is not, as it sometimes claims, the capital
of Silicon Valley.  It's just 178 square miles at one end of it.)&lt;br/&gt;&lt;br/&gt;Maybe the Internet will change things further.  Maybe one day the
most important community you belong to will be a virtual one, and
it won't matter where you live physically.  But I wouldn't bet on
it.  The physical world is very high bandwidth, and some of the
ways cities send you messages are quite subtle.&lt;br/&gt;&lt;br/&gt;One of the exhilarating things about coming back to Cambridge every
spring is walking through the streets at dusk, when you can see
into the houses.  When you walk through Palo Alto in the evening,
you see nothing but the blue glow of TVs.  In Cambridge you see
shelves full of promising-looking books.  Palo Alto was probably
much like Cambridge in 1960, but you'd never guess now that there
was a university nearby.  Now it's just one of the richer neighborhoods
in Silicon Valley. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/cities.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A city speaks to you mostly by accident â€” in things you see
through windows, in conversations you overhear.  It's not something
you have to seek out, but something you can't turn off.  One of the
occupational hazards of living in Cambridge is overhearing the
conversations of people who use interrogative intonation in declarative
sentences.  But on average I'll take Cambridge conversations over
New York or Silicon Valley ones.&lt;br/&gt;&lt;br/&gt;A friend who moved to Silicon Valley in the late 90s said the worst
thing about living there was the low quality of the eavesdropping.
At the time I thought she was being deliberately eccentric. Sure,
it can be interesting to eavesdrop on people, but is good quality
eavesdropping so important that it would affect where you chose to
live?  Now I understand what she meant.  The conversations you
overhear tell you what sort of people you're among.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;No matter how determined you are, it's hard not to be influenced
by the people around you.  It's not so much that you do whatever a
city expects of you, but that you get discouraged when no one around
you cares about the same things you do.&lt;br/&gt;&lt;br/&gt;There's an imbalance between encouragement and discouragement like
that between gaining and losing money.  Most people overvalue
negative amounts of money: they'll work much harder to avoid losing
a dollar than to gain one.  Similarly, although there are plenty of
people strong enough to resist doing something just because that's
what one is supposed to do where they happen to be, there are few
strong enough to keep working on something no one around them cares
about.&lt;br/&gt;&lt;br/&gt;Because ambitions are to some extent incompatible and admiration
is a zero-sum game, each city tends to focus on one type of ambition.
The reason Cambridge is the intellectual capital is not just that
there's a concentration of smart people there, but that there's
nothing &lt;i&gt;else&lt;/i&gt; people there care about more.  Professors in
New York and the Bay area are second class citizens â€” till they
start hedge funds or startups respectively.&lt;br/&gt;&lt;br/&gt;This suggests an answer to a question people in New York have
wondered about since the Bubble: whether New York could grow into
a startup hub to rival Silicon Valley.  One reason that's unlikely
is that someone starting a startup in New York would feel like a
second class citizen. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/cities.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
There's already something else people in New York admire more.&lt;br/&gt;&lt;br/&gt;In the long term, that could be a bad thing for New York.  The power
of an important new technology does eventually convert to money.
So by caring more about money and less about power than Silicon
Valley, New York is recognizing the same thing, but slower.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/cities.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
And in fact it has been losing to Silicon Valley at its own game:
the ratio of New York to California residents in the Forbes 400 has
decreased from 1.45 (81:56) when the list was first published in
1982 to .83 (73:88) in 2007.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Not all cities send a message.  Only those that are centers for
some type of ambition do.  And it can be hard to tell exactly what
message a city sends without living there.  I understand the messages
of New York, Cambridge, and Silicon Valley because I've lived for
several years in each of them.  DC and LA seem to send messages
too, but I haven't spent long enough in either to say for sure what
they are.&lt;br/&gt;&lt;br/&gt;The big thing in LA seems to be fame.  There's an A List of people
who are most in demand right now, and what's most admired is to be
on it, or friends with those who are.  Beneath that, the message is
much like New York's, though perhaps with more emphasis on physical
attractiveness.&lt;br/&gt;&lt;br/&gt;In DC the message seems to be that the most important thing is who
you know.  You want to be an insider.  In practice this seems to
work much as in LA.  There's an A List and you want to be on it or
close to those who are.  The only difference is how the A List is
selected.  And even that is not that different.&lt;br/&gt;&lt;br/&gt;At the moment, San Francisco's message seems to be the same as
Berkeley's: you should live better.  But this will change if enough
startups choose SF over the Valley.  During the Bubble that was a
predictor of failure â€” a self-indulgent choice, like buying
expensive office furniture.  Even now I'm suspicious when startups
choose SF.  But if enough good ones do, it stops being a self-indulgent
choice, because the center of gravity of Silicon Valley will shift
there.&lt;br/&gt;&lt;br/&gt;I haven't found anything like Cambridge for intellectual ambition.
Oxford and Cambridge (England) feel like Ithaca or Hanover: the
message is there, but not as strong.&lt;br/&gt;&lt;br/&gt;Paris was once a great intellectual center.  If you went there in
1300, it might have sent the message Cambridge does now.  But I
tried living there for a bit last year, and the ambitions of the
inhabitants are not intellectual ones.  The message Paris sends now
is: do things with style.  I liked that, actually.  Paris is the
only city I've lived in where people genuinely cared about art.  In
America only a few rich people buy original art, and even the more
sophisticated ones rarely get past judging it by the brand name of
the artist.  But looking through windows at dusk in Paris you can
see that people there actually care what paintings look like.
Visually, Paris has the best eavesdropping I know. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/cities.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;There's one more message I've heard from cities: in London you can
still (barely) hear the message that one should be more aristocratic.
If you listen for it you can also hear it in Paris, New York, and
Boston.  But this message is everywhere very faint.  It would have
been strong 100 years ago, but now I probably wouldn't have picked
it up at all if I hadn't deliberately tuned in to that wavelength
to see if there was any signal left.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;So far the complete list of messages I've picked up from cities is:
wealth, style, hipness, physical attractiveness, fame, political
power, economic power, intelligence, social class, and quality of
life.&lt;br/&gt;&lt;br/&gt;My immediate reaction to this list is that it makes me slightly
queasy.  I'd always considered ambition a good thing, but I realize
now that was because I'd always implicitly understood it to mean
ambition in the areas I cared about.  When you list everything
ambitious people are ambitious about, it's not so pretty.&lt;br/&gt;&lt;br/&gt;On closer examination I see a couple things on the list that are
surprising in the light of history.  For example, physical
attractiveness wouldn't have been there 100 years ago (though it
might have been 2400 years ago).  It has always mattered for women,
but in the late twentieth century it seems to have started to matter
for men as well.  I'm not sure why â€” probably some combination
of the increasing power of women, the increasing influence of actors
as models, and the fact that so many people work in offices now:
you can't show off by wearing clothes too fancy to wear in a factory,
so you have to show off with your body instead.&lt;br/&gt;&lt;br/&gt;Hipness is another thing you wouldn't have seen on the list 100
years ago.  Or wouldn't you?  What it means is to know what's what.
So maybe it has simply replaced the component of social class that
consisted of being "au fait."  That could explain why hipness seems
particularly admired in London: it's version 2 of the traditional
English delight in obscure codes that only insiders understand.&lt;br/&gt;&lt;br/&gt;Economic power would have been on the list 100 years ago, but what
we mean by it is changing.  It used to mean the control of vast
human and material resources.  But increasingly it means the ability
to direct the course of technology, and some of the people in a
position to do that are not even rich â€” leaders of important
open source projects, for example.  The Captains of Industry of
times past had laboratories full of clever people cooking up new
technologies for them.  The new breed are themselves those people.&lt;br/&gt;&lt;br/&gt;As this force gets more attention, another is dropping off the list:
social class.  I think the two changes are related.  Economic power,
wealth, and social class are just names for the same thing at
different stages in its life: economic power converts to wealth,
and wealth to social class.  So the focus of admiration is simply
shifting upstream.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Does anyone who wants to do great work have to live in a great city?
No; all great cities inspire some sort of ambition, but they aren't
the only places that do.  For some kinds of work, all you need is
a handful of talented colleagues.&lt;br/&gt;&lt;br/&gt;What cities provide is an audience, and a funnel for peers.  These
aren't so critical in something like math or physics, where no
audience matters except your peers, and judging ability is sufficiently
straightforward that hiring and admissions committees can do it
reliably.  In a field like math or physics all you need is a
department with the right colleagues in it.  It could be anywhere â€” in
Los Alamos, New Mexico, for example.&lt;br/&gt;&lt;br/&gt;It's in fields like the arts or writing or technology that the
larger environment matters.  In these the best practitioners aren't
conveniently collected in a few top university departments and
research labs â€” partly because talent is harder to judge, and
partly because people pay for these things, so one doesn't need to
rely on teaching or research funding to support oneself.  It's in
these more chaotic fields that it helps most to be in a great city:
you need the encouragement of feeling that people around you care
about the kind of work you do, and since you have to find peers for
yourself, you need the much larger intake mechanism of a great city.&lt;br/&gt;&lt;br/&gt;You don't have to live in a great city your whole life to benefit
from it.  The critical years seem to be the early and middle ones
of your career.  Clearly you don't have to grow up in a great city.
Nor does it seem to matter if you go to college in one.  To most
college students a world of a few thousand people seems big enough.
Plus in college you don't yet have to face the hardest kind of
work â€” discovering new problems to solve.&lt;br/&gt;&lt;br/&gt;It's when you move on to the next and much harder step that it helps
most to be in a place where you can find peers and encouragement.
You seem to be able to leave, if you want, once you've found both.
The Impressionists show the typical pattern: they were born all
over France (Pissarro was born in the Carribbean) and died all over
France, but what defined them were the years they spent together
in Paris.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Unless you're sure what you want to do and where the leading center
for it is, your best bet is probably to try living in several
places when you're young.  You can never tell what message a city
sends till you live there, or even whether it still sends one.
Often your information will be wrong: I tried living in Florence
when I was 25, thinking it would be an art center, but it turned
out I was 450 years too late.&lt;br/&gt;&lt;br/&gt;Even when a city is still a live center of ambition, you won't know
for sure whether its message will resonate with you till you hear
it.  When I moved to New York, I was very excited at first.  It's
an exciting place.  So it took me quite a while to realize I just
wasn't like the people there.  I kept searching for the Cambridge
of New York.  It turned out it was way, way uptown: an hour uptown
by air.&lt;br/&gt;&lt;br/&gt;Some people know at 16 what sort of work they're going to do, but
in most ambitious kids, ambition seems to precede anything specific
to be ambitious about.  They know they want to do something great.
They just haven't decided yet whether they're going to be a rock
star or a brain surgeon.  There's nothing wrong with that.  But it
means if you have this most common type of ambition, you'll probably
have to figure out where to live by trial and error.  You'll
probably have to find the city where you feel at home to know what sort of
ambition you have.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
This is one of the advantages of not having the universities
in your country controlled by the government.  When governments
decide how to allocate resources, political deal-making causes
things to be spread out geographically.  No central goverment would
put its two best universities in the same town, unless it was the
capital (which would cause other problems).  But scholars seem to
like to cluster together as much as people in any other field, and
when given the freedom to they derive the same advantages from it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
There are still a few old professors in Palo Alto, but one by
one they die and their houses are transformed by developers into
McMansions and sold to VPs of Bus Dev.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
How many times have you read about startup founders who continued
to live inexpensively as their companies took off?  Who continued
to dress in jeans and t-shirts, to drive the old car they had in
grad school, and so on?  If you did that in New York, people would
treat you like shit.  If you walk into a fancy restaurant in San
Francisco wearing a jeans and a t-shirt, they're nice to you; who
knows who you might be?  Not in New York.&lt;br/&gt;&lt;br/&gt;One sign of a city's potential as a technology center is the number
of restaurants that still require jackets for men.  According to
Zagat's there are none in San Francisco, LA, Boston, or Seattle, 
4 in DC, 6 in Chicago, 8 in London, 13 in New York, and 20 in Paris.&lt;br/&gt;&lt;br/&gt;(Zagat's lists the Ritz Carlton Dining Room in SF as requiring jackets
but I couldn't believe it, so I called to check and in fact they
don't. Apparently there's only one restaurant left on the entire West
Coast that still requires jackets: The French Laundry in Napa Valley.)&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Ideas are one step upstream from economic power, so it's
conceivable that intellectual centers like Cambridge will one day
have an edge over Silicon Valley like the one the Valley has over
New York.&lt;br/&gt;&lt;br/&gt;This seems unlikely at the moment; if anything Boston is falling
further and further behind.  The only reason I even mention the
possibility is that the path from ideas to startups has recently
been getting smoother.  It's a lot easier now for a couple of hackers
with no business experience to start a startup than it was 10 years
ago.  If you extrapolate another 20 years, maybe the balance of
power will start to shift back.  I wouldn't bet on it, but I wouldn't
bet against it either.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
If Paris is where people care most about art, why is New York
the center of gravity of the art business?  Because in the twentieth
century, art as brand split apart from art as stuff.  New York is
where the richest buyers are, but all they demand from art is brand,
and since you can base brand on anything with a sufficiently
identifiable style, you may as well use the local stuff.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Sarah Harlin, Jessica Livingston,
Jackie McDonough, Robert Morris, and David Sloo for reading drafts
of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//cities.html</guid>
      <pubDate>Thu, 01 May 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Some Heroes</title>
      <link>https://paulgraham.com//heroes.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2008&lt;br/&gt;&lt;br/&gt;There are some topics I save up because they'll be so much fun to
write about.  This is one of them: a list of my heroes.&lt;br/&gt;&lt;br/&gt;I'm not claiming this is a list of the &lt;i&gt;n&lt;/i&gt; most admirable people.
Who could make such a list, even if they wanted to?&lt;br/&gt;&lt;br/&gt;Einstein isn't on the list, for example, even though he probably
deserves to be on any shortlist of admirable people.  I once asked
a physicist friend if Einstein was really as smart as h&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2008&lt;br/&gt;&lt;br/&gt;There are some topics I save up because they'll be so much fun to
write about.  This is one of them: a list of my heroes.&lt;br/&gt;&lt;br/&gt;I'm not claiming this is a list of the &lt;i&gt;n&lt;/i&gt; most admirable people.
Who could make such a list, even if they wanted to?&lt;br/&gt;&lt;br/&gt;Einstein isn't on the list, for example, even though he probably
deserves to be on any shortlist of admirable people.  I once asked
a physicist friend if Einstein was really as smart as his fame
implies, and she said that yes, he was.  So why isn't he on the
list?  Because I had to ask.  This is a list of people who've
influenced me, not people who would have if I understood their work.&lt;br/&gt;&lt;br/&gt;My test was to think of someone and ask "is this person my
hero?"  It often returned surprising answers.  For example,
it returned false for Montaigne, who was arguably the inventor of
the essay.  Why?  When I thought
about what it meant to call someone a hero, it meant I'd decide what
to do by asking what they'd do in the same situation.  That's a 
stricter standard than admiration.&lt;br/&gt;&lt;br/&gt;After I made the list, I looked to see if there was a pattern, and
there was, a very clear one.  Everyone on the list had two qualities:
they cared almost excessively about their work, and they were
absolutely honest.  By honest I don't mean trustworthy so much as
that they never pander: they never say or do something because
that's what the audience wants.  They are all fundamentally subversive
for this reason, though they conceal it to varying degrees.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Jack Lambert&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I grew up in Pittsburgh in the 1970s.  Unless you were there it's
hard to imagine how that town felt about the Steelers.   Locally,
all the news was bad.  The steel industry was dying.  But the
Steelers were the best team in football â€” and moreover, in a
way that seemed to reflect the personality of the city.  They didn't
do anything fancy.  They just got the job done.&lt;br/&gt;&lt;br/&gt;Other players were more famous: Terry Bradshaw, Franco Harris, Lynn
Swann.  But they played offense, and you always get more attention
for that.  It seemed to me as a twelve year old football expert
that the best of them all was 
&lt;a href="http://en.wikipedia.org/wiki/Jack_Lambert_(American_football_player)"&gt;Jack Lambert&lt;/a&gt;.  And what made him so
good was that he was utterly relentless.  He didn't just care about
playing well; he cared almost too much.  He seemed to regard it as
a personal insult when someone from the other team had possession
of the ball on his side of the line of scrimmage.&lt;br/&gt;&lt;br/&gt;The suburbs of Pittsburgh in the 1970s were a pretty dull place.
School was boring.  All the adults around were bored with their
jobs working for big companies. Everything that came to us through
the mass media was (a) blandly uniform and (b) produced elsewhere.
Jack Lambert was the exception.  He was like nothing else I'd seen.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Kenneth Clark&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Kenneth Clark is the best nonfiction writer I know of, on any
subject.  Most people who write about art history don't really like
art; you can tell from a thousand little signs.  But Clark did, and
not just intellectually, but the way one anticipates a delicious
dinner.&lt;br/&gt;&lt;br/&gt;What really makes him stand out, though, is the quality of his
ideas.  His style is deceptively casual, but there is more in 
his books than in a library
of art monographs.  Reading 
&lt;a href="http://www.amazon.com/Nude-Study-Ideal-Form/dp/0691017883"&gt;&lt;i&gt;The Nude&lt;/i&gt;&lt;/a&gt; is like a ride in a
Ferrari.  Just as you're getting settled, you're slammed back in
your seat by the acceleration.  Before you can adjust, you're thrown
sideways as the car screeches into the first turn.  His brain throws
off ideas almost too fast to grasp them.  Finally at the end of the
chapter you come to a halt, with your eyes wide and a big smile on
your face.&lt;br/&gt;&lt;br/&gt;Kenneth Clark was a star in his day, thanks to the documentary
series 
&lt;a href="http://www.amazon.com/dp/B000F0UUKA"&gt;&lt;i&gt;Civilisation&lt;/i&gt;&lt;/a&gt;.  And if you read only one book about
art history, 
&lt;a href="http://www.abebooks.com/servlet/SearchResults?an=clark&amp;amp;sts=t&amp;amp;tn=civilisation"&gt;&lt;i&gt;Civilisation&lt;/i&gt;&lt;/a&gt; is the one I'd recommend.  It's
much better than the drab Sears Catalogs of art that undergraduates
are forced to buy for Art History 101.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Larry Mihalko&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of people have a great teacher at some point in their childhood.
Larry Mihalko was mine.  When I look back it's like there's a line
drawn between third and fourth grade.  After Mr. Mihalko, everything
was different.&lt;br/&gt;&lt;br/&gt;Why?  First of all, he was intellectually curious.  I had a few
other teachers who were smart, but I wouldn't describe them as
intellectually curious.  In retrospect, he was out of place as an
elementary school teacher, and I think he knew it.  That must have
been hard for him, but it was wonderful for us, his students.  His
class was a constant adventure.  I used to like going to school
every day.&lt;br/&gt;&lt;br/&gt;The other thing that made him different was that he liked us.  Kids
are good at telling that.  The other teachers were at best benevolently
indifferent.  But Mr.  Mihalko seemed like he actually wanted to
be our friend.  On the last day of fourth grade, he got out one of
the heavy school record players and played James Taylor's "You've
Got a Friend" to us.  Just call out my name, and you know wherever
I am, I'll come running.  He died at 59 of lung cancer.  I've never
cried like I cried at his funeral.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Leonardo&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;One of the things I've learned about making things that I didn't
realize when I was a kid is that much of the best stuff isn't made
for audiences, but for oneself.  You see paintings and drawings in
museums and imagine they were made for you to look at.  Actually a
lot of the best ones were made as a way of exploring the world, not
as a way to please other people.  The best of these explorations
are sometimes more pleasing than stuff made explicitly to please.&lt;br/&gt;&lt;br/&gt;Leonardo did a lot of things.  One of his most admirable qualities
was that he did so many different things that were admirable.  What
people know of him now is his paintings and his more flamboyant
inventions, like flying machines.  That makes him seem like some
kind of dreamer who sketched artists' conceptions of rocket ships
on the side.  In fact he made a large number of far more practical
technical discoveries.  He was as good an engineer as a painter.&lt;br/&gt;&lt;br/&gt;His most impressive work, to me, is his 
&lt;a href="https://sep.turbifycdn.com/ty/cdn/paulgraham/leonardo-skull.jpg?t=1688221954&amp;amp;"&gt;drawings&lt;/a&gt;.  They're clearly
made more as a way of studying the world than producing something
beautiful. And yet they can hold their own with any work of art
ever made.  No one else, before or since, was that good when no one
was looking.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Robert Morris&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Robert Morris has a very unusual quality: he's never wrong.  It
might seem this would require you to be omniscient, but actually
it's surprisingly easy. Don't say anything unless you're fairly
sure of it.  If you're not omniscient, you just don't end up saying
much.&lt;br/&gt;&lt;br/&gt;More precisely, the trick is to pay careful attention to how you
qualify what you say.  By using this trick, Robert has, as far as
I know, managed to be mistaken only once, and that was when he was
an undergrad.  When the Mac came out, he said that little desktop
computers would never be suitable for real hacking.&lt;br/&gt;&lt;br/&gt;It's wrong to call it a trick in his case, though.  If it were a
conscious trick, he would have slipped in a moment of excitement.
With Robert this quality is wired-in.  He has an almost superhuman
integrity.  He's not just generally correct, but also correct about
how correct he is.&lt;br/&gt;&lt;br/&gt;You'd think it would be such a great thing never to be wrong that
everyone would do this.  It doesn't seem like that much extra work
to pay as much attention to the error on an idea as to the idea
itself.  And yet practically no one does.  I know how hard it is,
because since meeting Robert I've tried to do in software what he
seems to do in hardware.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;P. G. Wodehouse&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;People are finally starting to admit that Wodehouse was a great
writer.  If you want to be thought a great novelist in your own
time, you have to sound intellectual.  If what you write is popular,
or entertaining, or funny, you're ipso facto suspect.  That makes
Wodehouse doubly impressive, because it meant that to write as he
wanted to, he had to commit to being despised in his own lifetime.&lt;br/&gt;&lt;br/&gt;Evelyn Waugh called him a great writer, but to most people at the
time that would have read as a chivalrous or deliberately perverse
gesture. At the time any random autobiographical novel by a recent
college grad could count on more respectful treatment from the
literary establishment.&lt;br/&gt;&lt;br/&gt;Wodehouse may have begun with simple atoms, but the way he composed
them into molecules was near faultless.  His rhythm in particular.
It makes me self-conscious to write about it.  I can think of only
two other writers who came near him for style: Evelyn Waugh and
Nancy Mitford.  Those three used the English language like they
owned it.&lt;br/&gt;&lt;br/&gt;But Wodehouse has something neither of them did.  He's at ease.
Evelyn Waugh and Nancy Mitford cared what other people thought of
them: he wanted to seem aristocratic; she was afraid she wasn't
smart enough.  But Wodehouse didn't give a damn what anyone thought
of him.  He wrote exactly what he wanted.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Alexander Calder&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Calder's on this list because he makes me happy.  Can his work stand
up to Leonardo's?  Probably not.  There might not be anything from
the 20th Century that can.  But what was good about Modernism,
Calder had, and had in a way that he made seem effortless.&lt;br/&gt;&lt;br/&gt;What was good about Modernism was its freshness.  Art became stuffy
in the nineteenth century.  The paintings that were popular at the
time were mostly the art equivalent of McMansionsâ€”big,
pretentious, and fake.  Modernism meant starting over, making things
with the same earnest motives that children might.  The artists who
benefited most from this were the ones who had preserved a child's
confidence, like Klee and Calder.&lt;br/&gt;&lt;br/&gt;Klee was impressive because he could work in so many different
styles.  But between the two I like Calder better, because his work
seemed happier.  Ultimately the point of art is to engage the viewer.
It's hard to predict what will; often something that seems interesting
at first will bore you after a month.  Calder's 
&lt;a href="https://www.flickr.com/photos/uergevich/7029234689/"&gt;sculptures&lt;/a&gt; never
get boring.  They just sit there quietly radiating optimism, like
a battery that never runs out.  As far as I can tell from books and
photographs, the happiness of Calder's work is his own happiness
showing through.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Jane Austen&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Everyone admires Jane Austen.  Add my name to the list.  To me she
seems the best novelist of all time.&lt;br/&gt;&lt;br/&gt;I'm interested in how things work.  When I read most novels, I pay
as much attention to the author's choices as to the story.  But in
her novels I can't see the gears at work.  Though I'd really like
to know how she does what she does, I can't figure it out, because
she's so good that her stories don't seem made up.  I feel like I'm
reading a description of something that actually happened.&lt;br/&gt;&lt;br/&gt;I used to read a lot of novels when I was younger.  I can't read
most anymore, because they don't have enough information in them.
Novels seem so impoverished compared to history and biography.  But 
reading Austen is like reading
nonfiction.  She writes so well you don't even notice her.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;John McCarthy&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;John McCarthy invented Lisp, the field of (or at least the term)
artificial intelligence, and was an early member of both of the top
two computer science departments, MIT and Stanford.  No one would
dispute that he's one of the greats, but he's an especial hero to
me because of 
&lt;a href="https://paulgraham.com/rootsoflisp.html"&gt;Lisp&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;It's hard for us now to understand what a conceptual leap that was
at the time.  Paradoxically, one of the reasons his achievement is
hard to appreciate is that it was so successful.  Practically every
programming language invented in the last 20 years includes ideas
from Lisp, and each year the median language gets more Lisplike.&lt;br/&gt;&lt;br/&gt;In 1958 these ideas were anything but obvious.  In 1958 there seem
to have been two ways of thinking about programming.  Some people
thought of it as math, and proved things about Turing Machines.
Others thought of it as a way to get things done, and designed
languages all too influenced by the technology of the day.  McCarthy
alone bridged the gap.  He designed a language that was math.  But
designed is not really the word; discovered is more like it.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;The Spitfire&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;As I was making this list I found myself thinking of people like
&lt;a href="http://en.wikipedia.org/wiki/Douglas_Bader"&gt;Douglas Bader&lt;/a&gt; 
and 
&lt;a href="http://en.wikipedia.org/wiki/R._J._Mitchell"&gt;R.J. Mitchell&lt;/a&gt;
 and 
&lt;a href="http://www.amazon.com/Spitfire-Pilots-Story-Crecy-Cover/dp/0947554726"&gt;Jeffrey Quill&lt;/a&gt; and I realized
that though all of them had done many things in their lives, there
was one factor above all that connected them: the Spitfire.&lt;br/&gt;&lt;br/&gt;This is supposed to be a list of heroes.  How can a machine be on
it?  Because that machine was not just a machine.  It was a lens
of heroes.  Extraordinary devotion went into it, and extraordinary
courage came out.&lt;br/&gt;&lt;br/&gt;It's a cliche to call World War II a contest between good and evil,
but between fighter designs, it really was.  The Spitfire's original
nemesis, the ME 109, was a brutally practical plane.  It was a
killing machine.  The Spitfire was optimism embodied.  And not just
in its beautiful lines: it was at the edge of what could be
manufactured.  But taking the high road worked.  In the air, beauty
had the edge, just.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Steve Jobs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;People alive when Kennedy was killed  usually remember exactly where
they were when they heard about it.  I remember exactly where I was
when a friend asked if I'd heard Steve Jobs had cancer.  It was
like the floor dropped out.   A few seconds later she told me that
it was a rare operable type, and that he'd be ok.  But those seconds
seemed long.&lt;br/&gt;&lt;br/&gt;I wasn't sure whether to include Jobs on this list.  A lot of people
at Apple seem to be afraid of him, which is a bad sign.  But he
compels admiration.&lt;br/&gt;&lt;br/&gt;There's no name for what Steve Jobs is, because there hasn't been
anyone quite like him before.  He doesn't design Apple's products
himself.  Historically the closest analogy to what he does are the
great Renaissance patrons of the arts.  As the CEO of a company,
that makes him unique.&lt;br/&gt;&lt;br/&gt;Most CEOs delegate 
&lt;a href="https://paulgraham.com/taste.html"&gt;taste&lt;/a&gt; to a subordinate.
The 
&lt;a href="https://paulgraham.com/gh.html"&gt;design paradox&lt;/a&gt;
 means they're choosing more or less at random.  But Steve
Jobs actually has taste himself â€” such good taste that he's shown
the world how much more important taste is than they realized.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Isaac Newton&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Newton has a strange role in my pantheon of heroes: he's the one I
reproach myself with.  He worked on big things, at least for part
of his life.  It's so easy to get distracted working on small stuff.
The questions you're answering are pleasantly familiar.  You get
immediate rewards â€” in fact, you get bigger rewards in your
time if you work on matters of passing importance.  But I'm
uncomfortably aware that this is the route to well-deserved obscurity.&lt;br/&gt;&lt;br/&gt;To do really great things, you have to seek out questions people
didn't even realize were questions.  There have probably been other
people who did this as well as Newton, for their time, but Newton
is my model of this kind of thought.  I can just begin to understand
what it must have felt like for him.&lt;br/&gt;&lt;br/&gt;You only get one life.  Why not do something huge?  The phrase "paradigm
shift" is overused now, but Kuhn was onto something.  And you know
more are out there, separated from us by what will later seem a
surprisingly thin wall of laziness and stupidity.  If we work like
Newton.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, and Jackie McDonough for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//heroes.html</guid>
      <pubDate>Tue, 01 Apr 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why There Aren't More Googles</title>
      <link>https://paulgraham.com//googles.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
April 2008&lt;br/&gt;&lt;br/&gt;Umair Haque 
&amp;lt;a href="http://discussionleader.hbsp.com/haque/2008/04/i_&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
April 2008&lt;br/&gt;&lt;br/&gt;Umair Haque 
&lt;a href="http://discussionleader.hbsp.com/haque/2008/04/i_agree_and_i.html"&gt;wrote&lt;/a&gt; recently that the reason there aren't more Googles is
that most startups get bought before they can change the world.
&lt;blockquote&gt;
  Google, despite serious interest from Microsoft and Yahooâ€”what
  must have seemed like lucrative interest at the timeâ€”didn't
  sell out. Google might simply have been nothing but Yahoo's or
  MSN's search box.&lt;br&gt;&lt;br/&gt;Why isn't it? Because Google had a deeply felt sense of purpose:
  a conviction to change the world for the better.
&lt;/br&gt;&lt;/blockquote&gt;
This has a nice sound to it, but it isn't true. 
Google's founders were willing to sell early on.
They just wanted more than acquirers were willing to pay.&lt;br/&gt;&lt;br/&gt;It was the same with Facebook.  They would have sold, but Yahoo blew it 
by offering too little.&lt;br/&gt;&lt;br/&gt;Tip for acquirers: when a startup turns you down, consider raising
your offer, because there's a good chance the outrageous price they 
want will later seem a bargain. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/googles.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;From the evidence I've seen so far,
startups that turn down acquisition offers usually end up doing better.  
Not always, but usually there's a bigger offer coming, or
perhaps even an IPO.&lt;br/&gt;&lt;br/&gt;Of course, the reason startups do better when they turn down
acquisition offers is not necessarily that all such offers undervalue
startups.  More likely the reason is that the kind of founders who
have the balls to turn down a big offer also tend to be very
successful.  That spirit is exactly what you want in a startup.&lt;br/&gt;&lt;br/&gt;While I'm sure Larry and Sergey do want to change the world, at
least now, the reason Google survived to become a big, independent
company is the same reason Facebook has so far remained independent:
acquirers underestimated them.&lt;br/&gt;&lt;br/&gt;Corporate M&amp;amp;A is a strange business in that respect.  They consistently
lose the best deals, because turning down reasonable offers is the
most reliable test you could invent for whether a startup will make
it big.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;VCs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So what's the real reason there aren't more Googles?  Curiously
enough, it's the same reason Google and Facebook have remained
independent: money guys undervalue the most innovative startups.&lt;br/&gt;&lt;br/&gt;The reason there aren't more Googles is not that investors encourage
innovative startups to sell out, but that they won't even fund them.
I've learned a lot about VCs during the 3 years we've been doing Y
Combinator, because we often have to work quite closely with them.
The most surprising thing I've learned is how conservative they
are.  VC firms present an image of boldly encouraging innovation.
Only a handful actually do, and even they are more conservative in
reality than you'd guess from reading their sites.&lt;br/&gt;&lt;br/&gt;I used to think of VCs as piratical: bold but unscrupulous.  On
closer acquaintance they turn out to be more like bureaucrats.
They're more upstanding than I used to think (the good ones, at
least), but less bold.  Maybe the VC industry has changed.  Maybe
they used to be bolder.  
But I suspect it's the startup world that has
changed, not them.  The low cost of starting a startup means the
average good bet is a riskier one, but most existing VC firms still
operate as if they were investing in hardware startups in 1985.&lt;br/&gt;&lt;br/&gt;Howard Aiken said "Don't worry about people stealing your ideas.
If your ideas are any good, you'll have to ram them down people's
throats." I have a similar feeling when I'm trying to convince VCs
to invest in startups Y Combinator has funded.  They're terrified
of really novel ideas, unless the founders are good enough salesmen
to compensate.&lt;br/&gt;&lt;br/&gt;But it's the bold ideas that generate the biggest returns.  Any
really good new idea will seem bad to most people; otherwise someone
would already be doing it.  And
yet most VCs are driven by consensus, not just within their firms,
but within the VC community.  The biggest factor determining how a
VC will feel about your startup is how other VCs feel about it.  I
doubt they realize it, but this algorithm guarantees they'll miss
all the very best ideas.  The more people who have to like a new
idea, the more outliers you lose.&lt;br/&gt;&lt;br/&gt;Whoever the next Google is, they're probably being told right now
by VCs to come back when they have more "traction."&lt;br/&gt;&lt;br/&gt;Why are VCs so conservative?  It's probably a combination of factors.
The large size of their investments makes them conservative.
Plus they're investing other people's money, which makes
them worry they'll get in trouble if they do something risky and
it fails.  Plus most of them are money guys rather than technical
guys, so they don't understand what the startups they're investing
in do.&lt;br/&gt;&lt;br/&gt;&lt;a name="next"&gt;&lt;b&gt;What's Next&lt;/b&gt;&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;The exciting thing about market economies is that stupidity equals
opportunity.  And so it is in this case.  There is a huge, unexploited
opportunity in startup investing.  Y Combinator funds startups at
the very beginning.  VCs will fund them once they're already starting
to succeed.  But between the two there is a substantial gap.&lt;br/&gt;&lt;br/&gt;There are companies that will give $20k to a startup that has nothing
more than the founders, and there are companies that will give $2
million to a startup that's already taking off,
but there aren't enough investors who will give $200k to a startup
that seems very promising but still has some things to figure out.
This territory is occupied mostly by
individual angel investorsâ€”people like Andy Bechtolsheim, who
gave Google $100k when they seemed promising but still had some
things to figure out. I like angels, but there just aren't enough
of them, and investing is for most of them a part time job.&lt;br/&gt;&lt;br/&gt;And yet as it gets cheaper to start startups, this sparsely occupied
territory is becoming more and more valuable.   Nowadays a lot of
startups don't want to raise multi-million dollar series A rounds.
They don't need that much money, and they don't want the hassles
that come with it.  The median startup coming out of Y Combinator
wants to raise $250-500k.  When they go to VC firms they have to
ask for more because they know VCs aren't interested in such small
deals.&lt;br/&gt;&lt;br/&gt;VCs are money managers.  They're looking for ways to put large sums
to work.  But the startup world is evolving away from their current
model.&lt;br/&gt;&lt;br/&gt;Startups have gotten cheaper.  That means they want less money, but
also that there are more of them.  So you can still get large returns
on large amounts of money; you just have to spread it more broadly.&lt;br/&gt;&lt;br/&gt;I've tried to explain this to VC firms.  Instead of making one $2
million investment, make five $400k investments.  Would that mean
sitting on too many boards?  Don't sit on their boards.  Would that
mean too much due diligence?  Do less.  If you're investing at a
tenth the valuation, you only have to be a tenth as sure.&lt;br/&gt;&lt;br/&gt;It seems obvious.  But I've proposed to several VC firms that they
set aside some money and designate one partner to make more, smaller
bets, and they react as if I'd proposed the partners all get nose
rings.  It's remarkable how wedded they are to their standard m.o.&lt;br/&gt;&lt;br/&gt;But there is a big opportunity here, and one way or the other it's
going to get filled.  Either VCs will evolve down into this gap or,
more likely, new investors will appear to fill it.  That will be a
good thing when it happens, because these new investors will be
compelled by the structure of the investments they make to be ten
times bolder than present day VCs.  And that will get us a lot more
Googles.  At least, as long as acquirers remain stupid.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Another tip: If you want to get all that value, don't destroy the
startup after you buy it.  Give the founders enough autonomy that
they can grow the acquisition into what it would have become.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, David Hornik, Jessica 
Livingston, Robert Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//googles.html</guid>
      <pubDate>Tue, 01 Apr 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Be Good</title>
      <link>https://paulgraham.com//good.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2008&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at the 2008 Startup School.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;About a month after we started Y Combinator we came up with the
phrase that became our motto: Make something people want.  We've
learned a lot since then, but if I were choosing now that's still
the one I'd pick.&lt;br/&gt;&lt;br/&gt;Another thing we tell founders is not to worry too much about the
business model, at least at first.  Not because making money is
unimportant, but b&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2008&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at the 2008 Startup School.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;About a month after we started Y Combinator we came up with the
phrase that became our motto: Make something people want.  We've
learned a lot since then, but if I were choosing now that's still
the one I'd pick.&lt;br/&gt;&lt;br/&gt;Another thing we tell founders is not to worry too much about the
business model, at least at first.  Not because making money is
unimportant, but because it's so much easier than building something
great.&lt;br/&gt;&lt;br/&gt;A couple weeks ago I realized that if you put those two ideas
together, you get something surprising.  Make something people want.
Don't worry too much about making money.  What you've got is a
description of a charity.&lt;br/&gt;&lt;br/&gt;When you get an unexpected result like this, it could either be a
bug or a new discovery.  Either businesses aren't supposed to be
like charities, and we've proven by reductio ad absurdum that one
or both of the principles we began with is false.  Or we have a new
idea.&lt;br/&gt;&lt;br/&gt;I suspect it's the latter, because as soon as this thought occurred
to me, a whole bunch of other things fell into place.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Examples&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;For example, Craigslist.  It's not a charity, but they run it like
one.  And they're astoundingly successful.  When you scan down the
list of most popular web sites, the number of employees at Craigslist
looks like a misprint. Their revenues aren't as high as they could
be, but most startups would be happy to trade places with them.&lt;br/&gt;&lt;br/&gt;In Patrick O'Brian's novels, his captains always try to get upwind
of their opponents.  If you're upwind, you decide when and if to
engage the other ship.  Craigslist is effectively upwind of enormous
revenues.  They'd face some challenges if they wanted to make more,
but not the sort you face when you're tacking upwind, trying to
force a crappy product on ambivalent users by spending ten times
as much on sales as on development.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/good.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I'm not saying startups should aim to end up like Craigslist.
They're a product of unusual circumstances.  But they're a good
model for the early phases.&lt;br/&gt;&lt;br/&gt;Google looked a lot like a charity in the beginning. They didn't
have ads for over a year.  At year 1, Google was indistinguishable
from a nonprofit.  If a nonprofit or government organization had
started a project to index the web, Google at year 1 is the limit
of what they'd have produced.&lt;br/&gt;&lt;br/&gt;Back when I was working on spam filters I thought it would be a
good idea to have a web-based email service with good spam filtering.
I wasn't thinking of it as a company.  I just wanted to keep people
from getting spammed.  But as I thought more about this project, I
realized it would probably have to be a company.  It would cost
something to run, and it would be a pain to fund with grants and
donations.&lt;br/&gt;&lt;br/&gt;That was a surprising realization.  Companies often claim to be
benevolent, but it was surprising to realize there were purely
benevolent projects that had to be embodied as companies to work.&lt;br/&gt;&lt;br/&gt;I didn't want to start another company, so I didn't do it.  But if
someone had, they'd probably be quite rich now.  There was a window
of about two years when spam was increasing rapidly but all the big
email services had terrible filters.  If someone had launched a
new, spam-free mail service, users would have flocked to it.&lt;br/&gt;&lt;br/&gt;Notice the pattern here?  From either direction we get to the same
spot.  If you start from successful startups, you find they often
behaved like nonprofits.  And if you start from ideas for nonprofits,
you find they'd often make good startups.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Power&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;How wide is this territory?  Would all good nonprofits be good
companies?  Possibly not.  What makes Google so valuable is that
their users have money.  If you make people with money love you,
you can probably get some of it.  But could you also base a successful
startup on behaving like a nonprofit to people who don't have money?
Could you, for example, grow a successful startup out of curing an
unfashionable but deadly disease like malaria?&lt;br/&gt;&lt;br/&gt;I'm not sure, but I suspect that if you pushed this idea, you'd be
surprised how far it would go.  For example, people who apply to Y
Combinator don't generally have much money, and yet we can profit
by helping them, because with our help they could make money.  Maybe
the situation is similar with malaria.  Maybe an organization that
helped lift its weight off a country could benefit from the resulting
growth.&lt;br/&gt;&lt;br/&gt;I'm not proposing this is a serious idea.  I don't know anything
about malaria.  But I've been kicking ideas around long enough to
know when I come across a powerful one.&lt;br/&gt;&lt;br/&gt;One way to guess how far an idea extends is to ask yourself at what
point you'd bet against it.  The thought of betting against benevolence
is alarming in the same way as saying that something is technically
impossible.  You're just asking to be made a fool of, because these
are such powerful forces.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/good.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;For example, initially I thought maybe this principle only applied
to Internet startups.  Obviously it worked for Google, but what
about Microsoft?  Surely Microsoft isn't benevolent?  But when I
think back to the beginning, they were.  Compared to IBM they were
like Robin Hood.  When IBM introduced the PC, they thought they
were going to make money selling hardware at high prices.  But by
gaining control of the PC standard, Microsoft opened up the market
to any manufacturer.  Hardware prices plummeted, and lots of people
got to have computers who couldn't otherwise have afforded them.
It's the sort of thing you'd expect Google to do.&lt;br/&gt;&lt;br/&gt;Microsoft isn't so benevolent now.  Now when one thinks of what
Microsoft does to users, all the verbs that come to mind begin with
F.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/good.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt; And yet it doesn't seem to pay.
Their stock price has been flat for years.  Back when they were
Robin Hood, their stock price rose like Google's.  Could there be
a connection?&lt;br/&gt;&lt;br/&gt;You can see how there would be.  When you're small, you can't bully
customers, so you have to charm them.  Whereas when you're big you
can maltreat them at will, and you tend to, because it's easier
than satisfying them.  You grow big by being nice, but you can stay
big by being mean.&lt;br/&gt;&lt;br/&gt;You get away with it till the underlying conditions change, and
then all your victims escape.  So "Don't be evil" may be the most
valuable thing Paul Buchheit made for Google, because it may turn
out to be an elixir of corporate youth.  I'm sure they find it
constraining, but think how valuable it will be if it saves them
from lapsing into the fatal laziness that afflicted Microsoft and
IBM.&lt;br/&gt;&lt;br/&gt;The curious thing is, this elixir is freely available to any other
company.  Anyone can adopt "Don't be evil."  The catch is that
people will hold you to it.  So I don't think you're going to see
record labels or tobacco companies using this discovery.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Morale&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There's a lot of external evidence that benevolence works.  But how
does it work?  One advantage of investing in a large number of
startups is that you get a lot of data about how they work.  From
what we've seen, being good seems to help startups in three ways:
it improves their morale, it makes other people want to help them,
and above all, it helps them be decisive.&lt;br/&gt;&lt;br/&gt;Morale is tremendously important to a startupâ€”so important
that morale alone is almost enough to determine success.  Startups
are often described as emotional roller-coasters. One minute you're
going to take over the world, and the next you're doomed.  The
problem with feeling you're doomed is not just that it makes you
unhappy, but that it makes you &lt;i&gt;stop working&lt;/i&gt;.  So the downhills
of the roller-coaster are more of a self fulfilling prophecy than
the uphills.  If feeling you're going to succeed makes you work
harder, that probably improves your chances of succeeding, but if
feeling you're going to fail makes you stop working, that practically
guarantees you'll fail.&lt;br/&gt;&lt;br/&gt;Here's where benevolence comes in.  If you feel you're really helping
people, you'll keep working even when it seems like your startup
is doomed.  Most of us have some amount of natural benevolence.
The mere fact that someone needs you makes you want to help them.
So if you start the kind of startup where users come back each day,
you've basically built yourself a giant tamagotchi.  You've made
something you need to take care of.&lt;br/&gt;&lt;br/&gt;Blogger is a famous example of a startup that went through really
low lows and survived.  At one point they ran out of money and
everyone left. Evan Williams came in to work the next day, and there
was no one but him.  What kept him going?  Partly that users needed
him.  He was hosting thousands of people's blogs. He couldn't just
let the site die.&lt;br/&gt;&lt;br/&gt;There are many advantages of launching quickly, but the most important
may be that once you have users, the tamagotchi effect kicks in.
Once you have users to take care of, you're forced to figure out
what will make them happy, and that's actually very valuable
information.&lt;br/&gt;&lt;br/&gt;The added confidence that comes from trying to help people can
also help you with investors. One of the founders of 
&lt;a href="http://chatterous.com"&gt;Chatterous&lt;/a&gt; told 
me recently that he and his cofounder had decided that this service
was something the world needed, so they were going to keep working
on it no matter what, even if they had to move back to Canada and live
in their parents' basements.&lt;br/&gt;&lt;br/&gt;Once they realized this, they stopped caring so much what investors thought
about them.  They still met with them, but they weren't going to
die if they didn't get their money.  And you know what?  The investors
got a lot more interested.  They could sense that the Chatterouses
were going to do this startup with or without them.&lt;br/&gt;&lt;br/&gt;If you're really committed and your startup is cheap to run, you
become very hard to kill.  And practically all startups, even the
most successful, come close to death at some point.  So if doing
good for people gives you a sense of mission that makes you harder
to kill, that alone more than compensates for whatever you lose by
not choosing a more selfish project.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Help&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Another advantage of being good is that it makes other people want
to help you.  This too seems to be an inborn trait in humans.&lt;br/&gt;&lt;br/&gt;One of the startups we've funded, &lt;a href="http://octopart.com"&gt;Octopart&lt;/a&gt;, is currently locked in
a classic battle of good versus evil.  They're a search site for
industrial components.  A lot of people need to search for components,
and before Octopart there was no good way to do it.  That, it turned
out, was no coincidence.&lt;br/&gt;&lt;br/&gt;Octopart built the right way to search for components.  Users like
it and they've been growing rapidly.  And yet for most of Octopart's
life, the biggest distributor, Digi-Key, has been trying to force
them take their prices off the site.  Octopart is sending them
customers for free, and yet Digi-Key is trying to make that traffic
stop.  Why?  Because their current business model depends on
overcharging people who have incomplete information about prices.
They don't want search to work.&lt;br/&gt;&lt;br/&gt;The Octoparts are the nicest guys in the world.  They dropped out
of the PhD program in physics at Berkeley to do this.  They just
wanted to fix a problem they encountered in their research.  Imagine
how much time you could save the world's engineers if they could
do searches online.  So when I hear that a big, evil company is
trying to stop them in order to keep search broken, it makes me
really want to help them. It makes me spend more time on the Octoparts
than I do with most of the other startups we've funded.  It just
made me spend several minutes telling you how great they are.  Why?
Because they're good guys and they're trying to help the world.&lt;br/&gt;&lt;br/&gt;If you're benevolent, people will rally around you: investors,
customers, other companies, and potential employees.  In the long
term the most important may be the potential employees.  I think
everyone knows now that 
&lt;a href="https://paulgraham.com/gh.html"&gt;good hackers&lt;/a&gt; are much better than mediocre
ones.  If you can attract the best hackers to work for you, as
Google has, you have a big advantage.  And the very best hackers
tend to be idealistic.  They're not desperate for a job.  They can
work wherever they want.  So most want to work on things that will
make the world better.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Compass&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;But the most important advantage of being good is that it acts as
a compass.  One of the hardest parts of doing a startup is that you
have so many choices.  There are just two or three of you, and a
thousand things you could do. How do you decide?&lt;br/&gt;&lt;br/&gt;Here's the answer: Do whatever's best for your users.  You can hold
onto this like a rope in a hurricane, and it will save you if
anything can.  Follow it and it will take you through everything
you need to do.&lt;br/&gt;&lt;br/&gt;It's even the answer to questions that seem unrelated, like how to
convince investors to give you money.  If you're a good salesman,
you could try to just talk them into it.  But the more reliable
route is to convince them through your users: if you make something
users love enough to tell their friends, you grow exponentially,
and that will convince any investor.&lt;br/&gt;&lt;br/&gt;Being good is a particularly useful strategy for making decisions
in complex situations because it's stateless.  It's like telling
the truth.  The trouble with lying is that you have to remember
everything you've said in the past to make sure you don't contradict
yourself.  If you tell the truth you don't have to remember anything,
and that's a really useful property in domains where things happen
fast.&lt;br/&gt;&lt;br/&gt;For example, Y Combinator has now invested in 80 startups, 57 of
which are still alive.  (The rest have died or merged or been
acquired.)  When you're trying to advise 57 startups, it turns out
you have to have a stateless algorithm.  You can't have ulterior
motives when you have 57 things going on at once, because you can't
remember them.  So our rule is just to do whatever's best for the
founders.  Not because we're particularly benevolent, but because
it's the only algorithm that works on that scale.&lt;br/&gt;&lt;br/&gt;When you write something telling people to be good, you seem to be
claiming to be good yourself.  So I want to say explicitly that I
am not a particularly good person.  When I was a kid I was firmly
in the camp of bad.  The way adults used the word good, it seemed
to be synonymous with quiet, so I grew up very suspicious of it.&lt;br/&gt;&lt;br/&gt;You know how there are some people whose names come up in conversation
and everyone says "He's &lt;i&gt;such&lt;/i&gt; a great guy?"  People never say
that about me.  The best I get is "he means well."  I am not claiming
to be good.  At best I speak good as a second language.&lt;br/&gt;&lt;br/&gt;So I'm not suggesting you be good in the usual sanctimonious way.
I'm suggesting it because it works.  It will work not just as a
statement of "values," but as a guide to strategy,
and even a design spec for software.  Don't just not be evil.  Be
good.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;] Fifty years ago
it would have seemed shocking for a public company not to pay
dividends.  Now many tech companies don't.  The markets seem to
have figured out how to value potential dividends.  Maybe that isn't
the last step in this evolution.  Maybe markets will eventually get
comfortable with potential earnings. (VCs already are, and at least
some of them consistently make money.)&lt;br/&gt;&lt;br/&gt;I realize this sounds like the stuff one used to hear about the
"new economy" during the Bubble.  Believe me, I was not drinking
that kool-aid at the time.  But I'm convinced there were some 
&lt;a href="https://paulgraham.com/bubble.html"&gt;good
ideas&lt;/a&gt; buried in Bubble thinking.  For example, it's ok to focus on
growth instead of profitsâ€”but only if the growth is genuine.
You can't be buying users; that's a pyramid scheme.   But a company
with rapid, genuine growth is valuable, and eventually markets learn
how to value valuable things.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;] The idea of starting
a company with benevolent aims is currently undervalued, because
the kind of people who currently make that their explicit goal don't
usually do a very good job.&lt;br/&gt;&lt;br/&gt;It's one of the standard career paths of trustafarians to start
some vaguely benevolent business.  The problem with most of them
is that they either have a bogus political agenda or are feebly
executed.  The trustafarians' ancestors didn't get rich by preserving
their traditional culture; maybe people in Bolivia don't want to
either.  And starting an organic farm, though it's at least
straightforwardly benevolent, doesn't help people on the scale that
Google does.&lt;br/&gt;&lt;br/&gt;Most explicitly benevolent projects don't hold themselves sufficiently
accountable.  They act as if having good intentions were enough to
guarantee good effects.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;] Users dislike their
new operating system so much that they're starting petitions to
save the old one.  And the old one was nothing special.  The hackers
within Microsoft must know in their hearts that if the company
really cared about users they'd just advise them to switch to OSX.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Paul Buchheit, Jessica Livingston,
and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;!-- &lt;a href="http://omnisio.com/startupschool08/paul-graham-at-startup-school-08"&gt;Video of talk&lt;/a&gt; --&gt;&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//good.html</guid>
      <pubDate>Tue, 01 Apr 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A New Venture Animal</title>
      <link>https://paulgraham.com//ycombinator.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2008, rev May 2013&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay grew out of something I wrote for myself to figure
out what we do.  Even though Y Combinator is now 3 years old, we're still
trying to understand its implications.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;
I was annoyed recently to read a description of Y Combinator that
said "Y Combinator does seed funding for startups."  What was
especially annoying about it was that I wrote it.  This doesn't
really convey what we do.  And the reason it's ina&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2008, rev May 2013&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay grew out of something I wrote for myself to figure
out what we do.  Even though Y Combinator is now 3 years old, we're still
trying to understand its implications.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;
I was annoyed recently to read a description of Y Combinator that
said "Y Combinator does seed funding for startups."  What was
especially annoying about it was that I wrote it.  This doesn't
really convey what we do.  And the reason it's inaccurate is that,
paradoxically, funding very early stage startups is not mainly about
funding.&lt;br/&gt;&lt;br/&gt;Saying YC does seed funding for startups is a description in terms
of earlier models.  It's like calling a car a horseless carriage.&lt;br/&gt;&lt;br/&gt;When you scale animals you can't just keep everything in proportion.
For example, volume grows as the cube of linear dimension, but
surface area only as the square.  So as animals get bigger they
have trouble radiating heat.  That's why mice and rabbits are furry
and elephants and hippos aren't.  You can't make a mouse by scaling
down an elephant.&lt;br/&gt;&lt;br/&gt;YC represents a new, smaller kind of animalâ€”so much smaller
that all the rules are different.&lt;br/&gt;&lt;br/&gt;Before us, most companies in the startup funding business were
venture capital funds.  VCs generally fund later stage companies
than we do.  And they supply so much money that, even though the
other things they do may be very valuable, it's not that inaccurate
to regard VCs as sources of money.  Good VCs are "smart money," but
they're still money.&lt;br/&gt;&lt;br/&gt;All good investors supply a combination of money and help.  But
these scale differently, just as volume and surface area do.  Late
stage investors supply huge amounts of money and
comparatively little help: when a company about to go public gets
a mezzanine round of $50 million, the deal tends to be almost
entirely about money.  As you move earlier in the venture
funding process, the ratio of help to money increases, because
earlier stage companies have different needs.  Early stage companies
need less money because they're smaller and cheaper to run, but
they need more help because life is so precarious for them.  So
when VCs do a series A round for, say, $2 million, they generally
expect to offer a significant amount of help along with the money.&lt;br/&gt;&lt;br/&gt;Y Combinator occupies the earliest end of the spectrum.  We're at
least one and generally two steps before VC funding.  (Though some
startups go straight from YC to VC, the most common trajectory is
to do an angel round first.)  And what happens at Y Combinator is
as different from what happens in a series A round as a series A
round is from a mezzanine financing.&lt;br/&gt;&lt;br/&gt;At our end, money is almost a negligible factor.  The startup usually
consists of just the founders. Their living expenses are the
company's main expense, and since most founders are under 30, their
living expenses are low.  But at this early stage companies need a
lot of help.  Practically every question is still unanswered.  Some
companies we've funded have been working on their software for a
year or more, but others haven't decided what to work on, or even
who the founders should be.&lt;br/&gt;&lt;br/&gt;When PR people and journalists recount the histories of startups
after they've become big, they always underestimate how uncertain
things were at first.  They're not being deliberately misleading.
When you look at a company like Google, it's hard to imagine they
could once have been small and helpless.  Sure, at one point they
were a just a couple guys in a garageâ€”but even then their
greatness was assured, and all they had to do was roll forward along
the railroad tracks of destiny.&lt;br/&gt;&lt;br/&gt;Far from it.  A lot of startups with just as promising beginnings
end up failing.  Google has such momentum now that it would be hard
for anyone to stop them.  But all it would have taken in the beginning
would have been for two Google employees to focus on the wrong
things for six months, and the company could have died.&lt;br/&gt;&lt;br/&gt;We know, because we've been there, just how vulnerable startups are
in the earliest phases.  Curiously enough, that's why founders tend
to get so rich from them.  Reward is always proportionate to risk,
and very early stage startups are insanely risky.&lt;br/&gt;&lt;br/&gt;What we really do at Y Combinator is get startups launched straight.
One of many metaphors you could use for YC is a steam catapult on
an aircraft carrier.  We get startups airborne.  Barely airborne,
but enough that they can accelerate fast.&lt;br/&gt;&lt;br/&gt;When you're launching planes they have to be set up properly or
you're just launching projectiles.  They have to be pointed straight
down the deck; the wings have to be trimmed properly; the engines
have to be at full power; the pilot has to be ready.  These are the
kind of problems we deal with.  After we fund startups we work
closely with them for three monthsâ€”so closely in fact that
we insist they move to where we are.  And what we do in those three
months is make sure everything is set up for launch.  If there are
tensions between cofounders we help sort them out.  We get all the
paperwork set up properly so there are no nasty surprises later.
If the founders aren't sure what to focus on first, we try to figure
that out.  If there is some obstacle right in front of them, we
either try to remove it, or shift the startup sideways.  The goal
is to get every distraction out of the way so the founders can use
that time to build (or finish building) something impressive.  And
then near the end of the three months we push the button on the
steam catapult in the form of Demo Day, where the current group of
startups present to pretty much every investor in Silicon Valley.&lt;br/&gt;&lt;br/&gt;Launching companies isn't identical with launching products.  Though
we do spend a lot of time on launch strategies for products, there
are some things that take too long to build for a startup to launch
them before raising their next round of funding.  Several of the
most promising startups we've funded haven't launched their products
yet, but are definitely launched as companies.&lt;br/&gt;&lt;br/&gt;In the earliest stage, startups not only have more questions to
answer, but they tend to be different kinds of questions.  In later
stage startups the questions are about deals, or hiring, or
organization.  In the earliest phase they tend to be about technology
and design.  What do you make?  That's the first problem to solve.
That's why our motto is "Make something people want."  This is
always a good thing for companies to do, but it's even more important
early on, because it sets the bounds for every other question.  Who
you hire, how much money you raise, how you market yourselfâ€”they
all depend on what you're making.&lt;br/&gt;&lt;br/&gt;Because the early problems are so much about technology and design,
you probably need to be hackers to do what we do.  While some VCs
have technical backgrounds, I don't know any who still write code.
Their expertise is mostly in businessâ€”as it should be, because
that's the kind of expertise you need in the phase between series
A and (if you're lucky) IPO.&lt;br/&gt;&lt;br/&gt;We're so different from VCs that we're really a different kind of
animal.  Can we claim founders are better off as a result of this
new type of venture firm?  I'm pretty sure the answer is yes, because
YC is an improved version of what happened to our startup, and our
case was not atypical.  We started Viaweb with $10,000 in seed money
from our friend Julian.  He was a lawyer and arranged all our
paperwork, so we could just code.  We spent three months building
a version 1, which we then presented to investors to raise more
money.  Sounds familiar, doesn't it?  But YC improves on that
significantly.  Julian knew a lot about law and business, but his
advice ended there; he was not a startup guy.  So we made some basic
mistakes early on.  And when we presented to investors, we presented
to only 2, because that was all we knew.  If we'd had our later
selves to encourage and advise us, and Demo Day to present at, we
would have been in much better shape.  We probably could have raised
money at 3 to 5 times the valuation we did.&lt;br/&gt;&lt;br/&gt;If we take 7% of a company we fund, the founders only have to do
&lt;a href="https://paulgraham.com/equity.html"&gt;7.5%&lt;/a&gt; better in their next round of funding
to end up net ahead.  We certainly manage that.&lt;br/&gt;&lt;br/&gt;So who is our 7% coming out of?  If the founders end up net ahead
it's not coming out of them.  So is it coming out of later stage
investors?  Well, they do end up paying more.  But I think they pay
more because the company is actually more valuable.  And later stage
investors have no problem with that.  The returns of a VC fund
depend on the quality of the companies they invest in, not how
cheaply they can buy stock in them.&lt;br/&gt;&lt;br/&gt;If what we do is useful, why wasn't anyone doing it before?  There
are two answers to that.  One is that people were doing it before,
just haphazardly on a smaller scale.  Before us, seed funding came
primarily from individual angel investors.  Larry and Sergey, for
example, got their seed funding from Andy Bechtolsheim, one of the
founders of Sun.  And because he was a startup guy he probably gave
them useful advice.  But raising money from angel investors is a
hit or miss thing.  It's a sideline for most of them, so they only
do a handful of deals a year and they don't spend a lot of time on
the startups they invest in.  And they're hard to reach, because
they don't want random startups pestering them with business plans.
The Google guys were lucky because they knew someone who knew
Bechtolsheim.  It generally takes a personal introduction with
angels.&lt;br/&gt;&lt;br/&gt;The other reason no one was doing quite what we do is that till
recently it was a lot more expensive to start a startup.  You'll
notice we haven't funded any biotech startups.  That's still
expensive.  But advancing technology has made web startups so cheap
that you really can get a company airborne for $15,000.  If you
understand how to operate a steam catapult, at least.&lt;br/&gt;&lt;br/&gt;So in effect what's happened is that a new ecological niche has
opened up, and Y Combinator is the new kind of animal that has moved
into it.  We're not a replacement for venture capital funds.  We
occupy a new, adjacent niche.  And conditions in our niche are
really quite different.  It's not just that the problems we face
are different; the whole structure of the business is different.
VCs are playing a zero-sum game.  They're all competing for a slice
of a fixed amount of "deal flow," and that explains a lot of their
behavior.  Whereas our m.o. is to create new deal flow, by encouraging
hackers who would have gotten jobs to start their own startups
instead.  We compete more with employers than VCs.&lt;br/&gt;&lt;br/&gt;It's not surprising something like this would happen.  Most fields
become more specializedâ€”more articulatedâ€”as they develop,
and startups are certainly an area in which there has been a lot
of development over the past couple decades.  The venture business
in its present form is only about forty years old.  It stands to
reason it would evolve.&lt;br/&gt;&lt;br/&gt;And it's natural that the new niche would at first be described,
even by its inhabitants, in terms of the old one.  But really Y
Combinator is not in the startup funding business.  Really we're
more of a small, furry steam catapult.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, and Robert Morris
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/item?id=133430"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//ycombinator.html</guid>
      <pubDate>Sat, 01 Mar 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>You Weren't Meant to Have a Boss</title>
      <link>https://paulgraham.com//boss.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2008, rev. June 2008&lt;br/&gt;&lt;br/&gt;Technology tends to separate normal from natural.  Our &lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2008, rev. June 2008&lt;br/&gt;&lt;br/&gt;Technology tends to separate normal from natural.  Our bodies
weren't designed to eat the foods that people in rich countries eat, or
to get so little exercise.  
There may be a similar problem with the way we work: 
a normal job may be as bad for us intellectually as white flour
or sugar is for us physically.&lt;br&gt;&lt;br/&gt;I began to suspect this after spending several years working 
with startup founders.  I've now worked with over 200 of them, and I've
noticed a definite difference between programmers working on their
own startups and those working for large organizations.
I wouldn't say founders seem happier, necessarily;
starting a startup can be very stressful. Maybe the best way to put
it is to say that they're happier in the sense that your body is
happier during a long run than sitting on a sofa eating
doughnuts.&lt;br/&gt;&lt;br/&gt;Though they're statistically abnormal, startup founders seem to be
working in a way that's more natural for humans.&lt;br/&gt;&lt;br/&gt;I was in Africa last year and saw a lot of animals in the wild that
I'd only seen in zoos before. It was remarkable how different they
seemed. Particularly lions. Lions in the wild seem about ten times
more alive. They're like different animals. I suspect that working
for oneself feels better to humans in much the same way that living
in the wild must feel better to a wide-ranging predator like a lion.
Life in a zoo is easier, but it isn't the life they were designed
for.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Trees&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;What's so unnatural about working for a big company?  The root of
the problem is that humans weren't meant to work in such large
groups.&lt;br/&gt;&lt;br/&gt;Another thing you notice when you see animals in the wild is that
each species thrives in groups of a certain size.  A herd of impalas
might have 100 adults; baboons maybe 20; lions rarely 10.  Humans
also seem designed to work in groups, and what I've read about
hunter-gatherers accords with research on organizations and my own
experience to suggest roughly what the ideal size is: groups of 8
work well; by 20 they're getting hard to manage; and a group of 50
is really unwieldy.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/boss.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
Whatever the upper limit is, we are clearly not meant to work in
groups of several hundred.  And yetâ€”for reasons having more
to do with technology than human natureâ€”a great many people
work for companies with hundreds or thousands of employees.&lt;br/&gt;&lt;br/&gt;Companies know groups that large wouldn't work, so they divide
themselves into units small enough to work together.  But to
coordinate these they have to introduce something new: bosses.&lt;br/&gt;&lt;br/&gt;These smaller groups are always arranged in a tree structure.  Your
boss is the point where your group attaches to the tree.  But when
you use this trick for dividing a large group into smaller ones,
something strange happens that I've never heard anyone mention
explicitly.  In the group one level up from yours, your boss
represents your entire group.  A group of 10 managers is not merely
a group of 10 people working together in the usual way.  It's really
a group of groups.  Which means for a group of 10 managers to work
together as if they were simply a group of 10 individuals, the group
working for each manager would have to work as if they were a single
personâ€”the workers and manager would each share only one
person's worth of freedom between them.&lt;br/&gt;&lt;br/&gt;In practice a group of people are never able to act as if they were
one person.  But in a large organization divided into groups in
this way, the pressure is always in that direction.  Each group
tries its best to work as if it were the small group of individuals
that humans were designed to work in.  That was the point of creating
it.  And when you propagate that constraint, the result is that
each person gets freedom of action in inverse proportion to the
size of the entire tree.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/boss.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Anyone who's worked for a large organization has felt this.  You
can feel the difference between working for a company with 100
employees and one with 10,000, even if your group has only 10 people.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Corn Syrup&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A group of 10 people within a large organization is a kind of fake
tribe.  The number of people you interact with is about right.  But
something is missing: individual initiative.  Tribes of hunter-gatherers
have much more freedom.  The leaders have a little more power than other
members of the tribe, but they don't generally tell them what to
do and when the way a boss can.&lt;br/&gt;&lt;br/&gt;It's not your boss's fault.  The real problem is that in the group
above you in the hierarchy, your entire group is one virtual person.
Your boss is just the way that constraint is imparted to you.&lt;br/&gt;&lt;br/&gt;So working in a group of 10 people within a large organization feels
both right and wrong at the same time.   On the surface it feels
like the kind of group you're meant to work in, but something major
is missing.  A job at a big company is like high fructose corn
syrup: it has some of the qualities of things you're meant to like,
but is disastrously lacking in others.&lt;br/&gt;&lt;br/&gt;Indeed, food is an excellent metaphor to explain what's wrong with
the usual sort of job.&lt;br/&gt;&lt;br/&gt;For example, working for a big company is the default thing to do,
at least for programmers.  How bad could it be?  Well, food shows
that pretty clearly.  If you were dropped at a random point in
America today, nearly all the food around you would be bad for you.
Humans were not designed to eat white flour, refined sugar, high
fructose corn syrup, and hydrogenated vegetable oil.  And yet if
you analyzed the contents of the average grocery store you'd probably
find these four ingredients accounted for most of the calories.
"Normal" food is terribly bad for you.  The only people who eat
what humans were actually designed to eat are a few Birkenstock-wearing
weirdos in Berkeley.&lt;br/&gt;&lt;br/&gt;If "normal" food is so bad for us, why is it so common?  There are
two main reasons. One is that it has more immediate appeal.  You
may feel lousy an hour after eating that pizza, but eating the first
couple bites feels great.  The other is economies of scale.
Producing junk food scales; producing fresh vegetables doesn't.
Which means (a) junk food can be very cheap, and (b) it's worth
spending a lot to market it.&lt;br/&gt;&lt;br/&gt;If people have to choose between something that's cheap, heavily
marketed, and appealing in the short term, and something that's
expensive, obscure, and appealing in the long term, which do you
think most will choose?&lt;br/&gt;&lt;br/&gt;It's the same with work.  The average MIT graduate wants to work
at Google or Microsoft, because it's a recognized brand, it's safe,
and they'll get paid a good salary right away.  It's the job
equivalent of the pizza they had for lunch.  The drawbacks will
only become apparent later, and then only in a vague sense of
malaise.&lt;br/&gt;&lt;br/&gt;And founders and early employees of startups, meanwhile, are like
the Birkenstock-wearing weirdos of Berkeley:  though a tiny minority
of the population, they're the ones living as humans are meant to.
In an artificial world, only extremists live naturally.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Programmers&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The restrictiveness of big company jobs is particularly hard on
programmers, because the essence of programming is to build new
things.  Sales people make much the same pitches every day; support
people answer much the same questions; but once you've written a
piece of code you don't need to write it again.  So a programmer
working as programmers are meant to is always making new things.
And when you're part of an organization whose structure gives each
person freedom in inverse proportion to the size of the tree, you're
going to face resistance when you do something new.&lt;br/&gt;&lt;br/&gt;This seems an inevitable consequence of bigness.  It's true even
in the smartest companies.  I was talking recently to a founder who
considered starting a startup right out of college, but went to
work for Google instead because he thought he'd learn more there.
He didn't learn as much as he expected.  Programmers learn by doing,
and most of the things he wanted to do, he couldn'tâ€”sometimes
because the company wouldn't let him, but often because the company's
code wouldn't let him.  Between the drag of legacy code, the overhead
of doing development in such a large organization, and the restrictions
imposed by interfaces owned by other groups, he could only try a
fraction of the things he would have liked to.  He said he has
learned much more in his own startup, despite the fact that he has
to do all the company's errands as well as programming, because at
least when he's programming he can do whatever he wants.&lt;br/&gt;&lt;br/&gt;An obstacle downstream propagates upstream.  If you're not allowed
to implement new ideas, you stop having them.  And vice versa: when
you can do whatever you want, you have more ideas about what to do.
So working for yourself makes your brain more powerful in the same
way a low-restriction exhaust system makes an engine more powerful.&lt;br/&gt;&lt;br/&gt;Working for yourself doesn't have to mean starting a startup, of
course.  But a programmer deciding between a regular job at a big
company and their own startup is probably going to learn more doing
the startup.&lt;br/&gt;&lt;br/&gt;You can adjust the amount of freedom you get by scaling the size
of company you work for.  If you start the company, you'll have the
most freedom.  If you become one of the first 10 employees you'll
have almost as much freedom as the founders.  Even a company with
100 people will feel different from one with 1000.&lt;br/&gt;&lt;br/&gt;Working for a small company doesn't ensure freedom.  The tree
structure of large organizations sets an upper bound on freedom,
not a lower bound.  The head of a small company may still choose
to be a tyrant.  The point is that a large organization is compelled
by its structure to be one.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Consequences&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;That has real consequences for both organizations and individuals.
One is that companies will inevitably slow down as they grow larger,
no matter how hard they try to keep their startup mojo.  It's a
consequence of the tree structure that every large organization is
forced to adopt.&lt;br/&gt;&lt;br/&gt;Or rather, a large organization could only avoid slowing down if
they avoided tree structure.  And since human nature limits the
size of group that can work together, the only way I can imagine
for larger groups to avoid tree structure would be to have no
structure: to have each group actually be independent, and to work
together the way components of a market economy do.&lt;br/&gt;&lt;br/&gt;That might be worth exploring.  I suspect there are already some
highly partitionable businesses that lean this way.  But I don't
know any technology companies that have done it.&lt;br/&gt;&lt;br/&gt;There is one thing companies can do short of structuring themselves
as sponges:  they can stay small.  If I'm right, then it really
pays to keep a company as small as it can be at every stage.
Particularly a technology company.  Which means it's doubly important
to hire the best people.  Mediocre hires hurt you twice: they get
less done, but they also make you big, because you need more of
them to solve a given problem.&lt;br/&gt;&lt;br/&gt;For individuals the upshot is the same: aim small.  It will always
suck to work for large organizations, and the larger the organization,
the more it will suck.&lt;br/&gt;&lt;br/&gt;In an &lt;a href="https://paulgraham.com/start.html"&gt;essay&lt;/a&gt; I wrote a couple years ago 
I advised graduating seniors
to work for a couple years for another company before starting their
own.  I'd modify that now.  Work for another company if you want
to, but only for a small one, and if you want to start your own
startup, go ahead.&lt;br/&gt;&lt;br/&gt;The reason I suggested college graduates not start startups immediately
was that I felt most would fail.  And they will.  But ambitious
programmers are better off doing their own thing and failing than
going to work at a big company.  Certainly they'll learn more.  They
might even be better off financially.  A lot of people in their
early twenties get into debt, because their expenses grow even
faster than the salary that seemed so high when they left school.
At least if you start a startup and fail your net worth will be
zero rather than negative.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/boss.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;We've now funded so many different types of founders that we have
enough data to see patterns, and there seems to be no benefit from
working for a big company.  The people who've worked for a few years
do seem better than the ones straight out of college, but only
because they're that much older.&lt;br/&gt;&lt;br/&gt;The people who come to us from big companies often seem kind of
conservative.  It's hard to say how much is because big companies
made them that way, and how much is the natural conservatism that
made them work for the big companies in the first place.  But
certainly a large part of it is learned.  I know because I've seen
it burn off.&lt;br/&gt;&lt;br/&gt;Having seen that happen so many times is one of the things that
convinces me that working for oneself, or at least for a small
group, is the natural way for programmers to live.  Founders arriving
at Y Combinator often have the downtrodden air of refugees.  Three
months later they're transformed: they have so much more 
&lt;a href="http://paulmckellar.com/photos/03l"&gt;confidence&lt;/a&gt;
that they seem as if they've grown several inches taller. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/boss.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Strange as this sounds, they seem both more worried and happier at the same
time.  Which is exactly how I'd describe the way lions seem in the
wild.&lt;br/&gt;&lt;br/&gt;Watching employees get transformed into founders makes it clear
that the difference between the two is due mostly to environmentâ€”and
in particular that the environment in big companies is toxic to
programmers.   In the first couple weeks of working on their own
startup they seem to come to life, because finally they're working
the way people are meant to.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
When I talk about humans being meant or designed to live a
certain way, I mean by evolution.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
It's not only the leaves who suffer.  The constraint propagates
up as well as down.  So managers are constrained too; instead of
just doing things, they have to act through subordinates.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Do not finance your startup with credit cards.  Financing a
startup with debt is usually a stupid move, and credit card debt
stupidest of all.  Credit card debt is a bad idea, period.  It is
a trap set by evil companies for the desperate and the foolish.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
The founders we fund used to be younger (initially we encouraged
undergrads to apply), and the first couple times I saw this I used
to wonder if they were actually getting physically taller.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Ross Boucher, Aaron Iba, Abby
Kirigin, Ivan Kirigin, Jessica Livingston, and Robert Morris for
reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//boss.html</guid>
      <pubDate>Sat, 01 Mar 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Disagree</title>
      <link>https://paulgraham.com//disagree.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2008&lt;br/&gt;&lt;br/&gt;The web is turning writing into a conversation.  Twenty years ago,
writers wrote and readers read.  The web lets readers respond, and
increasingly they doâ€”in comment threads, on forums, and in their
own blog posts.&lt;br/&gt;&lt;br/&gt;Many who respond to something disagree with it.  That's to be
expected.  Agreeing tends to motivate people less than disagreeing.
And when you agree there's less to say.  You could expand on something
the author said, but he h&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2008&lt;br/&gt;&lt;br/&gt;The web is turning writing into a conversation.  Twenty years ago,
writers wrote and readers read.  The web lets readers respond, and
increasingly they doâ€”in comment threads, on forums, and in their
own blog posts.&lt;br/&gt;&lt;br/&gt;Many who respond to something disagree with it.  That's to be
expected.  Agreeing tends to motivate people less than disagreeing.
And when you agree there's less to say.  You could expand on something
the author said, but he has probably already explored the
most interesting implications.  When you disagree you're entering
territory he may not have explored.&lt;br/&gt;&lt;br/&gt;The result is there's a lot more disagreeing going on, especially
measured by the word.  That doesn't mean people are getting angrier.
The structural change in the way we communicate is enough to account
for it.  But though it's not anger that's driving the increase in
disagreement, there's a danger that the increase in disagreement
will make people angrier.  Particularly online, where it's easy to
say things you'd never say face to face.&lt;br/&gt;&lt;br/&gt;If we're all going to be disagreeing more, we should be careful to
do it well.  What does it mean to disagree well?   Most readers can
tell the difference between mere name-calling and a carefully
reasoned refutation, but I think it would help to put names on the
intermediate stages.  So here's an attempt at a disagreement
hierarchy:&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;DH0. Name-calling.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This is the lowest form of disagreement, and probably also the most
common.  We've all seen comments like this:
&lt;blockquote&gt;
  u r a fag!!!!!!!!!!
&lt;/blockquote&gt;
But it's important to realize that more articulate name-calling has
just as little weight.  A comment like
&lt;blockquote&gt;
  The author is a self-important dilettante.
&lt;/blockquote&gt;
is really nothing more than a pretentious version of "u r a fag."&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;DH1. Ad Hominem.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;An ad hominem attack is not quite as weak as mere name-calling.  It
might actually carry some weight.  For example, if a senator wrote
an article saying senators' salaries should be increased, one could
respond:
&lt;blockquote&gt;
  Of course he would say that.  He's a senator.
&lt;/blockquote&gt;
This wouldn't refute the author's argument, but it may at least be
relevant to the case.  It's still a very weak form of disagreement,
though.  If there's something wrong with the senator's argument,
you should say what it is; and if there isn't, what difference does
it make that he's a senator?&lt;br/&gt;&lt;br/&gt;Saying that an author lacks the authority to write about a topic
is a variant of ad hominemâ€”and a particularly useless sort, because
good ideas often come from outsiders.  The question is whether the
author is correct or not.  If his lack of authority caused him to
make mistakes, point those out.  And if it didn't, it's not a
problem.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;DH2. Responding to Tone.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The next level up we start to see responses to the writing, rather
than the writer.  The lowest form of these is to disagree with the
author's tone.  E.g.
&lt;blockquote&gt;
  I can't believe the author dismisses intelligent design in such
  a cavalier fashion.
&lt;/blockquote&gt;
Though better than attacking the author, this is still a weak form
of disagreement.  It matters much more whether the author is wrong
or right than what his tone is.  Especially since tone is so hard
to judge.  Someone who has a chip on their shoulder about some topic
might be offended by a tone that to other readers seemed neutral.&lt;br/&gt;&lt;br/&gt;So if the worst thing you can say about something is to criticize
its tone, you're not saying much.  Is the author flippant, but
correct?  Better that than grave and wrong.  And if the author is
incorrect somewhere, say where.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;DH3. Contradiction.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In this stage we finally get responses to what was said, rather
than how or by whom.  The lowest form of response to an argument
is simply to state the opposing case, with little or no supporting
evidence.&lt;br/&gt;&lt;br/&gt;This is often combined with DH2 statements, as in:
&lt;blockquote&gt;
  I can't believe the author dismisses intelligent design in such
  a cavalier fashion.  Intelligent design is a legitimate scientific
  theory.
&lt;/blockquote&gt;
Contradiction can sometimes have some weight.  Sometimes merely
seeing the opposing case stated explicitly is enough to see that
it's right.  But usually evidence will help.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;DH4. Counterargument.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;At level 4 we reach the first form of convincing disagreement:
counterargument.  Forms up to this point can usually be ignored as
proving nothing.  Counterargument might prove something.  The problem
is, it's hard to say exactly what.&lt;br/&gt;&lt;br/&gt;Counterargument is contradiction plus reasoning and/or evidence.
When aimed squarely at the original argument, it can be convincing.
But unfortunately it's common for counterarguments to be aimed at
something slightly different.  More often than not, two people
arguing passionately about something are actually arguing about two
different things.  Sometimes they even agree with one another, but
are so caught up in their squabble they don't realize it.&lt;br/&gt;&lt;br/&gt;There could be a legitimate reason for arguing against something
slightly different from what the original author said: when you
feel they missed the heart of the matter.  But when you do that,
you should say explicitly you're doing it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;DH5. Refutation.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The most convincing form of disagreement is refutation.  It's also
the rarest, because it's the most work.  Indeed, the disagreement
hierarchy forms a kind of pyramid, in the sense that the higher you
go the fewer instances you find.&lt;br/&gt;&lt;br/&gt;To refute someone you probably have to quote them.  You have to
find a "smoking gun," a passage in whatever you disagree with that
you feel is mistaken, and then explain why it's mistaken.  If you
can't find an actual quote to disagree with, you may be arguing
with a straw man.&lt;br/&gt;&lt;br/&gt;While refutation generally entails quoting, quoting doesn't necessarily
imply refutation.  Some writers quote parts of things they disagree
with to give the appearance of legitimate refutation, then follow
with a response as low as DH3 or even DH0.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;DH6. Refuting the Central Point.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The force of a refutation depends on what you refute.  The most
powerful form of disagreement is to refute someone's central point.&lt;br/&gt;&lt;br/&gt;Even as high as DH5 we still sometimes see deliberate dishonesty,
as when someone picks out minor points of an argument and refutes
those.  Sometimes the spirit in which this is done makes it more
of a sophisticated form of ad hominem than actual refutation.  For
example, correcting someone's grammar, or harping on minor mistakes
in names or numbers.  Unless the opposing argument actually depends
on such things, the only purpose of correcting them is to
discredit one's opponent.&lt;br/&gt;&lt;br/&gt;Truly refuting something requires one to refute its central point,
or at least one of them.  And that means one has to commit explicitly
to what the central point is.  So a truly effective refutation would
look like:
&lt;blockquote&gt;
  The author's main point seems to be x.  As he says:
&lt;blockquote&gt;
    &amp;lt;quotation&amp;gt;
&lt;/blockquote&gt;
  But this is wrong for the following reasons...
&lt;/blockquote&gt;
The quotation you point out as mistaken need not be the actual
statement of the author's main point.  It's enough to refute something
it depends upon.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;What It Means&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Now we have a way of classifying forms of disagreement.  What good
is it?  One thing the disagreement hierarchy &lt;i&gt;doesn't&lt;/i&gt; give us is
a way of picking a winner.  DH levels merely describe the form of
a statement, not whether it's correct.  A DH6 response could still
be completely mistaken.&lt;br/&gt;&lt;br/&gt;But while DH levels don't set a lower bound on the convincingness
of a reply, they do set an upper bound.  A DH6 response might be
unconvincing, but a DH2 or lower response is always unconvincing.&lt;br/&gt;&lt;br/&gt;The most obvious advantage of classifying the forms of disagreement
is that it will help people to evaluate what they read.  In particular,
it will help them to see through intellectually dishonest arguments.
An eloquent speaker or writer can give the impression of vanquishing
an opponent merely by using forceful words.  In fact that is probably
the defining quality of a demagogue.  By giving names to the different
forms of disagreement, we give critical readers a pin for popping
such balloons.&lt;br/&gt;&lt;br/&gt;Such labels may help writers too.  Most intellectual dishonesty is
unintentional.  Someone arguing against the tone of something he
disagrees with may believe he's really saying something.  Zooming
out and seeing his current position on the disagreement hierarchy
may inspire him to try moving up to counterargument or refutation.&lt;br/&gt;&lt;br/&gt;But the greatest benefit of disagreeing well is not just that it
will make conversations better, but that it will make the people
who have them happier.  If you study conversations, you find there
is a lot more meanness down in DH1 than up in DH6.  You don't have
to be mean when you have a real point to make.  In fact, you don't
want to.  If you have something real to say, being mean just gets
in the way.&lt;br/&gt;&lt;br/&gt;If moving up the disagreement hierarchy makes people less mean,
that will make most of them happier.  Most people don't really enjoy
being mean; they do it because they can't help it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell and Jessica Livingston for reading
drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Related:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//disagree.html</guid>
      <pubDate>Sat, 01 Mar 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Six Principles for Making New Things</title>
      <link>https://paulgraham.com//newthings.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2008&lt;br/&gt;&lt;br/&gt;The fiery reaction to the release of &lt;a href="https://paulgraham.com/arc.html"&gt;Arc&lt;/a&gt; had
an unexpected consequence: it made me realize I had a design
philosophy.  The main complaint of the more articulate critics was
that Arc seemed so flimsy. After years of working on it, all I had
to show for myself were a few thousand lines of macros?  Why hadn't
I worked on more substantial problems?&lt;br/&gt;&lt;br/&gt;As I was mulling over these remarks it struck&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2008&lt;br/&gt;&lt;br/&gt;The fiery reaction to the release of &lt;a href="https://paulgraham.com/arc.html"&gt;Arc&lt;/a&gt; had
an unexpected consequence: it made me realize I had a design
philosophy.  The main complaint of the more articulate critics was
that Arc seemed so flimsy. After years of working on it, all I had
to show for myself were a few thousand lines of macros?  Why hadn't
I worked on more substantial problems?&lt;br/&gt;&lt;br/&gt;As I was mulling over these remarks it struck me how familiar they
seemed.  This was exactly the kind of thing people said at first
about Viaweb, and Y Combinator, and most of my essays.&lt;br/&gt;&lt;br/&gt;When we launched Viaweb, it seemed laughable to VCs and e-commerce
"experts."  We were just a couple guys in an apartment,
which did not seem cool in 1995 the way it does now.  And the thing
we'd built, as far as they could tell, wasn't even software.
Software, to them, equalled big, honking Windows apps.  Since Viaweb
was the first web-based app 
they'd seen, it seemed to be nothing
more than a website.  They were even more contemptuous when they
discovered that Viaweb didn't process credit card transactions (we
didn't for the whole first year).  Transaction processing seemed
to them what e-commerce was all about.  It sounded serious and
difficult.&lt;br/&gt;&lt;br/&gt;And yet, mysteriously, Viaweb ended up crushing all its competitors.&lt;br/&gt;&lt;br/&gt;The initial reaction to 
&lt;a href="http://ycombinator.com"&gt;Y Combinator&lt;/a&gt; was almost identical.  It
seemed laughably lightweight.  Startup funding meant series A rounds:
millions of dollars given to a small number of startups founded by
people with established credentials after months of serious,
businesslike meetings, on terms described in a document a foot
thick.  Y Combinator seemed inconsequential.  It's too early to say
yet whether Y Combinator will turn out like Viaweb, but judging
from the number of imitations, a lot of people seem to think we're
on to something.&lt;br/&gt;&lt;br/&gt;I can't measure whether my essays are successful, except in page
views, but the reaction to them is at least different from when I
started.  At first the default reaction of the Slashdot trolls was
(translated into articulate terms): "Who is this guy and what
authority does he have to write about these topics?  I haven't read
the essay, but there's no way anything so short and written in such
an informal style could have anything useful to say about such and
such topic, when people with degrees in the subject have already
written many thick books about it." Now there's a new generation
of trolls on a new generation of sites, but they have at least
started to omit the initial "Who is this guy?"&lt;br/&gt;&lt;br/&gt;Now people are saying the same things about Arc that they said at
first about Viaweb and Y Combinator and most of my essays.  Why the
pattern?  The answer, I realized, is that my m.o. for all four has
been the same.&lt;br/&gt;&lt;br/&gt;Here it is: I like to find (a) simple solutions (b) to overlooked
problems (c) that actually need to be solved, and (d) deliver them
as informally as possible, (e) starting with a very crude version
1, then (f) iterating rapidly.&lt;br/&gt;&lt;br/&gt;When I first laid out these principles explicitly, I noticed something
striking: this is practically a recipe for generating a contemptuous
initial reaction.  Though simple solutions are better, they don't
seem as impressive as complex ones.  Overlooked problems are by
definition problems that most people think don't matter.  Delivering
solutions in an informal way means that instead of judging something
by the way it's presented, people have to actually understand it,
which is more work.  And starting with a crude version 1 means your
initial effort is always small and incomplete.&lt;br/&gt;&lt;br/&gt;I'd noticed, of course, that people never seemed to grasp new ideas
at first.  I thought it was just because most people were stupid.
Now I see there's more to it than that.  &lt;!-- This particular m.o. is
practically tuned to hit everyday stupidity square on. --&gt; Like a
contrarian investment fund, someone following this strategy will
almost always be doing things that seem wrong to the average person.&lt;br/&gt;&lt;br/&gt;As with contrarian investment strategies, that's exactly the point.
This technique is successful (in the long term) because it gives you
all the advantages other people forgo by trying to seem legit.  If
you work on overlooked problems, you're more likely to discover new
things, because you have less competition.  If you deliver solutions
informally, you (a) save all the effort you would have had to expend
to make them look impressive, and (b) avoid the danger of fooling
yourself as well as your audience.  And if you release a crude
version 1 then iterate, your solution can benefit from the imagination
of nature, which, as Feynman pointed out, is more powerful than
your own.&lt;br/&gt;&lt;br/&gt;In the case of Viaweb, the simple solution was to make the software
run on the server.  The overlooked problem was to generate web sites
automatically; in 1995, online stores were all made by hand by human
designers, but we knew this wouldn't scale.  The part that actually
mattered was graphic design, not transaction processing.
The informal delivery mechanism was me, showing up in jeans and a
t-shirt at some retailer's office.  And the crude version 1 was,
if I remember correctly, less than 10,000 lines of code when we
launched.&lt;br/&gt;&lt;br/&gt;The power of this technique extends beyond startups and programming
languages and essays.  It probably extends to any kind of creative
work.  Certainly it can be used in painting: this is exactly 
what Cezanne and Klee did.&lt;br/&gt;&lt;br/&gt;At Y Combinator we bet money on it, in the sense that we encourage
the startups we fund to work this way. There are always new ideas
right under your nose.  So look for simple things that other people
have overlookedâ€”things people will later claim were 
"obvious"â€”especially when they've been led astray by obsolete 
conventions,
or by trying to do things that are superficially impressive.  Figure
out what the real problem is, and make sure you solve that.  Don't
worry about trying to look corporate; the product is what wins in
the long term.  And launch as soon as you can, so you start learning
from users what you should have been making.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://reddit.com"&gt;Reddit&lt;/a&gt; is a classic example of 
this approach.  When Reddit first
launched, it seemed like there was nothing to it.  To the graphically
unsophisticated its deliberately minimal design seemed like no
design at all.  But Reddit solved the real problem, which was to
tell people what was new and otherwise stay out of the way.  As a
result it became massively successful.  Now that conventional ideas
have caught up with it, it seems obvious.  People look at Reddit
and think the founders were lucky.  Like all such things, it was
harder than it looked.  The Reddits pushed so hard against the
current that they reversed it; now it looks like they're merely
floating downstream.&lt;br/&gt;&lt;br/&gt;So when you look at something like Reddit and think "I wish I could
think of an idea like that," remember: ideas like that are all
around you.  But you ignore them because they look wrong.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//newthings.html</guid>
      <pubDate>Fri, 01 Feb 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Trolls</title>
      <link>https://paulgraham.com//trolls.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2008&lt;br/&gt;&lt;br/&gt;A user on Hacker News recently posted a
&lt;a href="http://news.ycombinator.com/item?id=116938"&gt;comment&lt;/a&gt;
that set me thinking:
&lt;blockquote&gt;
  Something about hacker culture that never really set well with
  me was this Â— the nastiness. ... I just don't understand why people
  troll like they do.
&lt;/blockquote&gt;
I've thought a lot over the last couple years about the problem of
trolls.  It's an old one, as old as forums, but
we're still just lear&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2008&lt;br/&gt;&lt;br/&gt;A user on Hacker News recently posted a
&lt;a href="http://news.ycombinator.com/item?id=116938"&gt;comment&lt;/a&gt;
that set me thinking:
&lt;blockquote&gt;
  Something about hacker culture that never really set well with
  me was this Â— the nastiness. ... I just don't understand why people
  troll like they do.
&lt;/blockquote&gt;
I've thought a lot over the last couple years about the problem of
trolls.  It's an old one, as old as forums, but
we're still just learning what the causes are and how to address
them.&lt;br/&gt;&lt;br/&gt;There are two senses of the word "troll."  In the original sense
it meant someone, usually an outsider, who deliberately stirred up
fights in a forum by saying controversial things.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/trolls.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
For example,
someone who didn't use a certain programming language might go to
a forum for users of that language and make disparaging remarks
about it, then sit back and watch as people rose to the bait.  This
sort of trolling was in the nature of a practical joke, like letting
a bat loose in a room full of people.&lt;br/&gt;&lt;br/&gt;The definition then spread to people who behaved like assholes in
forums, whether intentionally or not.  Now when people talk about
trolls they usually mean this broader sense of the word.  Though
in a sense this is historically inaccurate, it is in other ways
more accurate, because when someone is being an asshole it's usually
uncertain even in their own mind how much is deliberate.
That is arguably one of the defining qualities of an asshole.&lt;br/&gt;&lt;br/&gt;I think trolling in the broader sense has four causes.  The most
important is distance.  People will say things in anonymous forums
that they'd never dare say to someone's face, just as they'll do
things in cars that they'd never do as pedestrians Â— like tailgate
people, or honk at them, or cut them off.&lt;br/&gt;&lt;br/&gt;Trolling tends to be particularly bad in forums related to computers,
and I think that's due to the kind of people you find there.  Most
of them (myself included) are more comfortable dealing with abstract
ideas than with people.  Hackers can be abrupt even in person.  Put
them on an anonymous forum, and the problem gets worse.&lt;br/&gt;&lt;br/&gt;The third cause of trolling is incompetence.  If you disagree with
something, it's easier to say "you suck" than to figure out and
explain exactly what you disagree with.  You're also safe that way
from refutation.  In this respect trolling is a lot like graffiti.
Graffiti happens at the intersection of ambition and incompetence:
people want to make their mark on the world, but have no other way
to do it than literally making a mark on the world.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/trolls.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The final contributing factor is the culture of the forum.  Trolls
are like children (many &lt;i&gt;are&lt;/i&gt; children) in that they're capable of
a wide range of behavior depending on what they think will be
tolerated.  In a place where rudeness isn't tolerated, most can be
polite.  But vice versa as well.&lt;br/&gt;&lt;br/&gt;There's a sort of Gresham's Law of trolls: trolls are willing to
use a forum with a lot of thoughtful people in it, but thoughtful
people aren't willing to use a forum with a lot of trolls in it.
Which means that once trolling takes hold, it tends to become the
dominant culture.  That had already happened to Slashdot and Digg by
the time I paid attention to comment threads there, but I watched
it happen to Reddit.&lt;br/&gt;&lt;br/&gt;News.YC is, among other things, an experiment to see if this fate
can be avoided.  The sites's &lt;a href="http://ycombinator.com/newsguidelines.html"&gt;guidelines&lt;/a&gt;
explicitly ask people not to say things they wouldn't say face to
face.  If someone starts being rude, other users will step in and
tell them to stop.  And when people seem to be deliberately trolling,
we ban them ruthlessly.&lt;br/&gt;&lt;br/&gt;Technical tweaks may also help.  On Reddit, votes on your comments
don't affect your karma score, but they do on News.YC.  And it does
seem to influence people when they can see their reputation in the
eyes of their peers drain away after making an asshole remark.
Often users have second thoughts and delete such comments.&lt;br/&gt;&lt;br/&gt;One might worry this would prevent people from expressing controversial
ideas, but empirically that doesn't seem to be what happens.  When
people say something substantial that gets modded down, they
stubbornly leave it up.  What people delete are wisecracks, because
they have less invested in them.&lt;br/&gt;&lt;br/&gt;So far the experiment seems to be working.  The level of conversation
on News.YC is as high as on any forum I've seen.  But we still only
have about 8,000 uniques a day.  The conversations on Reddit were
good when it was that small.  The challenge is whether we can keep
things this way.&lt;br/&gt;&lt;br/&gt;I'm optimistic we will.  We're not depending just on technical
tricks.  The core users of News.YC are mostly refugees from other
sites that were overrun by trolls.  They feel about trolls roughly
the way refugees from Cuba or Eastern Europe feel about dictatorships.
So there are a lot of people working to keep this from happening
again.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I mean forum in the general sense of a place to exchange views.
The original Internet forums were not web sites but Usenet newsgroups.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
I'm talking here about everyday tagging.  Some graffiti is
quite impressive (anything becomes art if you do it well enough)
but the median tag is just visual spam.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//trolls.html</guid>
      <pubDate>Fri, 01 Feb 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Future of Web Startups</title>
      <link>https://paulgraham.com//webstartups.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a keynote at FOWA in October 2007.)&amp;lt;/i&lt;/i&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a keynote at FOWA in October 2007.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;There's something interesting happening right now.  Startups are
undergoing the same transformation that technology does when it becomes
cheaper.&lt;br/&gt;&lt;br/&gt;It's a pattern we see over and over in technology.  Initially
there's some device that's very expensive and made
in small quantities.  Then someone discovers how to make them cheaply; 
many more get built; and as a result they can be used in new ways.&lt;br/&gt;&lt;br/&gt;Computers are a familiar example.  When I was a kid, computers were
big, expensive machines built one at a time.  Now they're a commodity.
Now we can stick computers in everything.&lt;br/&gt;&lt;br/&gt;This pattern is very old.  Most of the turning
points in economic history are instances of it.  It happened to
steel in the 1850s, and to power in the 1780s.
It happened to cloth manufacture in the thirteenth century, generating
the wealth that later brought about the Renaissance.  Agriculture
itself was an instance of this pattern.&lt;br/&gt;&lt;br/&gt;Now as well as being produced by startups, this pattern
is happening &lt;i&gt;to&lt;/i&gt; startups.  It's so cheap to start web startups
that orders of magnitudes more will be started.   If the pattern
holds true, that should cause dramatic changes.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Lots of Startups&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So my first prediction about the future of web startups is pretty
straightforward: there will be a lot of them.  When starting a
startup was expensive, you had to get the permission of investors
to do it.  Now the only threshold is courage.&lt;br/&gt;&lt;br/&gt;Even that threshold is getting lower, as people watch others take
the plunge and survive.  In the last batch of startups we funded,
we had several founders who said they'd thought of applying before,
but weren't sure and got jobs instead.  It was only after hearing
reports of friends who'd done it that they decided to try it
themselves.&lt;br/&gt;&lt;br/&gt;Starting a startup is hard, but having a 9 to 5 job is hard too,
and in some ways a worse kind of hard.  In a startup you have lots
of worries, but you don't have that feeling that your life is flying
by like you do in a big company.  Plus in a startup you could make
much more money.&lt;br/&gt;&lt;br/&gt;As word spreads that startups work, the number may grow
to a point that would now seem surprising.&lt;br/&gt;&lt;br/&gt;We now think of it as normal to have a job at a company, but this
is the thinnest of historical veneers.  Just two or three
lifetimes ago, most people in what are now called industrialized
countries lived by farming.  So while it may seem surprising to
propose that large numbers of people will change the way they make
a living, it would be more surprising if they didn't.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Standardization&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When technology makes something dramatically cheaper, standardization
always follows.  When you make things in large volumes you tend
to standardize everything that doesn't need to change.&lt;br/&gt;&lt;br/&gt;At Y Combinator we still only have four people, so we try to
standardize everything.  We could hire employees, but we want to be
forced to figure out how to scale investing.&lt;br/&gt;&lt;br/&gt;We often tell startups to release a minimal version one quickly, 
then let the needs of the users determine what to do
next.  In essense, let the market design the product.  We've
done the same thing ourselves.  We think of the techniques we're
developing for dealing with large numbers of startups as like
software.  Sometimes it literally is software, like 
&lt;a href="http://news.ycombinator.com"&gt;Hacker News&lt;/a&gt; and
our application system.&lt;br/&gt;&lt;br/&gt;One of the most important things we've been working on standardizing
are investment terms.  Till now investment terms have been
individually negotiated.
This is a problem for founders, because it makes raising money
take longer and cost more in legal fees.  So as well as using the
same paperwork for every deal we do, we've commissioned generic
angel paperwork that all the startups we fund can use for future
rounds.&lt;br/&gt;&lt;br/&gt;Some investors will still want to cook up their own deal terms.
Series A rounds, where you raise a million dollars or more, will
be custom deals for the forseeable future.  But I think angel rounds
will start to be done mostly with standardized agreements.  An angel
who wants to insert a bunch of complicated terms into the agreement
is probably not one you want anyway.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. New Attitude to Acquisition&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Another thing I see starting to get standardized is acquisitions.
As the volume of startups increases, big companies will start to
develop standardized procedures that make acquisitions little
more work than hiring someone.&lt;br/&gt;&lt;br/&gt;Google is the leader here, as in so many areas of technology.  They
buy a lot of startupsâ€” more than most people realize, because they
only announce a fraction of them.   And being Google, they're
figuring out how to do it efficiently.&lt;br/&gt;&lt;br/&gt;One problem they've solved is how to think about acquisitions.  For
most companies, acquisitions still carry some stigma of inadequacy.
Companies do them because they have to, but there's usually some
feeling they shouldn't have toâ€”that their own programmers should
be able to build everything they need.&lt;br/&gt;&lt;br/&gt;Google's example should cure the rest of the world of this idea.
Google has by far the best programmers of any public technology
company.  If they don't have a problem doing acquisitions, the
others should have even less problem.  However many Google does,
Microsoft should do ten times as many.&lt;br/&gt;&lt;br/&gt;One reason Google doesn't have a problem with acquisitions
is that they know first-hand the quality of the people they can get
that way.  Larry and Sergey only started Google after making the
rounds of the search engines trying to sell their idea and finding
no takers.  They've &lt;i&gt;been&lt;/i&gt; the guys coming in to visit the big
company, so they know who might be sitting across that conference
table from them.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Riskier Strategies are Possible&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Risk is always proportionate to reward.  The way to get really big
returns is to do things that seem crazy, like starting a new search
engine in 1998, or turning down a billion dollar acquisition offer.&lt;br/&gt;&lt;br/&gt;This has traditionally been a problem in venture funding.  Founders
and investors have different attitudes to risk.  Knowing that risk
is on average proportionate to reward, investors like risky strategies,
while founders, who don't have a big enough sample size to care
what's true on average, tend to be more conservative.&lt;br/&gt;&lt;br/&gt;If startups are easy to start, this conflict goes away, because
founders can start them younger, when it's rational to take more
risk, and can start more startups total in their careers.  When
founders can do lots of startups, they can start to look at the
world in the same portfolio-optimizing way as investors.  And that
means the overall amount of wealth created can be greater, because
strategies can be riskier.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Younger, Nerdier Founders&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If startups become a cheap commodity, more people will be able to
have them, just as more people could have computers once microprocessors
made them cheap.  And in particular, younger and more technical
founders will be able to start startups than could before.&lt;br/&gt;&lt;br/&gt;Back when it cost a lot to start a startup, you had to convince
investors to let you do it.  And that required very different skills
from actually doing the startup.  If investors were perfect judges,
the two would require exactly the same skills.  But unfortunately
most investors are terrible judges.  I know because I see behind
the scenes what an enormous amount of work it takes to raise money,
and the amount of selling required in an industry is always inversely
proportional to the judgement of the buyers.&lt;br/&gt;&lt;br/&gt;Fortunately, if startups get cheaper to start, there's another way
to convince investors.  Instead of going to venture capitalists
with a business plan and trying to convince them to fund it, you
can get a product launched on a few tens of thousands of dollars
of seed money from us or your uncle, and approach them with a
working company instead of a plan for one.  Then instead of
having to seem smooth and confident, you can just point them to
Alexa.&lt;br/&gt;&lt;br/&gt;This way of convincing investors is better suited to hackers, who
often went into technology in part because they felt uncomfortable
with the amount of fakeness required in other fields.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. Startup Hubs Will Persist&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It might seem that if startups get cheap to start, it will mean the
end of startup hubs like Silicon Valley.  If all you need to start
a startup is rent money, you should be able to do it anywhere.&lt;br/&gt;&lt;br/&gt;This is kind of true and kind of false.  It's true that you can now
&lt;i&gt;start&lt;/i&gt; a startup anywhere.  But you have to do more with a
startup than just start it.  You have to make it succeed.  And that
is more likely to happen in a startup hub.&lt;br/&gt;&lt;br/&gt;I've thought a lot about this question, and it seems to me the
increasing cheapness of web startups will if anything increase the
importance of startup hubs.  The value of startup hubs, like centers
for any kind of business, lies in something very old-fashioned:
face to face meetings.  No technology in the immediate future will
replace walking down University Ave and running into a friend who
tells you how to fix a bug that's been bothering you all weekend,
or visiting a friend's startup down the street and ending up in a
conversation with one of their investors.&lt;br/&gt;&lt;br/&gt;The question of whether to be in a startup hub is like the question
of whether to take outside investment.  The question is not whether
you &lt;i&gt;need&lt;/i&gt; it, but whether it brings any advantage at all.
Because anything that brings an advantage will give your competitors
an advantage over you if they do it and you don't.  So if you hear
someone saying "we don't need to be in Silicon Valley," that use
of the word "need" is a sign they're not even thinking about the
question right.&lt;br/&gt;&lt;br/&gt;And while startup hubs are as powerful magnets as ever, the increasing
cheapness of starting a startup means the particles they're attracting
are getting lighter.  A startup now can be just a pair of 22 year
old guys.  A company like that can move much more easily than one
with 10 people, half of whom have kids.&lt;br/&gt;&lt;br/&gt;We know because we make people move for Y Combinator, and it doesn't
seem to be a problem. The advantage of being able to work together
face to face for three months outweighs the inconvenience of moving.
Ask anyone who's done it.&lt;br/&gt;&lt;br/&gt;The mobility of seed-stage startups means that seed funding is a
national business.  One of the most common emails we get is from
people asking if we can help them set up a local clone of Y Combinator.
But this just wouldn't work. Seed funding isn't regional, just as
big research universities aren't.&lt;br/&gt;&lt;br/&gt;Is seed funding not merely national, but international?  Interesting
question.  There are signs it may be.  We've had an ongoing
stream of founders from outside the US, and they tend to do
particularly well, because they're all people who were so determined
to succeed that they were willing to move to another country to do
it.&lt;br/&gt;&lt;br/&gt;The more mobile startups get, the harder it would be to start new 
silicon valleys.  If startups are mobile, the best local talent 
will go to the real Silicon Valley,
and all they'll get at the local one will be the people who didn't
have the energy to move.&lt;br/&gt;&lt;br/&gt;This is not a nationalistic idea, incidentally.  It's cities that
compete, not countries.  Atlanta is just as hosed as Munich.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. Better Judgement Needed&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If the number of startups increases dramatically, then the people
whose job is to judge them are going to have to get better at
it.  I'm thinking particularly of investors and acquirers.  We now
get on the order of 1000 applications a year.  What are we going
to do if we get 10,000?&lt;br/&gt;&lt;br/&gt;That's actually an alarming idea.  But we'll figure out some kind
of answer.  We'll have to.  It will probably involve writing some
software, but fortunately we can do that.&lt;br/&gt;&lt;br/&gt;Acquirers will also have to get better at picking winners.   
They generally do better than investors, because they pick
later, when there's more performance to measure.  But even at the
most advanced acquirers, identifying companies to
buy is extremely ad hoc, and completing the acquisition often
involves a great deal of unneccessary friction.&lt;br/&gt;&lt;br/&gt;I think acquirers may eventually have chief acquisition officers
who will both identify good acquisitions and make the deals happen.
At the moment those two functions are separate.  Promising new
startups are often discovered by developers.  If someone powerful
enough wants to buy them, the deal is handed over to corp dev guys
to negotiate.  It would be better if both were combined in
one group, headed by someone with a technical background and some
vision of what they wanted to accomplish.  Maybe in the future big
companies will have both a VP of Engineering responsible for
technology developed in-house, and a CAO responsible for bringing
technology in from outside.&lt;br/&gt;&lt;br/&gt;At the moment, there is no one within big companies who gets in
trouble when they buy a startup for $200 million that they could
have bought earlier for $20 million.  There should start to be
someone who gets in trouble for that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8. College Will Change&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If the best hackers start their own companies after college
instead of getting jobs, that will change what happens in college.
Most of these changes will be for the better.  I think the experience
of college is warped in a bad way by the expectation that afterward
you'll be judged by potential employers.&lt;br/&gt;&lt;br/&gt;One change will be in the meaning of "after
college," which will switch from when one graduates from college
to when one leaves it.  If you're starting your own company, why
do you need a degree?  We don't encourage people to start startups
during college, but the best founders are certainly
capable of it.  Some of the most successful companies we've funded
were started by undergrads.&lt;br/&gt;&lt;br/&gt;I grew up in a time where college degrees seemed really important,
so I'm alarmed to be saying things like this, but there's nothing
magical about a degree.  There's nothing that magically changes
after you take that last exam.  The importance of degrees is due
solely to the administrative needs of large organizations.  These
can certainly affect your lifeâ€”it's hard to get into grad
school, or to get a work visa in the US, without an undergraduate
degreeâ€”but tests like this will matter less and
less.&lt;br/&gt;&lt;br/&gt;As well as mattering less whether students get degrees, it will
also start to matter less where they go to college.  In a startup
you're judged by users, and they don't care where you went to
college.  So in a world of startups, elite universities will play
less of a role as gatekeepers.  In the US it's a national scandal
how easily children of rich parents game college admissions.
But the way this problem ultimately gets solved may not be by
reforming the universities but by going around them.  We in the
technology world are used to that sort of solution: you don't beat
the incumbents; you redefine the problem to make them irrelevant.&lt;br/&gt;&lt;br/&gt;The greatest value of universities is not the brand name or perhaps
even the classes so much as the people you meet.  If
it becomes common to start a startup after college, students may start
trying to maximize this.  Instead of focusing on getting
internships at companies they want to work for, they may start
to focus on working with other students they want as cofounders.&lt;br/&gt;&lt;br/&gt;What students do in their classes will change too.  Instead of
trying to get good grades to impress future employers, students
will try to learn things.  We're talking about some pretty dramatic
changes here.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. Lots of Competitors&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If it gets easier to start a startup, it's easier for competitors too. 
That doesn't erase the advantage of
increased cheapness, however.  You're not all playing a zero-sum
game.  There's not some fixed number of startups that can succeed,
regardless of how many are started.&lt;br/&gt;&lt;br/&gt;In fact, I don't think there's any limit to the number of startups
that could succeed.  Startups succeed by creating wealth, which is
the satisfaction of people's desires.  And people's desires seem
to be effectively infinite, at least in the short term.&lt;br/&gt;&lt;br/&gt;What the increasing number of startups does mean is that you won't
be able to sit on a good idea.  Other people have your idea, and
they'll be increasingly likely to do something about it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;10. Faster Advances&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There's a good side to that, at least for consumers of
technology.  If people get right to work implementing ideas instead
of sitting on them, technology will evolve faster.&lt;br/&gt;&lt;br/&gt;Some kinds of innovations happen a company at a time, like the
punctuated equilibrium model of evolution.  There are some kinds
of ideas that are so threatening that it's hard for big companies
even to think of them.  Look at what a hard time Microsoft is
having discovering web apps.  They're like a character in a movie
that everyone in the audience can see something bad is about to
happen to, but who can't see it himself.  The big innovations
that happen a company at a time will obviously happen faster if
the rate of new companies increases.&lt;br/&gt;&lt;br/&gt;But in fact there will be a double speed increase.  People won't
wait as long to act on new ideas, but also those ideas will
increasingly be developed within startups rather than big companies.
Which means technology will evolve faster per company as well.&lt;br/&gt;&lt;br/&gt;Big companies are just not a good place to make things happen fast.
I talked recently to a founder whose startup had been acquired by
a big company.  He was a precise sort of guy, so he'd measured their
productivity before and after.  He counted lines of code, which can
be a dubious measure, but in this case was meaningful because it
was the same group of programmers.  He found they were one thirteenth
as productive after the acquisition.&lt;br/&gt;&lt;br/&gt;The company that bought them was not a particularly stupid one.
I think what he was measuring was mostly the cost of bigness.  I
experienced this myself, and his number sounds about right.  There's
something about big companies that just sucks the energy out of
you.&lt;br/&gt;&lt;br/&gt;Imagine what all that energy could do if it were put to use.  There
is an enormous latent capacity in the world's hackers that most
people don't even realize is there.  That's the main reason we do
Y Combinator: to let loose all this energy by making it easy for
hackers to start their own startups.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;A Series of Tubes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The process of starting startups is currently like the plumbing in
an old house.  The pipes are narrow and twisty, and there are leaks
in every joint.  In the future this mess will gradually be replaced
by a single, huge pipe.  The water will still have to get from A
to B, but it will get there faster and without the risk of spraying
out through some random leak.&lt;br/&gt;&lt;br/&gt;This will change a lot of things for the better.  In a big, straight
pipe like that, the force of being measured by one's performance
will propagate back through the whole system.  Performance is always
the ultimate test, but there are so many kinks in the plumbing now
that most people are insulated from it most of the time.  So you
end up with a world in which high school students think they need
to get good grades to get into elite colleges, and college students
think they need to get good grades to impress employers, within
which the employees waste most of their time in political battles,
and from which consumers have to buy anyway because there are so
few choices.  Imagine if that sequence became a big, straight pipe.
Then the effects of being measured by performance would propagate
all the way back to high school, flushing out all the arbitrary
stuff people are measured by now.  That is the future of web startups.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Brian Oberkirch and Simon Willison for inviting me to 
speak, and the crew at Carson Systems for making everything run smoothly.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//webstartups.html</guid>
      <pubDate>Mon, 01 Oct 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why to Move to a Startup Hub</title>
      <link>https://paulgraham.com//startuphubs.html</link>
      <description>&lt;font face="verdana" size="2"&gt;October 2007&lt;br/&gt;&lt;br/&gt;After the last 
&lt;a href="https://paulgraham.com/webstartups.html"&gt;talk&lt;/a&gt; I gave, one of the organizers 
got up on the
stage to deliver an impromptu rebuttal.  That never happened before.
I only heard the first few sentences, but that was enough to tell
what I said that upset him: that startups would do better if they
moved to Silicon Valley.&lt;br/&gt;&lt;br/&gt;This conference was in London, and most of the audience seemed to
be from the UK.  So saying &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;October 2007&lt;br/&gt;&lt;br/&gt;After the last 
&lt;a href="https://paulgraham.com/webstartups.html"&gt;talk&lt;/a&gt; I gave, one of the organizers 
got up on the
stage to deliver an impromptu rebuttal.  That never happened before.
I only heard the first few sentences, but that was enough to tell
what I said that upset him: that startups would do better if they
moved to Silicon Valley.&lt;br/&gt;&lt;br/&gt;This conference was in London, and most of the audience seemed to
be from the UK.  So saying startups should move to Silicon Valley
seemed like a nationalistic remark: an obnoxious American telling
them that if they wanted to do things right they should all just
move to America.&lt;br/&gt;&lt;br/&gt;Actually I'm less American than I seem.  I didn't say so, but I'm
British by birth.  And just as Jews are ex officio allowed to tell
Jewish jokes, I don't feel like I have to bother being diplomatic
with a British audience.&lt;br/&gt;&lt;br/&gt;The idea that startups would do better to move to Silicon Valley
is not even a nationalistic one.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startuphubs.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
It's the same thing I say to
startups in the US.  Y Combinator alternates between coasts every
6 months. Every other funding cycle is in Boston.  And even though
Boston is the second biggest startup hub in the US (and the world),
we tell the startups from those cycles that their best bet is to
move to Silicon Valley.  If that's true of Boston, it's even more
true of every other city.&lt;br/&gt;&lt;br/&gt;This is about cities, not countries.&lt;br/&gt;&lt;br/&gt;And I think I can prove I'm right.  You can easily reduce the
opposing argument ad what most people would agree was absurdum.
Few would be willing to claim that it doesn't matter at all where
a startup isâ€”that a startup operating out of a small agricultural
town wouldn't benefit from moving to a startup hub.  Most people
could see how it might be helpful to be in a place where there was
infrastructure for startups, accumulated knowledge about how to
make them work, and other people trying to do it.  And yet whatever
argument you use to prove that startups don't need to move from
London to Silicon Valley could equally well be used to prove startups
don't need to move from smaller towns to London.&lt;br/&gt;&lt;br/&gt;The difference between cities is a matter of degree.  And if, as
nearly everyone who knows agrees, startups are better off in Silicon
Valley than Boston, then they're better off in Silicon Valley than
everywhere else too.&lt;br/&gt;&lt;br/&gt;I realize I might seem to have a vested interest in this conclusion,
because startups that move to the US might do it through Y Combinator.
But the American startups we've funded will attest that I say the
same thing to them.&lt;br/&gt;&lt;br/&gt;I'm not claiming of course that every startup has to go to Silicon
Valley to succeed.  Just that all other things being equal, the
more of a startup hub a place is, the better startups will do there.
But other considerations can outweigh the advantages of moving.
I'm not saying founders with families should uproot them to move
halfway around the world; that might be too much of a distraction.&lt;br/&gt;&lt;br/&gt;Immigration difficulties might be another reason to stay put.
Dealing with immigration problems is like raising money: for some
reason it seems to consume all your attention.  A startup can't
afford much of that.  One Canadian startup we funded spent about 6
months working on moving to the US.  Eventually they just gave up,
because they couldn't afford to take so much time away from working
on their software.&lt;br/&gt;&lt;br/&gt;(If another country wanted to establish a rival to Silicon Valley,
the single best thing they could do might be to create a special
visa for startup founders.  US immigration policy is one of Silicon 
Valley's biggest weaknesses.)&lt;br/&gt;&lt;br/&gt;If your startup is connected to a specific industry, you may be
better off in one of its centers.  A startup doing something related
to entertainment might want to be in New York or LA.&lt;br/&gt;&lt;br/&gt;And finally, if a good investor has committed to fund
you if you stay where you are, you should probably stay.  Finding
investors is hard.  You generally shouldn't pass up a definite
funding offer to move.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startuphubs.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In fact, the quality of the investors may be the main advantage of
startup hubs.  Silicon Valley investors are noticeably more aggressive
than Boston ones.  Over and over, I've seen startups we've funded
snatched by west coast investors out from under the noses of Boston
investors who saw them first but acted too slowly.  At this year's
Boston Demo Day, I told the audience that this happened every year,
so if they saw a startup they liked, they should make them an offer.
And yet within a month it had happened again: an aggressive west
coast VC who had met the founder of a YC-funded startup a week
before beat out a Boston VC who had known him for years.  By the
time the Boston VC grasped what was happening, the deal was already
gone.&lt;br/&gt;&lt;br/&gt;Boston investors will admit they're more conservative.  Some want
to believe this comes from the city's prudent Yankee character.
But Occam's razor suggests the truth is less flattering.  Boston
investors are probably more conservative than Silicon Valley investors
for the same reason Chicago investors are more conservative than
Boston ones.  They don't understand startups as well.&lt;br/&gt;&lt;br/&gt;West coast investors aren't bolder because they're irresponsible
cowboys, or because the good weather makes them optimistic.  They're
bolder because they know what they're doing.  They're the skiers
who ski on the diamond slopes.  Boldness is the essence of venture
investing.  The way you get big returns is not by trying to avoid
losses, but by trying to ensure you get some of the big hits. And
the big hits often look risky at first.&lt;br/&gt;&lt;br/&gt;Like Facebook.  Facebook was started in Boston.  Boston VCs had the
first shot at them.  But they said no, so Facebook moved to Silicon
Valley and raised money there.  The partner who turned them down
now says that "may turn out to have been a mistake."&lt;br/&gt;&lt;br/&gt;Empirically, boldness wins.  If the aggressive ways of west coast
investors are going to come back to bite them, it has been a long
time coming.  Silicon Valley has been pulling ahead of Boston since
the 1970s.  If there was going to be a comeuppance for the west
coast investors, the bursting of the Bubble would have been it.
But since then the west coast has just pulled further ahead.&lt;br/&gt;&lt;br/&gt;West coast investors are confident enough of their judgement to act
boldly; east coast investors, not so much; but anyone who thinks
east coast investors act that way out of prudence should see the
frantic reactions of an east coast VC in the process of losing a
deal to a west coast one.&lt;br/&gt;&lt;br/&gt;In addition to the concentration that comes from specialization,
startup hubs are also markets.  And markets are usually centralized.
Even now, when traders could be anywhere, they cluster in a few
cities.  It's hard to say exactly what it is about face to face
contact that makes deals happen, but whatever it is, it hasn't yet
been duplicated by technology.&lt;br/&gt;&lt;br/&gt;Walk down University Ave at the right time, and you might overhear
five different people talking on the phone about deals.  In fact,
this is part of the reason Y Combinator is in Boston half the time:
it's hard to stand that year round.  But though it can sometimes
be annoying to be surrounded by people who only think about one
thing, it's the place to be if that one thing is what you're trying
to do.&lt;br/&gt;&lt;br/&gt;I was talking recently to someone who works on search at Google.
He knew a lot of people at Yahoo, so he was in a good position to
compare the two companies.  I asked him why Google was better at
search.  He said it wasn't anything specific Google did, but simply
that they understood search so much better.&lt;br/&gt;&lt;br/&gt;And that's why startups thrive in startup hubs like Silicon Valley.
Startups are a very specialized business, as specialized as diamond
cutting.  And in startup hubs they understand it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
The nationalistic idea is the converse: that startups should
stay in a certain city because of the country it's in.  If you
really have a "one world" viewpoint, deciding to move from London
to Silicon Valley is no different from deciding to move from Chicago
to Silicon Valley.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
An investor who merely seems like he will fund you, however,
you can ignore.  Seeming like they will fund you one day is the way
investors say No.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Jessica Livingston, Harjeet Taggar, and Kulveer
Taggar for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/item?id=65815"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//startuphubs.html</guid>
      <pubDate>Mon, 01 Oct 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>News from the Front</title>
      <link>https://paulgraham.com//colleges.html</link>
      <description>&lt;font face="verdana" size="2"&gt;September 2007&lt;br/&gt;&lt;br/&gt;A few weeks ago I had a thought so heretical that it really surprised
me. It may not matter all that much where you go to college.&lt;br/&gt;&lt;br/&gt;For me, as for a lot of middle class kids, getting into a good
college was more or less the meaning of life when I was growing up.
What was I?  A student.  To do that well meant to get good grades.
Why did one have to get good grades?  To get into a good college.
And why did one want to do that?  There se&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;September 2007&lt;br/&gt;&lt;br/&gt;A few weeks ago I had a thought so heretical that it really surprised
me. It may not matter all that much where you go to college.&lt;br/&gt;&lt;br/&gt;For me, as for a lot of middle class kids, getting into a good
college was more or less the meaning of life when I was growing up.
What was I?  A student.  To do that well meant to get good grades.
Why did one have to get good grades?  To get into a good college.
And why did one want to do that?  There seemed to be several reasons:
you'd learn more, get better jobs, make more money.  But it didn't
matter exactly what the benefits would be.  College was a bottleneck
through which all your future prospects passed; everything would
be better if you went to a better college.&lt;br/&gt;&lt;br/&gt;A few weeks ago I realized that somewhere along the line I had
stopped believing that.&lt;br/&gt;&lt;br/&gt;What first set me thinking about this was the new trend of worrying
obsessively about what 
&lt;a href="http://nymag.com/nymetro/urban/education/features/15141/"&gt;kindergarten&lt;/a&gt;
your kids go to.  It seemed to
me this couldn't possibly matter.  Either it won't help your kid
get into Harvard, or if it does, getting into Harvard won't mean
much anymore.  And then I thought: how much does it mean even now?&lt;br/&gt;&lt;br/&gt;It turns out I have a lot of data about that.  My three partners
and I run a seed stage investment firm called 
&lt;a href="http://ycombinator.com"&gt;Y Combinator&lt;/a&gt;.  We
invest when the company is just a couple guys and an idea.  The
idea doesn't matter much; it will change anyway.  Most of our
decision is based on the founders.  The average founder is three
years out of college.  Many have just graduated; a few are still
in school.  So we're in much the same position as a graduate program,
or a company hiring people right out of college.  Except our choices
are immediately and visibly tested.  There are two possible outcomes
for a startup: success or failureâ€”and usually you know within a
year which it will be.&lt;br/&gt;&lt;br/&gt;The test applied to a startup is among the purest of real world
tests.  A startup succeeds or fails depending almost entirely on
the efforts of the founders.  Success is decided by the market: you
only succeed if users like what you've built.  And users don't care
where you went to college.&lt;br/&gt;&lt;br/&gt;As well as having precisely measurable results, we have a lot of
them.  Instead of doing a small number of large deals like a
traditional venture capital fund, we do a large number of small
ones.  We currently fund about 40 companies a year, selected from
about 900 applications representing a total of about 2000 people. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/colleges.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Between the volume of people we judge and the rapid, unequivocal
test that's applied to our choices, Y Combinator has been an
unprecedented opportunity for learning how to pick winners.  One
of the most surprising things we've learned is how little it matters
where people went to college.&lt;br/&gt;&lt;br/&gt;I thought I'd already been cured of caring about that.  There's
nothing like going to grad school at Harvard to cure you of any
illusions you might have about the average Harvard undergrad.  And
yet Y Combinator showed us we were still overestimating people who'd
been to elite colleges.  We'd interview people from MIT or Harvard
or Stanford and sometimes find ourselves thinking: they &lt;i&gt;must&lt;/i&gt; be
smarter than they seem.  It took us a few iterations to learn to
trust our senses.&lt;br/&gt;&lt;br/&gt;Practically everyone thinks that someone who went to MIT or Harvard
or Stanford must be smart.  Even people who hate you for it believe
it.&lt;br/&gt;&lt;br/&gt;But when you think about what it means to have gone to an elite
college, how could this be true?   We're talking about a decision
made by admissions officersâ€”basically, HR peopleâ€”based on a
cursory examination of a huge pile of depressingly similar applications
submitted by seventeen year olds.  And what do they have to go on?
An easily gamed standardized test; a short essay telling you what
the kid thinks you want to hear; an interview with a random alum;
a high school record that's largely an index of obedience.  Who
would rely on such a test?&lt;br/&gt;&lt;br/&gt;And yet a lot of companies do.  A lot of companies are very much
influenced by where applicants went to college.  How could they be?
I think I know the answer to that.&lt;br/&gt;&lt;br/&gt;There used to be a saying in the corporate world: "No one ever got
fired for buying IBM."  You no longer hear this about IBM specifically,
but the idea is very much alive; there is a whole category of
"enterprise" software companies that exist to take advantage of it.
People buying technology for large organizations don't care if they
pay a fortune for mediocre software.  It's not their money.  They
just want to buy from a supplier who seems safeâ€”a company with
an established name, confident salesmen, impressive offices, and
software that conforms to all the current fashions.  Not necessarily
a company that will deliver so much as one that, if they do let you
down, will still seem to have been a prudent choice.  So companies
have evolved to fill that niche.&lt;br/&gt;&lt;br/&gt;A recruiter at a big company is in much the same position as someone
buying technology for one.  If someone went to Stanford and is not
obviously insane, they're probably a safe bet.  And a safe bet is
enough.  No one ever measures recruiters by the later performance
of people they turn down. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/colleges.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I'm not saying, of course, that elite colleges have evolved to prey
upon the weaknesses of large organizations the way enterprise
software companies have.  But they work as if they had.  In addition
to the power of the brand name, graduates of elite colleges have
two critical qualities that plug right into the way large organizations
work.  They're good at doing what they're asked, since that's what
it takes to please the adults who judge you at seventeen.  And
having been to an elite college makes them more confident.&lt;br/&gt;&lt;br/&gt;Back in the days when people might spend their whole career at one
big company, these qualities must have been very valuable.  Graduates
of elite colleges would have been capable, yet amenable to authority.
And since individual performance is so hard to measure in large
organizations, their own confidence would have been the starting
point for their reputation.&lt;br/&gt;&lt;br/&gt;Things are very different in the new world of startups.  We couldn't
save someone from the market's judgement even if we wanted to.  And
being charming and confident counts for nothing with users.  All
users care about is whether you make something they like.  If you
don't, you're dead.&lt;br/&gt;&lt;br/&gt;Knowing that test is coming makes us work a lot harder to get the
right answers than anyone would if they were merely hiring people.
We can't afford to have any illusions about the predictors of
success.  And what we've found is that the variation between schools
is so much smaller than the variation between individuals that it's
negligible by comparison.  We can learn more about someone in the
first minute of talking to them than by knowing where they went to
school.&lt;br/&gt;&lt;br/&gt;It seems obvious when you put it that way.  Look at the individual,
not where they went to college.  But that's a weaker statement than
the idea I began with, that it doesn't matter much where a given
individual goes to college.  Don't you learn things at the best
schools that you wouldn't learn at lesser places?&lt;br/&gt;&lt;br/&gt;Apparently not.  Obviously you can't prove this in the case of a
single individual, but you can tell from aggregate evidence: you
can't, without asking them, distinguish people who went to one
school from those who went to another three times as far down the
&lt;i&gt;US News&lt;/i&gt; list. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/colleges.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Try it and see.&lt;br/&gt;&lt;br/&gt;How can this be?  Because how much you learn in college depends a
lot more on you than the college.  A determined party animal can
get through the best school without learning anything.  And someone
with a real thirst for knowledge will be able to find a few smart
people to learn from at a school that isn't prestigious at all.&lt;br/&gt;&lt;br/&gt;
The other students are the biggest advantage of going to an elite
college; you learn more from them than the professors.  But
you should be able to reproduce this at most colleges if you make
a conscious effort to find smart friends.  At
most colleges you can find at least a handful of other smart students,
and most people have only a handful of close friends in college
anyway. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/colleges.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The odds of finding smart professors are even better.
The curve for faculty is a lot flatter than for students, especially
in math and the hard sciences; you have to go pretty far down the
list of colleges before you stop finding smart professors in the
math department.&lt;br/&gt;&lt;br/&gt;So it's not surprising that we've found the relative prestige of
different colleges useless in judging individuals.  There's a lot
of randomness in how colleges select people, and what they learn
there depends much more on them than the college.  Between these
two sources of variation, the college someone went to doesn't mean
a lot.  It is to some degree a predictor of ability, but so weak
that we regard it mainly as a source of error and try consciously
to ignore it.&lt;br/&gt;&lt;br/&gt;I doubt what we've discovered is an anomaly specific to startups.
Probably people have always overestimated the importance of where
one goes to college.  We're just finally able to measure it.&lt;br/&gt;&lt;br/&gt;The unfortunate thing is not just that people are judged by such a
superficial test, but that so many judge themselves by it.  A lot
of people, probably the majority of people in America, have
some amount of insecurity about where, or whether, they went to
college.  The tragedy of the situation is that by far the greatest
liability of not having gone to the college you'd have liked is
your own feeling that you're thereby lacking something.  Colleges
are a bit like exclusive clubs in this respect.  There is only one
real advantage to being a member of most exclusive clubs: you know
you wouldn't be missing much if you weren't.  When you're excluded,
you can only imagine the advantages of being an insider.  But
invariably they're larger in your imagination than in real life.&lt;br/&gt;&lt;br/&gt;So it is with colleges.  Colleges differ, but they're nothing like
the stamp of destiny so many imagine them to be.  People aren't
what some admissions officer decides about them at seventeen.
They're what they make themselves.&lt;br/&gt;&lt;br/&gt;Indeed, the great advantage of not caring where people went to
college is not just that you can stop judging them (and yourself)
by superficial measures, but that you can focus instead on what
really matters.  What matters is what you make of yourself.  
I think that's what we
should tell kids.  Their job isn't to get good grades so they can
get into a good college, but to learn and do.  And not just because
that's more rewarding than worldly success.  That will increasingly
&lt;i&gt;be&lt;/i&gt; the route to worldly success.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;] 
Is what we measure worth measuring?  I think so.  You can get
rich simply by being energetic and unscrupulous, but getting rich
from a technology startup takes some amount of brains.   It is just
the kind of work the upper middle class values; it has about the
same intellectual component as being a doctor.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;] 
Actually, someone did, once.  Mitch Kapor's wife Freada was
in charge of HR at Lotus in the early years.  (As he is at pains
to point out, they did not become romantically involved till
afterward.)  At one point they worried Lotus was losing its startup
edge and turning into a big company.  So as an experiment she sent
their recruiters the resumes of the first 40 employees, with
identifying details changed.  These were the people who had made
Lotus into the star it was.  Not one got an interview.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;] 
The &lt;i&gt;US News&lt;/i&gt; list?  Surely no one trusts that.  Even if the
statistics they consider are useful, how do they decide on the
relative weights?  The reason the &lt;i&gt;US News&lt;/i&gt; list is meaningful is
precisely because they are so intellectually dishonest in that
respect.  There is no external source they can use to calibrate the
weighting of the statistics they use; if there were, we could just
use that instead.  What they must do is adjust the weights till the
top schools are the usual suspects in about the right order.  So
in effect what the &lt;i&gt;US News&lt;/i&gt; list tells us is what the editors think
the top schools are, which is probably not far from the conventional
wisdom on the matter.  The amusing thing is, because some schools
work hard to game the system, the editors will have to keep tweaking
their algorithm to get the rankings they want.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;] 
Possible doesn't mean easy, of course.  A smart student at a party school
will inevitably be something of an outcast, just as he or
she would be in most &lt;a href="https://paulgraham.com/nerds.html"&gt;high schools&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Sarah Harlin, Jessica Livingston, Jackie
McDonough, Peter Norvig, and Robert Morris for reading drafts of
this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//colleges.html</guid>
      <pubDate>Sat, 01 Sep 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Do Philosophy</title>
      <link>https://paulgraham.com//philosophy.html</link>
      <description>&lt;font face="verdana" size="2"&gt;September 2007&lt;br/&gt;&lt;br/&gt;In high school I decided I was going to study philosophy in college.
I had several motives, some more honorable than others.  One of the
less honorable was to shock people.  College was regarded as job
training where I grew up, so studying philosophy seemed an impressively
impractical thing to do.  Sort of like slashing holes in your clothes
or putting a safety pin through your ear, which were other forms
of impressive impracticality then jus&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;September 2007&lt;br/&gt;&lt;br/&gt;In high school I decided I was going to study philosophy in college.
I had several motives, some more honorable than others.  One of the
less honorable was to shock people.  College was regarded as job
training where I grew up, so studying philosophy seemed an impressively
impractical thing to do.  Sort of like slashing holes in your clothes
or putting a safety pin through your ear, which were other forms
of impressive impracticality then just coming into fashion.&lt;br/&gt;&lt;br/&gt;But I had some more honest motives as well.  I thought studying
philosophy would be a shortcut straight to wisdom.  All the people
majoring in other things would just end up with a bunch of domain
knowledge.  I would be learning what was really what.&lt;br/&gt;&lt;br/&gt;I'd tried to read a few philosophy books.  Not recent ones; you
wouldn't find those in our high school library.  But I tried to
read Plato and Aristotle.  I doubt I believed I understood them,
but they sounded like they were talking about something important.
I assumed I'd learn what in college.&lt;br/&gt;&lt;br/&gt;The summer before senior year I took some college classes.  I learned
a lot in the calculus class, but I didn't learn much in Philosophy
101.  And yet my plan to study philosophy remained intact.  It was
my fault I hadn't learned anything.  I hadn't read the books we
were assigned carefully enough.  I'd give Berkeley's &lt;i&gt;Principles
of Human Knowledge&lt;/i&gt; another shot in college.  Anything so admired
and so difficult to read must have something in it, if one could
only figure out what.&lt;br/&gt;&lt;br/&gt;Twenty-six years later, I still don't understand Berkeley.  I have
a nice edition of his collected works.  Will I ever read it?  Seems
unlikely.&lt;br/&gt;&lt;br/&gt;The difference between then and now is that now I understand why
Berkeley is probably not worth trying to understand.  I think I see
now what went wrong with philosophy, and how we might fix it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Words&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I did end up being a philosophy major for most of college.  It
didn't work out as I'd hoped.  I didn't learn any magical truths
compared to which everything else was mere domain knowledge.  But
I do at least know now why I didn't.  Philosophy doesn't really
have a subject matter in the way math or history or most other
university subjects do.  There is no core of knowledge one must
master.  The closest you come to that is a knowledge of what various
individual philosophers have said about different topics over the
years.  Few were sufficiently correct that people have forgotten
who discovered what they discovered.&lt;br/&gt;&lt;br/&gt;Formal logic has some subject matter. I took several classes in
logic.  I don't know if I learned anything from them.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
It does seem to me very important to be able to flip ideas around in
one's head: to see when two ideas don't fully cover the space of
possibilities, or when one idea is the same as another but with a
couple things changed.  But did studying logic teach me the importance
of thinking this way, or make me any better at it?  I don't know.&lt;br/&gt;&lt;br/&gt;There are things I know I learned from studying philosophy.  The
most dramatic I learned immediately, in the first semester of
freshman year, in a class taught by Sydney Shoemaker.  I learned
that I don't exist.  I am (and you are) a collection of cells that
lurches around driven by various forces, and calls itself &lt;i&gt;I&lt;/i&gt;.  But
there's no central, indivisible thing that your identity goes with.
You could conceivably lose half your brain and live.  Which means
your brain could conceivably be split into two halves and each
transplanted into different bodies.  Imagine waking up after such
an operation.  You have to imagine being two people.&lt;br/&gt;&lt;br/&gt;The real lesson here is that the concepts we use in everyday life
are fuzzy, and break down if pushed too hard.  Even a concept as
dear to us as &lt;i&gt;I&lt;/i&gt;.  It took me a while to grasp this, but when I
did it was fairly sudden, like someone in the nineteenth century
grasping evolution and realizing the story of creation they'd been
told as a child was all wrong. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Outside of math there's a limit
to how far you can push words; in fact, it would not be a bad
definition of math to call it the study of terms that have precise
meanings.  Everyday words are inherently imprecise.  They work well
enough in everyday life that you don't notice.  Words seem to work,
just as Newtonian physics seems to.  But you can always make them
break if you push them far enough.&lt;br/&gt;&lt;br/&gt;I would say that this has been, unfortunately for philosophy, the
central fact of philosophy.  Most philosophical debates are not
merely afflicted by but driven by confusions over words.  Do we
have free will?  Depends what you mean by "free." Do abstract ideas
exist?  Depends what you mean by "exist."&lt;br/&gt;&lt;br/&gt;Wittgenstein is popularly credited with the idea that most philosophical
controversies are due to confusions over language.  I'm not sure
how much credit to give him.  I suspect a lot of people realized
this, but reacted simply by not studying philosophy, rather than
becoming philosophy professors.&lt;br/&gt;&lt;br/&gt;How did things get this way?  Can something people have spent
thousands of years studying really be a waste of time?  Those are
interesting questions.  In fact, some of the most interesting
questions you can ask about philosophy.  The most valuable way to
approach the current philosophical tradition may be neither to get
lost in pointless speculations like Berkeley, nor to shut them down
like Wittgenstein, but to study it as an example of reason gone
wrong.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;History&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Western philosophy really begins with Socrates, Plato, and Aristotle.
What we know of their predecessors comes from fragments and references
in later works; their doctrines could be described as speculative
cosmology that occasionally strays into analysis.  Presumably they
were driven by whatever makes people in every other society invent
cosmologies.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;With Socrates, Plato, and particularly Aristotle, this tradition
turned a corner.  There started to be a lot more analysis.  I suspect
Plato and Aristotle were encouraged in this by progress in math.
Mathematicians had by then shown that you could figure things out
in a much more conclusive way than by making up fine sounding stories
about them.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;People talk so much about abstractions now that we don't realize
what a leap it must have been when they first started to.  It was
presumably many thousands of years between when people first started
describing things as hot or cold and when someone asked "what is
heat?"  No doubt it was a very gradual process.  We don't know if
Plato or Aristotle were the first to ask any of the questions they
did.  But their works are the oldest we have that do this on a large
scale, and there is a freshness (not to say naivete) about them
that suggests some of the questions they asked were new to them,
at least.&lt;br/&gt;&lt;br/&gt;Aristotle in particular reminds me of the phenomenon that happens
when people discover something new, and are so excited by it that
they race through a huge percentage of the newly discovered territory
in one lifetime.  If so, that's evidence of how new this kind of
thinking was. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;This is all to explain how Plato and Aristotle can be very impressive
and yet naive and mistaken.  It was impressive even to ask the
questions they did.  That doesn't mean they always came up with
good answers.  It's not considered insulting to say that ancient
Greek mathematicians were naive in some respects, or at least lacked
some concepts that would have made their lives easier.  So I hope
people will not be too offended if I propose that ancient philosophers
were similarly naive.  In particular, they don't seem to have fully
grasped what I earlier called the central fact of philosophy: that
words break if you push them too far.&lt;br/&gt;&lt;br/&gt;"Much to the surprise of the builders of the first digital computers,"
Rod Brooks wrote, "programs written for them usually did not work."
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Something similar happened when people first started trying
to talk about abstractions.  Much to their surprise, they didn't
arrive at answers they agreed upon.  In fact, they rarely seemed
to arrive at answers at all.&lt;br/&gt;&lt;br/&gt;They were in effect arguing about artifacts induced by sampling at
too low a resolution.&lt;br/&gt;&lt;br/&gt;The proof of how useless some of their answers turned out to be is
how little effect they have.  No one after reading Aristotle's
&lt;i&gt;Metaphysics&lt;/i&gt; does anything differently as a result.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Surely I'm not claiming that ideas have to have practical applications
to be interesting?  No, they may not have to.  Hardy's boast that
number theory had no use whatsoever wouldn't disqualify it.  But
he turned out to be mistaken.  In fact, it's suspiciously hard to
find a field of math that truly has no practical use.  And Aristotle's
explanation of the ultimate goal of philosophy in Book A of the
&lt;i&gt;Metaphysics&lt;/i&gt; implies that philosophy should be useful too.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Theoretical Knowledge&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Aristotle's goal was to find the most general of general principles.
The examples he gives are convincing: an ordinary worker builds
things a certain way out of habit; a master craftsman can do more
because he grasps the underlying principles.  The trend is clear:
the more general the knowledge, the more admirable it is.  But then
he makes a mistakeâ€”possibly the most important mistake in the
history of philosophy.  He has noticed that theoretical knowledge
is often acquired for its own sake, out of curiosity, rather than
for any practical need.  So he proposes there are two kinds of
theoretical knowledge: some that's useful in practical matters and
some that isn't.  Since people interested in the latter are interested
in it for its own sake, it must be more noble.  So he sets as his
goal in the &lt;i&gt;Metaphysics&lt;/i&gt; the exploration of knowledge that has no
practical use.  Which means no alarms go off when he takes on grand
but vaguely understood questions and ends up getting lost in a sea
of words.&lt;br/&gt;&lt;br/&gt;His mistake was to confuse motive and result.  Certainly, people
who want a deep understanding of something are often driven by
curiosity rather than any practical need.  But that doesn't mean
what they end up learning is useless.  It's very valuable in practice
to have a deep understanding of what you're doing; even if you're
never called on to solve advanced problems, you can see shortcuts
in the solution of simple ones, and your knowledge won't break down
in edge cases, as it would if you were relying on formulas you
didn't understand.  Knowledge is power.  That's what makes theoretical
knowledge prestigious.  It's also what causes smart people to be
curious about certain things and not others; our DNA is not so
disinterested as we might think.&lt;br/&gt;&lt;br/&gt;So while ideas don't have to have immediate practical applications
to be interesting, the kinds of things we find interesting will
surprisingly often turn out to have practical applications.&lt;br/&gt;&lt;br/&gt;The reason Aristotle didn't get anywhere in the &lt;i&gt;Metaphysics&lt;/i&gt; was
partly that he set off with contradictory aims: to explore the most
abstract ideas, guided by the assumption that they were useless.
He was like an explorer looking for a territory to the north of
him, starting with the assumption that it was located to the south.&lt;br/&gt;&lt;br/&gt;And since his work became the map used by generations of future
explorers, he sent them off in the wrong direction as well. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Perhaps worst of all, he protected them from both the criticism of
outsiders and the promptings of their own inner compass by establishing
the principle that the most noble sort of theoretical knowledge had
to be useless.&lt;br/&gt;&lt;br/&gt;The &lt;i&gt;Metaphysics&lt;/i&gt; is mostly a failed experiment.  A few ideas from
it turned out to be worth keeping; the bulk of it has had no effect
at all.  The &lt;i&gt;Metaphysics&lt;/i&gt; is among the least read of all famous
books.  It's not hard to understand the way Newton's &lt;i&gt;Principia&lt;/i&gt;
is, but the way a garbled message is.&lt;br/&gt;&lt;br/&gt;Arguably it's an interesting failed experiment.  But unfortunately
that was not the conclusion Aristotle's successors derived from
works like the &lt;i&gt;Metaphysics&lt;/i&gt;. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Soon after, the western world
fell on intellectual hard times.  Instead of version 1s to be
superseded, the works of Plato and Aristotle became revered texts
to be mastered and discussed.  And so things remained for a shockingly
long time.  It was not till around 1600 (in Europe, where the center
of gravity had shifted by then) that one found people confident
enough to treat Aristotle's work as a catalog of mistakes.  And
even then they rarely said so outright.&lt;br/&gt;&lt;br/&gt;If it seems surprising that the gap was so long, consider how little
progress there was in math between Hellenistic times and the
Renaissance.&lt;br/&gt;&lt;br/&gt;In the intervening years an unfortunate idea took hold:  that it
was not only acceptable to produce works like the &lt;i&gt;Metaphysics&lt;/i&gt;,
but that it was a particularly prestigious line of work, done by a
class of people called philosophers.  No one thought to go back and
debug Aristotle's motivating argument.  And so instead of correcting
the problem Aristotle discovered by falling into itâ€”that you can
easily get lost if you talk too loosely about very abstract ideasâ€”they 
continued to fall into it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;The Singularity&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Curiously, however, the works they produced continued to attract
new readers.  Traditional philosophy occupies a kind of singularity
in this respect.  If you write in an unclear way about big ideas,
you produce something that seems tantalizingly attractive to
inexperienced but intellectually ambitious students.  Till one knows
better, it's hard to distinguish something that's hard to understand
because the writer was unclear in his own mind from something like
a mathematical proof that's hard to understand because the ideas
it represents are hard to understand.  To someone who hasn't learned
the difference, traditional philosophy seems extremely attractive:
as hard (and therefore impressive) as math, yet broader in scope.
That was what lured me in as a high school student.&lt;br/&gt;&lt;br/&gt;This singularity is even more singular in having its own defense
built in.  When things are hard to understand, people who suspect
they're nonsense generally keep quiet.  There's no way to prove a
text is meaningless.  The closest you can get is to show that the
official judges of some class of texts can't distinguish them from
placebos. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;And so instead of denouncing philosophy, most people who suspected
it was a waste of time just studied other things.  That alone is
fairly damning evidence, considering philosophy's claims.  It's
supposed to be about the ultimate truths. Surely all smart people
would be interested in it, if it delivered on that promise.&lt;br/&gt;&lt;br/&gt;Because philosophy's flaws turned away the sort of people who might
have corrected them, they tended to be self-perpetuating.  Bertrand
Russell wrote in a letter in 1912:
&lt;blockquote&gt;
  Hitherto the people attracted to philosophy have been mostly those
  who loved the big generalizations, which were all wrong, so that
  few people with exact minds have taken up the subject.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
His response was to launch Wittgenstein at it, with dramatic results.&lt;br/&gt;&lt;br/&gt;I think Wittgenstein deserves to be famous not for the discovery
that most previous philosophy was a waste of time, which judging
from the circumstantial evidence must have been made by every smart
person who studied a little philosophy and declined to pursue it
further, but for how he acted in response.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Instead of quietly
switching to another field, he made a fuss, from inside.  He was
Gorbachev.&lt;br/&gt;&lt;br/&gt;The field of philosophy is still shaken from the fright Wittgenstein
gave it. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Later in life he spent a lot of time talking about
how words worked.  Since that seems to be allowed, that's what a
lot of philosophers do now.  Meanwhile, sensing a vacuum in the
metaphysical speculation department, the people who used to do
literary criticism have been edging Kantward, under new names like
"literary theory," "critical theory," and when they're feeling
ambitious, plain "theory."  The writing is the familiar word salad:
&lt;blockquote&gt;
  Gender is not like some of the other grammatical modes which
  express precisely a mode of conception without any reality that
  corresponds to the conceptual mode, and consequently do not express
  precisely something in reality by which the intellect could be
  moved to conceive a thing the way it does, even where that motive
  is not something in the thing as such.
  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f14n"&gt;&lt;font color="#999999"&gt;14&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
The singularity I've described is not going away.  There's a market
for writing that sounds impressive and can't be disproven. There
will always be both supply and demand.  So if one group abandons
this territory, there will always be others ready to occupy it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;A Proposal&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;We may be able to do better.  Here's an intriguing possibility.
Perhaps we should do what Aristotle meant to do, instead of what
he did.  The goal he announces in the &lt;i&gt;Metaphysics&lt;/i&gt; seems one worth
pursuing: to discover the most general truths.  That sounds good.
But instead of trying to discover them because they're useless,
let's try to discover them because they're useful.&lt;br/&gt;&lt;br/&gt;I propose we try again, but that we use that heretofore despised
criterion, applicability, as a guide to keep us from wondering
off into a swamp of abstractions.  Instead of trying to answer the
question:
&lt;blockquote&gt;
  What are the most general truths?
&lt;/blockquote&gt;
let's try to answer the question
&lt;blockquote&gt;
  Of all the useful things we can say, which are the most general?
&lt;/blockquote&gt;
The test of utility I propose is whether we cause people who read
what we've written to do anything differently afterward.  Knowing
we have to give definite (if implicit) advice will keep us from
straying beyond the resolution of the words we're using.&lt;br/&gt;&lt;br/&gt;The goal is the same as Aristotle's; we just approach it from a
different direction.&lt;br/&gt;&lt;br/&gt;As an example of a useful, general idea, consider that of the
controlled experiment.  There's an idea that has turned out to be
widely applicable.  Some might say it's part of science, but it's
not part of any specific science; it's literally meta-physics (in
our sense of "meta").   The idea of evolution is another. It turns
out to have quite broad applicationsâ€”for example, in genetic
algorithms and even product design.  Frankfurt's distinction between
lying and bullshitting seems a promising recent example.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f15n"&gt;&lt;font color="#999999"&gt;15&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;These seem to me what philosophy should look like: quite general
observations that would cause someone who understood them to do
something differently.&lt;br/&gt;&lt;br/&gt;Such observations will necessarily be about things that are imprecisely
defined.  Once you start using words with precise meanings, you're
doing math.  So starting from utility won't entirely solve the
problem I described aboveâ€”it won't flush out the metaphysical
singularity.  But it should help.  It gives people with good
intentions a new roadmap into abstraction.  And they may thereby
produce things that make the writing of the people with bad intentions
look bad by comparison.&lt;br/&gt;&lt;br/&gt;One drawback of this approach is that it won't produce the sort of
writing that gets you tenure.  And not just because it's not currently
the fashion.  In order to get tenure in any field you must not
arrive at conclusions that members of tenure committees can disagree
with.  In practice there are two kinds of solutions to this problem.
In math and the sciences, you can prove what you're saying, or at
any rate adjust your conclusions so you're not claiming anything
false ("6 of 8 subjects had lower blood pressure after the treatment").
In the humanities you can either avoid drawing any definite conclusions
(e.g. conclude that an issue is a complex one), or draw conclusions
so narrow that no one cares enough to disagree with you.&lt;br/&gt;&lt;br/&gt;The kind of philosophy I'm advocating won't be able to take either
of these routes.  At best you'll be able to achieve the essayist's
standard of proof, not the mathematician's or the experimentalist's.
And yet you won't be able to meet the usefulness test without
implying definite and fairly broadly applicable conclusions.  Worse
still, the usefulness test will tend to produce results that annoy
people: there's no use in telling people things they already believe,
and people are often upset to be told things they don't.&lt;br/&gt;&lt;br/&gt;Here's the exciting thing, though.  Anyone can do this.  Getting
to general plus useful by starting with useful and cranking up the
generality may be unsuitable for junior professors trying to get
tenure, but it's better for everyone else, including professors who
already have it.  This side of the mountain is a nice gradual slope.
You can start by writing things that are useful but very specific,
and then gradually make them more general.  Joe's has good burritos.
What makes a good burrito?  What makes good food?  What makes
anything good?  You can take as long as you want.  You don't have
to get all the way to the top of the mountain.  You don't have to
tell anyone you're doing philosophy.&lt;br/&gt;&lt;br/&gt;If it seems like a daunting task to do philosophy, here's an
encouraging thought.  The field is a lot younger than it seems.
Though the first philosophers in the western tradition lived about
2500 years ago, it would be misleading to say the field is 2500
years old, because for most of that time the leading practitioners
weren't doing much more than writing commentaries on Plato or
Aristotle while watching over their shoulders for the next invading
army.  In the times when they weren't, philosophy was hopelessly
intermingled with religion.  It didn't shake itself free till a
couple hundred years ago, and even then was afflicted by the
structural problems I've described above.  If I say this, some will
say it's a ridiculously overbroad and uncharitable generalization,
and others will say it's old news, but here goes: judging from their
works, most philosophers up to the present have been wasting their
time.  So in a sense the field is still at the first step. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/philosophy.html#f16n"&gt;&lt;font color="#999999"&gt;16&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;That sounds a preposterous claim to make.  It won't seem so
preposterous in 10,000 years.  Civilization always seems old, because
it's always the oldest it's ever been.  The only way to say whether
something is really old or not is by looking at structural evidence,
and structurally philosophy is young; it's still reeling from the
unexpected breakdown of words.&lt;br/&gt;&lt;br/&gt;Philosophy is as young now as math was in 1500.  There is a lot
more to discover.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;!-- (Sorry there are so many notes.  This is a topic with many branches,
and I wanted to keep the body of the essay as short as possible.)
--&gt;
[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
In practice formal logic is not much use, because despite
some progress in the last 150 years we're still only able to formalize
a small percentage of statements.  We may never do that much better,
for the same reason 1980s-style "knowledge representation" could
never have worked; many statements may have no representation more
concise than a huge, analog brain state.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
It was harder for Darwin's contemporaries to grasp this than
we can easily imagine.  The story of creation in the Bible is not
just a Judeo-Christian concept; it's roughly what everyone must
have believed since before people were people.  The hard part of
grasping evolution was to realize that species weren't, as they
seem to be, unchanging, but had instead evolved from different,
simpler organisms over unimaginably long periods of time.&lt;br/&gt;&lt;br/&gt;Now we don't have to make that leap.  No one in an industrialized
country encounters the idea of evolution for the first time as an
adult.  Everyone's taught about it as a child, either as truth or
heresy.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Greek philosophers before Plato wrote in verse.  This must
have affected what they said.  If you try to write about the nature
of the world in verse, it inevitably turns into incantation.  Prose
lets you be more precise, and more tentative.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Philosophy is like math's
ne'er-do-well brother.  It was born when Plato and Aristotle looked
at the works of their predecessors and said in effect "why can't
you be more like your brother?"  Russell was still saying the same
thing 2300 years later.&lt;br/&gt;&lt;br/&gt;Math is the precise half of the most abstract ideas, and philosophy
the imprecise half.  It's probably inevitable that philosophy will
suffer by comparison, because there's no lower bound to its precision.
Bad math is merely boring, whereas bad philosophy is nonsense.  And
yet there are &lt;i&gt;some&lt;/i&gt; good ideas in the imprecise half.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Aristotle's best work was in logic and zoology, both of which
he can  be said to have invented.  But the most dramatic departure
from his predecessors was a new, much more analytical style of
thinking.  He was arguably the first scientist.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Brooks, Rodney, &lt;i&gt;Programming in Common Lisp&lt;/i&gt;, Wiley, 1985, p.
94.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Some would say we depend on Aristotle more than we realize,
because his ideas were one of the ingredients in our common culture.
Certainly a lot of the words we use have a connection with Aristotle,
but it seems a bit much to suggest that we wouldn't have the concept
of the essence of something or the distinction between matter and
form if Aristotle hadn't written about them.&lt;br/&gt;&lt;br/&gt;One way to see how much we really depend on Aristotle would be to
diff European culture with Chinese: what ideas did European culture
have in 1800 that Chinese culture didn't, in virtue of Aristotle's
contribution?&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
The meaning of the word "philosophy" has changed over time.
In ancient times it covered a broad range of topics, comparable in
scope to our "scholarship" (though without the methodological
implications).  Even as late as Newton's time it included what we
now call "science."  But core of the subject today is still what
seemed to Aristotle the core: the attempt to discover the most
general truths.&lt;br/&gt;&lt;br/&gt;Aristotle didn't call this "metaphysics."  That name got assigned
to it because the books we now call the &lt;i&gt;Metaphysics&lt;/i&gt; came after
(meta = after) the &lt;i&gt;Physics&lt;/i&gt; in the standard edition of Aristotle's
works compiled by Andronicus of Rhodes three centuries later.  What
we call "metaphysics" Aristotle called "first philosophy."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Some of Aristotle's immediate successors may have realized
this, but it's hard to say because most of their works are lost.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
Sokal, Alan, "Transgressing the Boundaries: Toward a Transformative
Hermeneutics of Quantum Gravity," &lt;i&gt;Social Text&lt;/i&gt; 46/47, pp. 217-252.&lt;br/&gt;&lt;br/&gt;Abstract-sounding nonsense seems to be most attractive when it's
aligned with some axe the audience already has to grind.  If this
is so we should find it's most popular with groups that are (or
feel) weak.  The powerful don't need its reassurance.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
Letter to Ottoline Morrell, December 1912.  Quoted in:&lt;br/&gt;&lt;br/&gt;Monk, Ray, &lt;i&gt;Ludwig Wittgenstein: The Duty of Genius&lt;/i&gt;, Penguin, 1991,
p. 75.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
A preliminary result, that all metaphysics between Aristotle
and 1783 had been a waste of time, is due to I. Kant.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
Wittgenstein asserted a sort of mastery to which the inhabitants
of early 20th century Cambridge seem to have been peculiarly
vulnerableâ€”perhaps partly because so many had been raised religious
and then stopped believing, so had a vacant space in their heads
for someone to tell them what to do (others chose Marx or Cardinal
Newman), and partly because a quiet, earnest place like Cambridge
in that era had no natural immunity to messianic figures, just as
European politics then had no natural immunity to dictators.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f14n"&gt;&lt;font color="#000000"&gt;14&lt;/font&gt;&lt;/a&gt;]
This is actually from the &lt;i&gt;Ordinatio&lt;/i&gt; of Duns Scotus (ca.
1300), with "number" replaced by "gender."  Plus ca change.&lt;br/&gt;&lt;br/&gt;Wolter, Allan (trans), &lt;i&gt;Duns Scotus: Philosophical Writings&lt;/i&gt;, Nelson,
1963, p. 92.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f15n"&gt;&lt;font color="#000000"&gt;15&lt;/font&gt;&lt;/a&gt;]
Frankfurt, Harry, &lt;i&gt;On Bullshit&lt;/i&gt;,  Princeton University Press,
2005.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f16n"&gt;&lt;font color="#000000"&gt;16&lt;/font&gt;&lt;/a&gt;]
Some introductions to philosophy now take the line that
philosophy is worth studying as a process rather than for any
particular truths you'll learn.  The philosophers whose works they
cover would be rolling in their graves at that.  They hoped they
were doing more than serving as examples of how to argue: they hoped
they were getting results.  Most were wrong, but it doesn't seem
an impossible hope.&lt;br/&gt;&lt;br/&gt;This argument seems to me like someone in 1500 looking at the lack
of results achieved by alchemy and saying its value was as a process.
No, they were going about it wrong.  It turns out it is possible
to transmute lead into gold (though not economically at current
energy prices), but the route to that knowledge was to
backtrack and try another approach.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Paul Buchheit, Jessica Livingston, 
Robert Morris, Mark Nitzberg, and Peter Norvig for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//philosophy.html</guid>
      <pubDate>Sat, 01 Sep 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Holding a Program in One's Head</title>
      <link>https://paulgraham.com//head.html</link>
      <description>&lt;font face="verdana" size="2"&gt;August 2007&lt;br/&gt;&lt;br/&gt;A good programmer working intensively on his own code can hold it
in his mind the way a mathematician holds a problem he's working
on.  Mathematicians don't answer questions by working them out on
paper the way schoolchildren are taught to.  They do more in their
heads: they try to understand a problem space well enough that they
can walk around it the way you can walk around the memory of the
house you grew up in.  At its best programming is th&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;August 2007&lt;br/&gt;&lt;br/&gt;A good programmer working intensively on his own code can hold it
in his mind the way a mathematician holds a problem he's working
on.  Mathematicians don't answer questions by working them out on
paper the way schoolchildren are taught to.  They do more in their
heads: they try to understand a problem space well enough that they
can walk around it the way you can walk around the memory of the
house you grew up in.  At its best programming is the same.  You
hold the whole program in your head, and you can manipulate it at
will.&lt;br/&gt;&lt;br/&gt;That's particularly valuable at the start of a project, because
initially the most important thing is to be able to change what
you're doing.  Not just to solve the problem in a different way,
but to change the problem you're solving.&lt;br/&gt;&lt;br/&gt;Your code is your understanding of the problem you're exploring.
So it's only when you have your code in your head that you really
understand the problem.&lt;br/&gt;&lt;br/&gt;It's not easy to get a program into your head.  If you leave a
project for a few months, it can take days to really understand it
again when you return to it.  Even when you're actively working on
a program it can take half an hour to load into your head when you
start work each day.  And that's in the best case.  Ordinary
programmers working in typical office conditions never enter this
mode.  Or to put it more dramatically, ordinary programmers working
in typical office conditions never really understand the problems
they're solving.&lt;br/&gt;&lt;br/&gt;Even the best programmers don't always have the whole program they're
working on loaded into their heads.   But there are things you can
do to help:&lt;br/&gt;&lt;br/&gt;&lt;ol&gt;
&lt;li&gt; &lt;b&gt;Avoid distractions.&lt;/b&gt;  Distractions are bad for many types of work,
   but especially bad for programming, because programmers tend to
   operate at the limit of the detail they can handle.&lt;br/&gt;&lt;br/&gt;The danger of a distraction depends not on how long it is, but
   on how much it scrambles your brain.  A programmer can leave the
   office and go and get a sandwich without losing the code in his
   head.  But the wrong kind of interruption can wipe your brain
   in 30 seconds.&lt;br/&gt;&lt;br/&gt;Oddly enough, scheduled distractions may be worse than unscheduled
   ones.  If you know you have a meeting in an hour, you don't even
   start working on something hard.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Work in long stretches.&lt;/b&gt;  Since there's a fixed cost each time
   you start working on a program, it's more efficient to work in
   a few long sessions than many short ones.  There will of course
   come a point where you get stupid because you're tired.  This
   varies from person to person.  I've heard of people hacking for
   36 hours straight, but the most I've ever been able to manage
   is about 18, and I work best in chunks of no more than 12.&lt;br/&gt;&lt;br/&gt;The optimum is not the limit you can physically endure.  There's
   an advantage as well as a cost of breaking up a project.  Sometimes
   when you return to a problem after a rest, you find your unconscious
   mind has left an answer waiting for you.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Use succinct languages.&lt;/b&gt;  More 
   &lt;a href="https://paulgraham.com/power.html"&gt;powerful&lt;/a&gt; programming languages
   make programs shorter. And programmers seem to think of programs
   at least partially in the language they're using to write them.
   The more succinct the language, the shorter the program, and the
   easier it is to load and keep in your head.&lt;br/&gt;&lt;br/&gt;You can magnify the effect of a powerful language by using a
   style called bottom-up programming, where you write programs in
   multiple layers, the lower ones acting as programming languages
   for those above.  If you do this right, you only have to keep
   the topmost layer in your head.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Keep rewriting your program.&lt;/b&gt;  Rewriting a program often yields
   a cleaner design.  But it would have advantages even if it didn't:
   you have to understand a program completely to rewrite it, so
   there is no better way to get one loaded into your head.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Write rereadable code.&lt;/b&gt;  All programmers know it's good to write
   readable code.  But you yourself are the most important reader.
   Especially in the beginning; a prototype is a conversation with
   yourself.  And when writing for yourself you have different
   priorities.  If you're writing for other people, you may not
   want to make code too dense.  Some parts of a program may be
   easiest to read if you spread things out, like an introductory 
   textbook.  Whereas if you're writing code to make it easy to reload 
   into your head, it may be best to go for brevity.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Work in small groups.&lt;/b&gt;  When you manipulate a program in your
   head, your vision tends to stop at the edge of the code you own.
   Other parts you don't understand as well, and more importantly,
   can't take liberties with.  So the smaller the number of
   programmers, the more completely a project can mutate.  If there's
   just one programmer, as there often is at first, you can do
   all-encompassing redesigns.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Don't have multiple people editing the same piece of code.&lt;/b&gt;  You
   never understand other people's code as well as your own.  No
   matter how thoroughly you've read it, you've only read it, not
   written it.  So if a piece of code is written by multiple authors,
   none of them understand it as well as a single author would.&lt;br/&gt;&lt;br/&gt;And of course you can't safely redesign something other people
   are working on.  It's not just that you'd have to ask permission.
   You don't even let yourself think of such things.  Redesigning
   code with several authors is like changing laws; redesigning
   code you alone control is like seeing the other interpretation
   of an ambiguous image.&lt;br/&gt;&lt;br/&gt;If you want to put several people to work on a project, divide
   it into components and give each to one person.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; &lt;b&gt;Start small.&lt;/b&gt;  A program gets easier to hold in your head as you
   become familiar with it.  You can start to treat parts as black
   boxes once you feel confident you've fully explored them.  But
   when you first start working on a project, you're forced to see
   everything.  If you start with too big a problem, you may never
   quite be able to encompass it.  So if you need to write a big,
   complex program, the best way to begin may not be to write a
   spec for it, but to write a prototype that solves a subset of
   the problem.  Whatever the advantages of planning, they're often
   outweighed by the advantages of being able to keep a program in
   your head.
&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
It's striking how often programmers manage to hit all eight points
by accident.  Someone has an idea for a new project, but because
it's not officially sanctioned, he has to do it in off hoursâ€”which
turn out to be more productive because there are no distractions.
Driven by his enthusiasm for the new project he works on it for
many hours at a stretch.  Because it's initially just an
experiment, instead of a "production" language he uses a mere
"scripting" languageâ€”which is in fact far more powerful.  He
completely rewrites the program several times; that wouldn't be
justifiable for an official project, but this is a labor of love
and he wants it to be perfect.  And since no one is going to see
it except him, he omits any comments except the note-to-self variety.
He works in a small group perforce, because he either hasn't told
anyone else about the idea yet, or it seems so unpromising that no
one else is allowed to work on it.  Even if there is a group, they
couldn't have multiple people editing the same code, because it
changes too fast for that to be possible.  And the project starts
small because the idea &lt;i&gt;is&lt;/i&gt; small at first; he just has some cool
hack he wants to try out.&lt;br/&gt;&lt;br/&gt;Even more striking are the number of officially sanctioned projects
that manage to do &lt;i&gt;all eight things wrong&lt;/i&gt;.  In fact, if you look at
the way software gets written in most organizations, it's almost
as if they were deliberately trying to do things wrong. In a sense,
they are.  One of the defining qualities of organizations since
there have been such a thing is to treat individuals as interchangeable
parts.  This works well for more parallelizable tasks, like fighting
wars.  For most of history a well-drilled army of professional
soldiers could be counted on to beat an army of individual warriors,
no matter how valorous.  But having ideas is not very parallelizable.
And that's what programs are: ideas.&lt;br/&gt;&lt;br/&gt;It's not merely true that organizations dislike the idea of depending
on individual genius, it's a tautology.  It's part of the definition
of an organization not to.  Of our current concept of an organization,
at least.&lt;br/&gt;&lt;br/&gt;Maybe we could define a new kind of organization that combined the
efforts of individuals without requiring them to be interchangeable.
Arguably a market is such a form of organization, though it may be
more accurate to describe a market as a degenerate caseâ€”as what
you get by default when organization isn't possible.&lt;br/&gt;&lt;br/&gt;Probably the best we'll do is some kind of hack, like making the
programming parts of an organization work differently from the rest.
Perhaps the optimal solution is for big companies not even to try
to develop ideas in house, but simply to 
&lt;a href="https://paulgraham.com/hiring.html"&gt;buy&lt;/a&gt; them.  But regardless
of what the solution turns out to be, the first step is to realize
there's a problem.  There is a contradiction in the very phrase
"software company."   The two words are pulling in opposite directions.
Any good programmer in a large organization is going to be at odds
with it, because organizations are designed to prevent what
programmers strive for.&lt;br/&gt;&lt;br/&gt;Good programmers manage to get a lot done anyway.  
But often it
requires practically an act of rebellion against the organizations
that employ them.  Perhaps it will help if more people understand that the way
programmers behave is driven by the demands of the work they do.
It's not because they're irresponsible that they work in long binges
during which they blow off all other obligations, plunge straight into
programming instead of writing specs first, and rewrite code that
already works.  It's not because they're unfriendly that they prefer
to work alone, or growl at people who pop their head in the door
to say hello.  This apparently random collection of annoying habits
has a single explanation: the power of holding a program in one's
head.&lt;br/&gt;&lt;br/&gt;Whether or not understanding this can help large organizations, it
can certainly help their competitors.  The weakest point in big
companies is that they don't let individual programmers do great
work.  So if you're a little startup, this is the place to attack
them.  Take on the kind of problems that have to be solved in one
big brain.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, David Greenspan, Aaron Iba, Jessica Livingston,
Robert Morris, Peter Norvig, Lisa Randall, Emmett Shear, Sergei Tsarev,
and Stephen Wolfram for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//head.html</guid>
      <pubDate>Wed, 01 Aug 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How Not to Die</title>
      <link>https://paulgraham.com//die.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This is a talk I gave at the last 
Y Combinator dinner of the summ&lt;/i&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This is a talk I gave at the last 
Y Combinator dinner of the summer. 
Usually we don't have a speaker at the last dinner; it's more of
a party.  But it seemed worth spoiling the atmosphere if I could
save some of the startups from
preventable deaths.  So at the last minute I cooked up this rather
grim talk.  I didn't mean this as an essay; I wrote it down
because I only had two hours before dinner and think fastest while
writing.)
&lt;/i&gt;&lt;br&gt;&lt;br/&gt;A couple days ago I told a reporter that we expected about a third
of the companies we funded to succeed.  Actually I was being
conservative.  I'm hoping it might be as much as a half.  Wouldn't
it be amazing if we could achieve a 50% success rate?&lt;br/&gt;&lt;br/&gt;Another way of saying that is that half of you are going to die.  Phrased
that way, it doesn't sound good at all.  In fact, it's kind of weird
when you think about it, because our definition of success is that
the founders get rich.  If half the startups we fund succeed, then
half of you are going to get rich and the other half are going to
get nothing.&lt;br/&gt;&lt;br/&gt;If you can just avoid dying, you get rich.  That sounds like a joke,
but it's actually a pretty good description of what happens in a
typical startup.  It certainly describes what happened in Viaweb.
We avoided dying till we got rich.&lt;br/&gt;&lt;br/&gt;It was really close, too.  When we were visiting Yahoo to talk about
being acquired, we had to interrupt everything and borrow one of
their conference rooms to talk down an investor who was about to
back out of a new funding round we needed to stay alive.   So even
in the middle of getting rich we were fighting off the grim reaper.&lt;br/&gt;&lt;br/&gt;You may have heard that quote about luck consisting of opportunity
meeting preparation.  You've now done the preparation.  The work
you've done so far has, in effect, put you in a position to get
lucky: you can now get rich by not letting your company die.  That's
more than most people have.  So let's talk about how not to die.&lt;br/&gt;&lt;br/&gt;We've done this five times now, and we've seen a bunch of startups
die.  About 10 of them so far.  We don't know exactly what happens
when they die, because they generally don't die loudly and heroically.
Mostly they crawl off somewhere and die.&lt;br/&gt;&lt;br/&gt;For us the main indication of impending doom is when we don't hear
from you.  When we haven't heard from, or about, a startup for a
couple months, that's a bad sign.  If we send them an email asking
what's up, and they don't reply, that's a really bad sign.  So far
that is a 100% accurate predictor of death.&lt;br/&gt;&lt;br/&gt;Whereas if a startup regularly does new deals and releases and
either sends us mail or shows up at YC events, they're probably
going to live.&lt;br/&gt;&lt;br/&gt;I realize this will sound naive, but maybe the linkage works in
both directions.  Maybe if you can arrange that we keep hearing
from you, you won't die.&lt;br/&gt;&lt;br/&gt;That may not be so naive as it sounds.  You've probably noticed
that having dinners every Tuesday with us and the other founders
causes you to get more done than you would otherwise, because every
dinner is a mini Demo Day.  Every dinner is a kind of a deadline.
So the mere constraint of staying in regular contact with us will
push you to make things happen, because otherwise you'll be embarrassed
to tell us that you haven't done anything new since the last time
we talked.&lt;br/&gt;&lt;br/&gt;If this works, it would be an amazing hack.  It would be pretty
cool if merely by staying in regular contact with us you could get
rich.  It sounds crazy, but there's a good chance that would work.&lt;br/&gt;&lt;br/&gt;A variant is to stay in touch with other YC-funded startups.  There
is now a whole neighborhood of them in San Francisco.  If you move
there, the peer pressure that made you work harder all summer will
continue to operate.&lt;br/&gt;&lt;br/&gt;When startups die, the official cause of death is always either
running out of money or a critical founder bailing.  Often the two
occur simultaneously.  But I think the underlying cause is usually
that they've become demoralized.  You rarely hear of a startup
that's working around the clock doing deals and pumping out new
features, and dies because they can't pay their bills and their ISP
unplugs their server.&lt;br/&gt;&lt;br/&gt;Startups rarely die in mid keystroke.  So keep typing!&lt;br/&gt;&lt;br/&gt;If so many startups get demoralized and fail when merely by hanging
on they could get rich, you have to assume that running a startup
can be demoralizing.  That is certainly true.  I've been there, and
that's why I've never done another startup.  The low points in a
startup are just unbelievably low.  I bet even Google had moments
where things seemed hopeless.&lt;br/&gt;&lt;br/&gt;Knowing that should help.  If you know it's going to feel terrible
sometimes, then when it feels terrible you won't think "ouch, this
feels terrible, I give up."  It feels that way for everyone.  And
if you just hang on, things will probably get better.  The metaphor
people use to describe the way a startup feels is at least a roller
coaster and not drowning.  You don't just sink and sink; there are
ups after the downs.&lt;br/&gt;&lt;br/&gt;Another feeling that seems alarming but is in fact normal in a
startup is the feeling that what you're doing isn't working.  The
reason you can expect to feel this is that what you do probably
won't work.  Startups almost never get it right the first time.
Much more commonly you launch something, and no one cares.  Don't
assume when this happens that you've failed.  That's normal for
startups.  But don't sit around doing nothing.  Iterate.&lt;br/&gt;&lt;br/&gt;I like Paul Buchheit's suggestion of trying to make something that
at least someone really loves.  As long as you've made something
that a few users are ecstatic about, you're on the right track.  It
will be good for your morale to have even a handful of users who
really love you, and startups run on morale.  But also it
will tell you what to focus on.  What is it about you that they
love?  Can you do more of that?  Where can you find more people who
love that sort of thing?  As long as you have some core of users
who love you, all you have to do is expand it.  It may take a while,
but as long as you keep plugging away, you'll win in the end.  Both
Blogger and Delicious did that.  Both took years to succeed.  But
both began with a core of fanatically devoted users, and all Evan
and Joshua had to do was grow that core incrementally.  
&lt;a href="http://wufoo.com"&gt;Wufoo&lt;/a&gt; is
on the same trajectory now.&lt;br/&gt;&lt;br/&gt;So when you release something and it seems like no one cares, look
more closely.  Are there zero users who really love you, or is there
at least some little group that does?  It's quite possible there
will be zero.  In that case, tweak your product and try again.
Every one of you is working on a space that contains at least one
winning permutation somewhere in it.  If you just keep trying,
you'll find it.&lt;br/&gt;&lt;br/&gt;Let me mention some things not to do.  The number one thing not to
do is other things.  If you find yourself saying a sentence that
ends with "but we're going to keep working on the startup," you are
in big trouble.  Bob's going to grad school, but we're going to
keep working on the startup.  We're moving back to Minnesota, but
we're going to keep working on the startup.  We're taking on some
consulting projects, but we're going to keep working on the startup.
You may as well just translate these to "we're giving up on the
startup, but we're not willing to admit that to ourselves," because
that's what it means most of the time.  A startup is so hard that
working on it can't be preceded by "but."&lt;br/&gt;&lt;br/&gt;In particular, don't go to graduate school, and don't start other
projects.  Distraction is fatal to startups.  Going to (or back to)
school is a huge predictor of death because in addition to the
distraction it gives you something to say you're doing.  If you're
only doing a startup, then if the startup fails, you fail.  If
you're in grad school and your startup fails, you can say later "Oh
yeah, we had this startup on the side when I was in grad school,
but it didn't go anywhere."&lt;br/&gt;&lt;br/&gt;You can't use euphemisms like "didn't go anywhere" for something
that's your only occupation.  People won't let you.&lt;br/&gt;&lt;br/&gt;One of the most interesting things we've discovered from working
on Y Combinator is that founders are more motivated by the fear of
looking bad than by the hope of getting millions of dollars.   So
if you want to get millions of dollars, put yourself in a position
where failure will be public and humiliating.&lt;br/&gt;&lt;br/&gt;When we first met the founders of 
&lt;a href="http://octopart.com"&gt;Octopart&lt;/a&gt;, they seemed very smart,
but not a great bet to succeed, because they didn't seem especially
committed.  One of the two founders was still in grad school.  It
was the usual story: he'd drop out if it looked like the startup
was taking off.  Since then he has not only dropped out of grad
school, but appeared full length in 
&lt;a href="http://docs.octopart.com/newsweek_octopart_small.jpg"&gt;Newsweek&lt;/a&gt; 
with the word "Billionaire"
printed across his chest.  He just cannot fail now.  Everyone he
knows has seen that picture.  Girls who dissed him in high school
have seen it.  His mom probably has it on the fridge.  It would be
unthinkably humiliating to fail now.  At this point he is committed
to fight to the death.&lt;br/&gt;&lt;br/&gt;I wish every startup we funded could appear in a Newsweek article
describing them as the next generation of billionaires, because
then none of them would be able to give up.  The success rate would
be 90%.  I'm not kidding.&lt;br/&gt;&lt;br/&gt;When we first knew the Octoparts they were lighthearted, cheery
guys.  Now when we talk to them they seem grimly determined.  The
electronic parts distributors are trying to squash them to keep
their monopoly pricing.  (If it strikes you as odd that people still
order electronic parts out of thick paper catalogs in 2007, there's
a reason for that.  The distributors want to prevent the transparency
that comes from having prices online.)  I feel kind of bad that
we've transformed these guys from lighthearted to grimly determined.
But that comes with the territory.  If a startup succeeds, you get
millions of dollars, and you don't get that kind of money just by
asking for it.  You have to assume it takes some amount of pain.&lt;br/&gt;&lt;br/&gt;And however tough things get for the Octoparts, I predict they'll
succeed.  They may have to morph themselves into something totally
different, but they won't just crawl off and die.  They're smart;
they're working in a promising field; and they just cannot give up.&lt;br/&gt;&lt;br/&gt;All of you guys already have the first two.  You're all smart and
working on promising ideas.  Whether you end up among the living
or the dead comes down to the third ingredient, not giving up.&lt;br/&gt;&lt;br/&gt;So I'll tell you now: bad shit is coming.  It always is in a startup.
The odds of getting from launch to liquidity without some kind of
disaster happening are one in a thousand.  So don't get demoralized.
When the disaster strikes, just say to yourself, ok, this was what
Paul was talking about.  What did he say to do?  Oh, yeah.  Don't
give up.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//die.html</guid>
      <pubDate>Wed, 01 Aug 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Equity Equation</title>
      <link>https://paulgraham.com//equity.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2007&lt;br/&gt;&lt;br/&gt;An investor wants to give you money for a certain percentage of
your startup.  Should you take it?  You're about to hire your first
employee.  How much stock should you give him?&lt;br/&gt;&lt;br/&gt;These are some of the hardest questions founders face.  And yet
both have the same answer:&lt;br/&gt;&lt;br/&gt;1/(1 - n)&lt;br/&gt;&lt;br/&gt;Whenever you're trading stock in your company for anything, whether
it's money or an employee or a deal with another company, the test
for wheth&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2007&lt;br/&gt;&lt;br/&gt;An investor wants to give you money for a certain percentage of
your startup.  Should you take it?  You're about to hire your first
employee.  How much stock should you give him?&lt;br/&gt;&lt;br/&gt;These are some of the hardest questions founders face.  And yet
both have the same answer:&lt;br/&gt;&lt;br/&gt;1/(1 - n)&lt;br/&gt;&lt;br/&gt;Whenever you're trading stock in your company for anything, whether
it's money or an employee or a deal with another company, the test
for whether to do it is the same.  You should give up n% of your
company if what you trade it for improves your average outcome
enough that the (100 - n)% you have left is worth more than the
whole company was before.&lt;br/&gt;&lt;br/&gt;For example, if an investor wants to buy half your company, how
much does that investment have to improve your average outcome for
you to break even?  Obviously it has to double: if you trade half
your company for something that more than doubles the company's
average outcome, you're net ahead.  You have half as big a share
of something worth more than twice as much.&lt;br/&gt;&lt;br/&gt;In the general case, if n is the fraction of the company you're
giving up, the deal is a good one if it makes the company worth
more than 1/(1 - n).&lt;br/&gt;&lt;br/&gt;For example, suppose Y Combinator offers to fund you in return for
7% of your company.  In this case, n is .07 and 1/(1 - n) is 1.075.
So you should take the deal if you believe we can improve your
average outcome by more than 7.5%.  If we improve your outcome by
10%, you're net ahead, because the remaining .93 you hold is worth
.93 x 1.1 = 1.023.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/equity.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One of the things the equity equation shows us is that, financially
at least, taking money from a top VC firm can be a really good deal.
Greg Mcadoo from Sequoia recently said at a YC dinner that when
Sequoia invests alone they like to take about 30% of a company.
1/.7 = 1.43, meaning that deal is worth taking if they can improve
your outcome by more than 43%.  For the average startup, that would
be an extraordinary bargain.  It would improve the average startup's
prospects by more than 43% just to be able to &lt;i&gt;say&lt;/i&gt; they were funded
by Sequoia, even if they never actually got the money.&lt;br/&gt;&lt;br/&gt;The reason Sequoia is such a good deal is that the percentage of
the company they take is artificially low.  They don't even try to
get market price for their investment; they limit their holdings
to leave the founders enough stock to feel the company is still
theirs.&lt;br/&gt;&lt;br/&gt;The catch is that Sequoia gets about 6000 business plans a year and
funds about 20 of them, so the odds of getting this great deal are
1 in 300. The companies that make it through are not average startups.&lt;br/&gt;&lt;br/&gt;Of course, there are other factors to consider in a VC deal.  It's
never just a straight trade of money for stock.  But if it were,
taking money from a top firm would generally be a bargain.&lt;br/&gt;&lt;br/&gt;You can use the same formula when giving stock to employees, but
it works in the other direction.  If i is the average outcome for
the company with the addition of some new person, then they're worth
n such that i = 1/(1 - n).  Which means n = (i - 1)/i.&lt;br/&gt;&lt;br/&gt;For example, suppose you're just two founders and you want to hire
an additional hacker who's so good you feel he'll increase the
average outcome of the whole company by 20%.  n = (1.2 - 1)/1.2 =
.167.  So you'll break even if you trade 16.7% of the company
for him.&lt;br/&gt;&lt;br/&gt;That doesn't mean 16.7% is the right amount of stock to give him.
Stock is not the only cost of hiring someone: there's usually salary
and overhead as well.  And if the company merely breaks even on the
deal, there's no reason to do it.&lt;br/&gt;&lt;br/&gt;I think to translate salary and overhead into stock you should
multiply the annual rate by about 1.5.  Most startups grow fast or
die; if you die you don't have to pay the guy, and if you grow fast
you'll be paying next year's salary out of next year's valuation,
which should be 3x this year's.  If your valuation grows 3x a year,
the total cost in stock of a new hire's salary and overhead is 1.5
years' cost at the present valuation.  &lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/equity.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;How much of an additional margin should the company need as the
"activation energy" for the deal?  Since this is in effect the
company's profit on a hire, the market will determine that: if
you're a hot opportunity, you can charge more.&lt;br/&gt;&lt;br/&gt;Let's run through an example.  Suppose the company wants to make a
"profit" of 50% on the new hire mentioned above.  So subtract a
third from 16.7% and we have 11.1% as his "retail" price.  Suppose
further that he's going to cost $60k a year in salary and overhead,
x 1.5 = $90k total.  If the company's valuation is $2 million, $90k
is 4.5%.  11.1% - 4.5% = an offer of 6.6%.&lt;br/&gt;&lt;br/&gt;Incidentally, notice how important it is for early employees to
take little salary.  It comes right out of stock that could otherwise
be given to them.&lt;br/&gt;&lt;br/&gt;Obviously there is a great deal of play in these numbers.  I'm not
claiming that stock grants can now be reduced to a formula.  Ultimately
you always have to guess.  But at least know what you're guessing.
If you choose a number based on your gut feel, or a table of typical
grant sizes supplied by a VC firm, understand what those are estimates
of.&lt;br/&gt;&lt;br/&gt;And more generally, when you make any decision involving equity,
run it through 1/(1 - n) to see if it makes sense.  You should
always feel richer after trading equity.  If the trade didn't
increase the value of your remaining shares enough to put you net
ahead, you wouldn't have (or shouldn't have) done it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;] This is why we
can't believe anyone would think Y Combinator was a bad deal.  Does
anyone really think we're so useless that in three months we can't
improve a startup's prospects by 7.5%?
&lt;!--
Usually people who say we're a bad deal, like Seth Levine in &lt;a
href="http://www.usatoday.com/money/industries/technology/2007-07-17-ycombinator_N.htm"&gt;this
article&lt;/a&gt;, simply don't understand what we do.   If all we did
was write checks, YC would be a bad deal.  But in fact the money
is the least of what we do.  No VC who has seen Demo Day first hand
has ever said YC took too much equity.
--&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;] The obvious choice
for your present valuation is the post-money valuation of your last
funding round.  This probably undervalues the company, though,
because (a) unless your last round just happened, the company is
presumably worth more, and (b) the valuation of an early funding
round usually reflects some other contribution by the investors.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Paul Buchheit, 
Hutch Fishman, David Hornik, Paul Kedrosky, Jessica Livingston, Gary Sabot, and 
Joshua Schachter for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//equity.html</guid>
      <pubDate>Sun, 01 Jul 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Stuff</title>
      <link>https://paulgraham.com//stuff.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2007&lt;br/&gt;&lt;br/&gt;I have too much stuff.  Most people in America do.  In fact, the
poorer people are, the more stuff they seem to have.  Hardly anyone
is so poor that they can't afford a front yard full of old cars.&lt;br/&gt;&lt;br/&gt;It wasn't always this way.  Stuff used to be rare and valuable.
You can still see evidence of that if you look for it.  For example,
in my house in Cambridge, which was built in 1876, the bedrooms
don't have closets.  In those days people's stu&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2007&lt;br/&gt;&lt;br/&gt;I have too much stuff.  Most people in America do.  In fact, the
poorer people are, the more stuff they seem to have.  Hardly anyone
is so poor that they can't afford a front yard full of old cars.&lt;br/&gt;&lt;br/&gt;It wasn't always this way.  Stuff used to be rare and valuable.
You can still see evidence of that if you look for it.  For example,
in my house in Cambridge, which was built in 1876, the bedrooms
don't have closets.  In those days people's stuff fit in a chest
of drawers.  Even as recently as a few decades ago there was a lot
less stuff.  When I look back at photos from the 1970s, I'm surprised
how empty houses look.  As a kid I had what I thought was a huge
fleet of toy cars, but they'd be dwarfed by the number of toys my
nephews have.  All together my Matchboxes and Corgis took up about
a third of the surface of my bed.  In my nephews' rooms the bed is
the only clear space.&lt;br/&gt;&lt;br/&gt;Stuff has gotten a lot cheaper, but our attitudes toward it haven't
changed correspondingly.  We overvalue stuff.&lt;br/&gt;&lt;br/&gt;That was a big problem
for me when I had no money.  I felt poor, and stuff seemed valuable,
so almost instinctively I accumulated it.  Friends would leave
something behind when they moved, or I'd see something as I was
walking down the street on trash night (beware of anything you find
yourself describing as "perfectly good"), or I'd find something in
almost new condition for a tenth its retail price at a garage sale.
And pow, more stuff.&lt;br/&gt;&lt;br/&gt;In fact these free or nearly free things weren't bargains, because
they were worth even less than they cost.  Most of the stuff I
accumulated was worthless, because I didn't need it.&lt;br/&gt;&lt;br/&gt;What I didn't understand was that the value of some new acquisition
wasn't the difference between its retail price and what I paid for
it.  It was the value I derived from it.  Stuff is an extremely
illiquid asset.  Unless you have some plan for selling that valuable
thing you got so cheaply, what difference does it make what it's
"worth?"  The only way you're ever going to extract any value from
it is to use it.  And if you don't have any immediate use for it,
you probably never will.&lt;br/&gt;&lt;br/&gt;Companies that sell stuff have spent huge sums training us to think
stuff is still valuable.  But it would be closer to the truth to
treat stuff as worthless.&lt;br/&gt;&lt;br/&gt;In fact, worse than worthless, because once you've accumulated a
certain amount of stuff, it starts to own you rather than the other
way around.  I know of one couple who couldn't retire to the town
they preferred because they couldn't afford a place there big enough
for all their stuff.  Their house isn't theirs; it's their stuff's.&lt;br/&gt;&lt;br/&gt;And unless you're extremely organized, a house full of stuff can
be very depressing. A cluttered room saps one's spirits.  One
reason, obviously, is that there's less room for people in a room
full of stuff.  But there's more going on than that.  I think humans
constantly scan their environment to build a mental model of what's
around them.  And the harder a scene is to parse, the less energy
you have left for conscious thoughts.  A cluttered room is literally
exhausting.&lt;br/&gt;&lt;br/&gt;(This could explain why clutter doesn't seem to bother kids as much
as adults. Kids are less perceptive.  They build a coarser model
of their surroundings, and this consumes less energy.)&lt;br/&gt;&lt;br/&gt;I first realized the worthlessness of stuff when I lived in Italy
for a year.  All I took with me was one large backpack of stuff.
The rest of my stuff I left in my landlady's attic back in the US.
And you know what?  All I missed were some of the books.  By the
end of the year I couldn't even remember what else I had stored in
that attic.&lt;br/&gt;&lt;br/&gt;And yet when I got back I didn't discard so much as a box of it.
Throw away a perfectly good rotary telephone?  I might need that
one day.&lt;br/&gt;&lt;br/&gt;The really painful thing to recall is not just that I accumulated
all this useless stuff, but that I often spent money I desperately
needed on stuff that I didn't.&lt;br/&gt;&lt;br/&gt;Why would I do that?  Because the people whose job is to sell you
stuff are really, really good at it.  The average 25 year old is
no match for companies that have spent years figuring out how to
get you to spend money on stuff.  They make the experience of buying
stuff so pleasant that "shopping" becomes a leisure activity.&lt;br/&gt;&lt;br/&gt;How do you protect yourself from these people?  It can't be easy.
I'm a fairly skeptical person, and their tricks worked on me well
into my thirties.  But one thing that might work is to ask yourself,
before buying something, "is this going to make my life noticeably
better?"&lt;br/&gt;&lt;br/&gt;A friend of mine cured herself of a clothes buying habit by asking
herself before she bought anything "Am I going to wear this all the
time?"  If she couldn't convince herself that something she was
thinking of buying would become one of those few things she wore
all the time, she wouldn't buy it.  I think that would work for any
kind of purchase.  Before you buy anything, ask yourself: will this
be something I use constantly?  Or is it just something nice?  Or
worse still, a mere bargain?&lt;br/&gt;&lt;br/&gt;The worst stuff in this respect may be stuff you don't use much
because it's too good.  Nothing owns you like fragile stuff.  For
example, the "good china" so many households have, and whose defining
quality is not so much that it's fun to use, but that one must be
especially careful not to break it.&lt;br/&gt;&lt;br/&gt;Another way to resist acquiring stuff is to think of the overall
cost of owning it.  The purchase price is just the beginning.  You're
going to have to &lt;i&gt;think&lt;/i&gt; about that thing for yearsâ€”perhaps for
the rest of your life.  Every thing you own takes energy away from
you.  Some give more than they take.  Those are the only things
worth having.&lt;br/&gt;&lt;br/&gt;I've now stopped accumulating stuff.  Except booksâ€”but books are
different.  Books are more like a fluid than individual objects.
It's not especially inconvenient to own several thousand books,
whereas if you owned several thousand random possessions you'd be
a local celebrity.  But except for books, I now actively avoid
stuff.  If I want to spend money on some kind of treat, I'll take
services over 
goods any day.&lt;br/&gt;&lt;br/&gt;I'm not claiming this is because I've achieved some kind of zenlike
detachment from material things.  I'm talking about something more
mundane.  A historical change has taken place, and I've now realized
it.  Stuff used to be valuable, and now it's not.&lt;br/&gt;&lt;br/&gt;In industrialized countries the same thing happened with food in
the middle of the twentieth century.  As food got cheaper (or we
got richer; they're indistinguishable), eating too much started to
be a bigger danger than eating too little.   We've now reached that
point with stuff.  For most people, rich or poor, stuff has become
a burden.&lt;br/&gt;&lt;br/&gt;The good news is, if you're carrying a burden without knowing it,
your life could be better than you realize.  Imagine walking around
for years with five pound ankle weights, then suddenly having them
removed.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;!-- &lt;font color=#666666&gt;Like this?  Leave a tip.  All proceeds to EFF.&lt;/font&gt;&lt;br&gt;
&lt;img src="http://ycombinator.com/s.gif" height=6 width=1&gt;&lt;br&gt;
&lt;script language="javascript"
src="http://tipjoy.com/custombutton/?targetUser=pg&amp;targetUrl=http://paulgraham.com/stuff.html"
scrolling="no" frameborder="0" marginwidth="0" marginheight="0"
hspace="0" vspace="0" allowtransparency="true" &gt;&lt;/script&gt;
--&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//stuff.html</guid>
      <pubDate>Sun, 01 Jul 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>An Alternative Theory of Unions</title>
      <link>https://paulgraham.com//unions.html</link>
      <description>&lt;font face="verdana" size="2"&gt;May 2007&lt;br/&gt;&lt;br/&gt;People who worry about the increasing gap between rich and poor
generally look back on the mid twentieth century as a golden age.
In those days we had a large number of high-paying union manufacturing
jobs that boosted the median income.  I wouldn't quite call the
high-paying union job a myth, but I think people who dwell on it
are reading too much into it.&lt;br/&gt;&lt;br/&gt;Oddly enough, it was working with startups that made me realize
where the high-payi&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;May 2007&lt;br/&gt;&lt;br/&gt;People who worry about the increasing gap between rich and poor
generally look back on the mid twentieth century as a golden age.
In those days we had a large number of high-paying union manufacturing
jobs that boosted the median income.  I wouldn't quite call the
high-paying union job a myth, but I think people who dwell on it
are reading too much into it.&lt;br/&gt;&lt;br/&gt;Oddly enough, it was working with startups that made me realize
where the high-paying union job came from.  In a rapidly growing
market, you don't worry too much about efficiency.  It's more
important to grow fast.  If there's some mundane problem getting
in your way, and there's a simple solution that's somewhat expensive,
just take it and get on with more important things.  EBay didn't
win by paying less for servers than their competitors.&lt;br/&gt;&lt;br/&gt;Difficult though it may be to imagine now, manufacturing was a
growth industry in the mid twentieth century.  This was an era when
small firms making everything from cars to candy were getting
consolidated into a new kind of corporation with national reach and
huge economies of scale.  You had to grow fast or die.  Workers
were for these companies what servers are for an Internet startup.
A reliable supply was more important than low cost.&lt;br/&gt;&lt;br/&gt;If you looked in the head of a 1950s auto executive, the attitude
must have been: sure, give 'em whatever they ask for, so long as
the new model isn't delayed.&lt;br/&gt;&lt;br/&gt;In other words, those workers were not paid what their work was
worth.  Circumstances being what they were, companies would have
been stupid to insist on paying them so little.&lt;br/&gt;&lt;br/&gt;If you want a less controversial example of this phenomenon, ask
anyone who worked as a consultant building web sites during the
Internet Bubble.  In the late nineties you could get paid huge sums
of money for building the most trivial things.  And yet does anyone
who was there have any expectation those days will ever return?  I
doubt it.  Surely everyone realizes that was just a temporary
aberration.&lt;br/&gt;&lt;br/&gt;The era of labor unions seems to have been the same kind of aberration, 
just spread
over a longer period, and mixed together with a lot of ideology
that prevents people from viewing it with as cold an eye as they
would something like consulting during the Bubble.&lt;br/&gt;&lt;br/&gt;Basically, unions were just Razorfish.&lt;br/&gt;&lt;br/&gt;People who think the labor movement was the creation of heroic union
organizers have a problem to explain: why are unions shrinking now?
The best they can do is fall back on the default explanation of
people living in fallen civilizations.  Our ancestors were giants.
The workers of the early twentieth century must have had a moral
courage that's lacking today.&lt;br/&gt;&lt;br/&gt;In fact there's a simpler explanation.  The early twentieth century
was just a fast-growing startup overpaying for infrastructure.  And
we in the present are not a fallen people, who have abandoned
whatever mysterious high-minded principles produced the high-paying
union job.  We simply live in a time when the fast-growing companies
overspend on different things.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//unions.html</guid>
      <pubDate>Tue, 01 May 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Microsoft is Dead</title>
      <link>https://paulgraham.com//microsoft.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;A few days ago I suddenly realized Microsoft was dead.  I was talking
to a young startup founder about how Google was different from
Yahoo.  I said that Yahoo had been warped from the start by
their fear of Microsoft.  That was why they'd positioned themselves
as a "media company" instead of a technology company.  Then I looked
at his face and realized he didn't understand.  It was as if I'd
told him how much girls liked Barry Manilow in the mid
&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;A few days ago I suddenly realized Microsoft was dead.  I was talking
to a young startup founder about how Google was different from
Yahoo.  I said that Yahoo had been warped from the start by
their fear of Microsoft.  That was why they'd positioned themselves
as a "media company" instead of a technology company.  Then I looked
at his face and realized he didn't understand.  It was as if I'd
told him how much girls liked Barry Manilow in the mid
80s.  Barry who?&lt;br/&gt;&lt;br/&gt;Microsoft?  He didn't say anything, but I could tell he didn't quite
believe anyone would be frightened of them.&lt;br/&gt;&lt;br/&gt;Microsoft cast
a shadow over the software world for almost 20 years
starting in the late 80s.
I can remember when it was IBM before them.  I mostly ignored this
shadow.  I never used Microsoft software, so it only affected me
indirectlyâ€”for example, in the spam I got from botnets.  And
because I wasn't paying attention, I didn't notice when the shadow
disappeared.&lt;br/&gt;&lt;br/&gt;But it's gone now.  I can sense that.  No one is even afraid of
Microsoft anymore.  They still make a lot of moneyâ€”so does IBM,
for that matter.  But they're not dangerous.&lt;br/&gt;&lt;br/&gt;When did Microsoft die, and of what?  I know they seemed dangerous
as late as 2001, because I wrote an &lt;a href="https://paulgraham.com/road.html"&gt;essay&lt;/a&gt; then 
about how they were
less dangerous than they seemed.   I'd guess they were dead by 2005.
I know when we started Y Combinator we didn't worry about Microsoft
as competition for the startups we funded.  In fact, we've never
even invited them to the demo days we organize for startups to
present to investors.  We invite Yahoo and Google and some other
Internet companies, but we've never bothered to invite Microsoft.
Nor has anyone there ever even sent us an email.  They're in a
different world.&lt;br/&gt;&lt;br/&gt;What killed them?  Four things, I think, all of them occurring
simultaneously in the mid 2000s.&lt;br/&gt;&lt;br/&gt;The most obvious is Google.  There can only be one big man in town,
and they're clearly it.  Google is the most dangerous company
now by far, in both the good and bad senses of the word.  Microsoft
can at best &lt;a href="http://live.com"&gt;limp&lt;/a&gt; along afterward.&lt;br/&gt;&lt;br/&gt;When did Google take the lead?  There will be a tendency to push
it back to their IPO in August 2004, but they weren't setting the
terms of the debate then.  I'd say they took the lead in
2005.  Gmail was one of the things that put them over the edge.
Gmail showed they could do more than search.&lt;br/&gt;&lt;br/&gt;Gmail also showed how much you could do with web-based software,
if you took advantage of what later came to be called "Ajax." And
that was the second cause of Microsoft's death: everyone can see the
desktop is over.  It now seems inevitable that applications will
live on the webâ€”not just email, but everything, right up to
&lt;a href="http://snipshot.com"&gt;Photoshop&lt;/a&gt;.  Even Microsoft sees that now.&lt;br/&gt;&lt;br/&gt;Ironically, Microsoft unintentionally helped create Ajax.  The x
in Ajax is from the XMLHttpRequest object, which lets the browser
communicate with the server in the background while displaying a page.
(Originally the only way to communicate with the server was to 
ask for a new page.) XMLHttpRequest was created by Microsoft in the late 90s
because they needed it for Outlook.  What they didn't realize was
that it would be useful to a lot of other people tooâ€”in fact, to
anyone who wanted to make web apps work like desktop ones.&lt;br/&gt;&lt;br/&gt;The other critical component of Ajax is Javascript, the programming
language that runs in the browser.  Microsoft saw the danger of
Javascript and tried to keep it broken for as long as they could.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/microsoft.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt; 
But eventually the open source world won, by producing
Javascript libraries that grew over the brokenness of Explorer
the way a tree grows over barbed wire.&lt;br/&gt;&lt;br/&gt;The third cause of Microsoft's death was broadband Internet.  Anyone
who cares can have fast Internet access
now.  And the bigger the pipe to the server, the less you need the
desktop.&lt;br/&gt;&lt;br/&gt;The last nail in the coffin came, of all places, from Apple.  
Thanks to OS X, Apple has come back from the dead in a way
that is extremely rare in technology.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/microsoft.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Their victory is so complete that I'm now surprised when I come across
a computer running Windows.  Nearly all the people we fund at Y
Combinator use Apple laptops.  It was the same in the audience at 
&lt;a href="http://www.bosstalks.com/StartupSchool2007/all_macs_and_all_writing.jpg"&gt;startup
school&lt;/a&gt;.  All the computer people use Macs or Linux now.  Windows is for
grandmas, like Macs used to be in the 90s.  So not only does the
desktop no longer matter, no one who cares about computers uses
Microsoft's anyway.&lt;br/&gt;&lt;br/&gt;And of course Apple has Microsoft on the run in music
too, with TV and phones on the way.&lt;br/&gt;&lt;br/&gt;I'm glad Microsoft is dead.  They were like Nero or 
Commodusâ€”evil
in the way only inherited power can make you.  Because remember,
the Microsoft monopoly didn't begin with Microsoft.  They got it
from IBM.  The software business was overhung by a
monopoly from about the mid-1950s to about 2005.  For practically
its whole existence, that is.  One of the reasons "Web 2.0" has
such an air of euphoria about it is the feeling, conscious or not,
that this era of monopoly may finally be over.&lt;br/&gt;&lt;br/&gt;Of course, as a hacker I can't help thinking about how something
broken could be fixed.  Is there some way Microsoft could come back?
In principle, yes.  To see how, envision two things: (a) the amount
of cash Microsoft now has on hand, and (b) Larry and Sergey making
the rounds of all the search engines ten years ago trying to sell
the idea for Google for a million dollars, and being turned down
by everyone.&lt;br/&gt;&lt;br/&gt;The surprising fact is, brilliant hackersâ€”dangerously brilliant
hackersâ€”can be had very cheaply, by the standards of a
company as rich as Microsoft.  They can't 
&lt;a href="https://paulgraham.com/hiring.html"&gt;hire&lt;/a&gt; smart people anymore,
but they could buy as many as they wanted for only an order of magnitude 
more. So if they wanted to be a contender
again, this is how they could do it:
&lt;ol&gt;
&lt;li&gt; Buy all the good "Web 2.0" startups.  They could get substantially
    all of them for less than they'd have to pay for Facebook.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; Put them all in a building in Silicon Valley, surrounded by
    lead shielding to protect them from any contact with Redmond.
&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
I feel safe suggesting this, because they'd never do it.  Microsoft's
biggest weakness is that they still don't realize how much they
suck.  They still think they can write software in house.  Maybe they
can, by the standards of the desktop world.  But that world ended
a few years ago.&lt;br/&gt;&lt;br/&gt;I already know what the reaction to this essay will be.  Half the
readers will say that Microsoft is still an enormously profitable
company, and that I should be more
careful about drawing conclusions based on what a few people think
in our insular little "Web 2.0" bubble.  The other half, the younger
half, will complain that this is old news.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;See also:&lt;/b&gt; &lt;a href="https://paulgraham.com/cliffsnotes.html"&gt;Microsoft is Dead: the Cliffs Notes&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
It doesn't take a conscious effort to make software incompatible.
All you have to do is not work too hard at fixing bugsâ€”which, if
you're a big company, you produce in copious quantities.  The
situation is analogous to the writing of "&lt;ax href="http://scholar.google.com/scholar?q=subtext+gendered+theory+postmodern+deconstruct"&gt;literary
theorists."  Most don't try to be obscure; they just don't make an
effort to be clear.  It wouldn't pay.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
In part because Steve Jobs got pushed out by John Sculley in
a way that's rare among technology companies.  If Apple's board
hadn't made that blunder, they wouldn't have had to bounce back.&lt;br/&gt;&lt;br/&gt;&lt;/ax&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//microsoft.html</guid>
      <pubDate>Sun, 01 Apr 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Two Kinds of Judgement</title>
      <link>https://paulgraham.com//judgement.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;There are two different ways people judge you.  Sometimes judging
you correctly is the end goal.  But there's a second much more
common type of judgement where it isn't.  We tend to regard all
judgements of us as the first type.  We'd probably be happier if
we realized which are and which aren't.&lt;br/&gt;&lt;br/&gt;The first type of judgement, the type where judging you is the end
goal, include court cases, grades in classes, and most competitions.
Such ju&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;There are two different ways people judge you.  Sometimes judging
you correctly is the end goal.  But there's a second much more
common type of judgement where it isn't.  We tend to regard all
judgements of us as the first type.  We'd probably be happier if
we realized which are and which aren't.&lt;br/&gt;&lt;br/&gt;The first type of judgement, the type where judging you is the end
goal, include court cases, grades in classes, and most competitions.
Such judgements can of course be mistaken, but because the goal is
to judge you correctly, there's usually some kind of appeals process.
If you feel you've been misjudged, you can protest that you've been
treated unfairly.&lt;br/&gt;&lt;br/&gt;Nearly all the judgements made on children are of this type, so we
get into the habit early in life of thinking that all judgements
are.&lt;br/&gt;&lt;br/&gt;But in fact there is a second much larger class of judgements where
judging you is only a means to something else.  These include college
admissions, hiring and investment decisions, and of course the
judgements made in dating.  This kind of judgement is not really
about you.&lt;br/&gt;&lt;br/&gt;Put yourself in the position of someone selecting players for a
national team.  Suppose for the sake of simplicity that this is a
game with no positions, and that you have to select 20 players.
There will be a few stars who clearly should make the team, and
many players who clearly shouldn't.  The only place your judgement
makes a difference is in the borderline cases.  Suppose you screw
up and underestimate the 20th best player, causing him not to make
the team, and his place to be taken by the 21st best.  You've still
picked a good team.  If the players have the usual distribution of
ability, the 21st best player will be only slightly worse than the
20th best.  Probably the difference between them will be less than
the measurement error.&lt;br/&gt;&lt;br/&gt;The 20th best player may feel he has been misjudged.  But your goal
here wasn't to provide a service estimating people's ability.  It
was to pick a team, and if the difference between the 20th and 21st
best players is less than the measurement error, you've still done
that optimally.&lt;br/&gt;&lt;br/&gt;It's a false analogy even to use the word unfair to describe this
kind of misjudgement.  It's not aimed at producing a correct estimate
of any given individual, but at selecting a reasonably optimal set.&lt;br/&gt;&lt;br/&gt;One thing that leads us astray here is that the selector seems to
be in a position of power.  That makes him seem like a judge.  If
you regard someone judging you as a customer instead of a judge,
the expectation of fairness goes away.  The author of a good novel
wouldn't complain that readers were &lt;i&gt;unfair&lt;/i&gt; for preferring a
potboiler with a racy cover.  Stupid, perhaps, but not unfair.&lt;br/&gt;&lt;br/&gt;Our early training and our self-centeredness combine to make us
believe that every judgement of us is about us.  In fact most aren't.
This is a rare case where being less self-centered will make people
more confident.  Once you realize how little most people judging
you care about judging you accuratelyâ€”once you realize that because
of the normal distribution of most applicant pools, it matters least
to judge accurately in precisely the cases where judgement has the
most effectâ€”you won't take rejection so personally.&lt;br/&gt;&lt;br/&gt;And curiously enough, taking rejection less personally may help you
to get rejected less often.  If you think someone judging you will
work hard to judge you correctly, you can afford to be passive.
But the more you realize that most judgements are greatly influenced
by random, extraneous factorsâ€”that most people judging you are
more like a fickle novel buyer than a wise and perceptive 
magistrateâ€”the more you realize you can do things to influence the
outcome.&lt;br/&gt;&lt;br/&gt;One good place to apply this principle is in college applications.
Most high school students applying to college do it with the usual
child's mix of inferiority and self-centeredness: inferiority in
that they assume that admissions committees must be all-seeing;
self-centeredness in that they assume admissions committees care
enough about them to dig down into their application and figure out
whether they're good or not.  These combine to make applicants
passive in applying and hurt when they're rejected.  If college
applicants realized how quick and impersonal most selection processes
are, they'd make more effort to sell themselves, and take the outcome
less personally.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//judgement.html</guid>
      <pubDate>Sun, 01 Apr 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Hacker's Guide to Investors</title>
      <link>https://paulgraham.com//guidetoinvestors.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a keynote talk at the 2007 ASES Summit
at Stanford.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;The world of investors is a foreign one to most hackersâ€”partly
because investors are so unlike hackers, and partly because they
tend to operate in secret.  I've been dealing with this world for
many years, both as a founder and an investor, and I still don't
fully understand it.&lt;br/&gt;&lt;br/&gt;In this essay I'm going to list some of the more surprising thin&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a keynote talk at the 2007 ASES Summit
at Stanford.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;The world of investors is a foreign one to most hackersâ€”partly
because investors are so unlike hackers, and partly because they
tend to operate in secret.  I've been dealing with this world for
many years, both as a founder and an investor, and I still don't
fully understand it.&lt;br/&gt;&lt;br/&gt;In this essay I'm going to list some of the more surprising things
I've learned about investors.  Some I only learned in the past year.&lt;br/&gt;&lt;br/&gt;Teaching hackers how to deal with investors is probably the second
most important thing we do at Y Combinator.  The most important
thing for a startup is to make something good.  But everyone knows
that's important.  The dangerous thing about investors is that
hackers don't know how little they know about this strange world.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. The investors are what make a startup hub.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;About a year ago I tried to figure out what you'd need to reproduce
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;Silicon Valley&lt;/a&gt;.  I decided the 
critical ingredients were rich people
and nerdsâ€”investors and founders.  People are all you need to
make technology, and all the other people will move.&lt;br/&gt;&lt;br/&gt;If I had to narrow that down, I'd say investors are the limiting
factor.  Not because they contribute more to the startup, but simply
because they're least willing to move.  They're rich.  They're not
going to move to Albuquerque just because there are some smart
hackers there they could invest in.  Whereas hackers will move to
the Bay Area to find investors.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Angel investors are the most critical.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There are several types of investors.  The two main categories are
angels and VCs: VCs invest other people's money, and angels invest
their own.&lt;br/&gt;&lt;br/&gt;Though they're less well known, the angel investors are probably
the more critical ingredient in creating a silicon valley.  Most
companies that VCs invest in would never have made it that far if angels
hadn't invested first.  VCs say between half and three quarters of
companies that raise series A rounds have taken some outside
investment already.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/guidetoinvestors.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Angels are willing to fund riskier projects than VCs.  They also
give valuable advice, because (unlike VCs) many have been startup
founders themselves.&lt;br/&gt;&lt;br/&gt;Google's story shows the key role angels play. A lot of people know
Google raised money from Kleiner and Sequoia.  What most don't realize
is how late.  That VC round was a series B round; the premoney
valuation was $75 million.  Google was already a successful company
at that point.  Really, Google was funded with angel money.&lt;br/&gt;&lt;br/&gt;It may seem odd that the canonical Silicon Valley startup was funded
by angels, but this is not so surprising.  Risk is always proportionate
to reward.  So the most successful startup of all is likely to have
seemed an extremely risky bet at first, and that is exactly the
kind VCs won't touch.&lt;br/&gt;&lt;br/&gt;Where do angel investors come from?  From other startups.  So startup
hubs like Silicon Valley benefit from something like the marketplace
effect, but shifted in time: startups are there because startups
were there.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Angels don't like publicity.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If angels are so important, why do we hear more about VCs?  Because
VCs like publicity.  They need to market themselves to the investors
who are their "customers"â€”the endowments and pension funds and
rich families whose money they investâ€”and also to founders who
might come to them for funding.&lt;br/&gt;&lt;br/&gt;Angels don't need to market themselves to investors because they
invest their own money.  Nor do they want to market themselves to
founders: they don't want random people pestering them with business
plans.  Actually, neither do VCs.  Both angels and VCs get deals
almost exclusively through personal introductions.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/guidetoinvestors.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The reason VCs want a strong brand is not to draw in more business
plans over the transom, but so they win deals when competing
against other VCs.  Whereas angels are rarely in direct competition,
because (a) they do fewer deals, (b) they're happy to split them,
and (c) they invest at a point where the stream is broader.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Most investors, especially VCs, are not like founders.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some angels are, or were, hackers.  But most VCs are a different
type of people: they're dealmakers.&lt;br/&gt;&lt;br/&gt;If you're a hacker, here's a thought experiment you can run to
understand why there are basically no hacker VCs: How would you
like a job where you never got to make anything, but instead spent
all your time listening to other people pitch (mostly terrible)
projects, deciding whether to fund them, and sitting on their boards
if you did?  That would not be fun for most hackers.  Hackers like
to make things.  This would be like being an administrator.&lt;br/&gt;&lt;br/&gt;Because most VCs are a different species of people from
founders, it's hard to know what they're thinking.  If you're a
hacker, the last time you had to deal with these guys was in high
school.  Maybe in college you walked past their fraternity on your
way to the lab.  But don't underestimate them.  They're as expert
in their world as you are in yours.  What they're good at is reading
people, and making deals work to their advantage.  Think twice
before you try to beat them at that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Most investors are momentum investors.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Because most investors are dealmakers rather than technology people,
they generally don't understand what you're doing.  I knew as a
founder that most VCs didn't get technology.  I also knew some made
a lot of money.  And yet it never occurred to me till recently to
put those two ideas together and ask "How can VCs make money by
investing in stuff they don't understand?"&lt;br/&gt;&lt;br/&gt;The answer is that they're like momentum investors.  You can (or
could once) make a lot of money by noticing sudden changes in stock
prices.  When a stock jumps upward, you buy, and when it suddenly
drops, you sell.  In effect you're insider trading, without knowing
what you know.  You just know someone knows something, and that's
making the stock move.&lt;br/&gt;&lt;br/&gt;This is how most venture investors operate.  They don't try to look
at something and predict whether it will take off.  They win by
noticing that something &lt;i&gt;is&lt;/i&gt; taking off a little sooner than everyone
else.  That generates almost as good returns as actually being able
to pick winners.  They may have to pay a little more than they would
if they got in at the very beginning, but only a little.&lt;br/&gt;&lt;br/&gt;Investors always say what they really care about is the team.
Actually what they care most about is your traffic, then what other
investors think, then the team.  If you don't yet have any traffic,
they fall back on number 2, what other investors think.  And this,
as you can imagine, produces wild oscillations in the "stock price"
of a startup.  One week everyone wants you, and they're begging not
to be cut out of the deal.  But all it takes is for one big investor
to cool on you, and the next week no one will return your phone
calls.  We regularly have startups go from hot to cold or cold to
hot in a matter of days, and literally nothing has changed.&lt;br/&gt;&lt;br/&gt;There are two ways to deal with this phenomenon.  If you're feeling
really confident, you can try to ride it.  You can start by asking
a comparatively lowly VC for a small amount of money, and then after
generating interest there, ask more prestigious VCs for larger
amounts, stirring up a crescendo of buzz, and then "sell" at the
top.  This is extremely risky, and takes months even if you succeed.
I wouldn't try it myself.  My advice is to err on the side of safety:
when someone offers you a decent deal, just take it and get on with
building the company.  Startups win or lose based on the quality
of their product, not the quality of their funding deals.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. Most investors are looking for big hits.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Venture investors like companies that could go public.  That's where
the big returns are.  They know the odds of any individual startup
going public are small, but they want to invest in those that at
least have a &lt;i&gt;chance&lt;/i&gt; of going public.&lt;br/&gt;&lt;br/&gt;Currently the way VCs seem to operate is to invest in a bunch of
companies, most of which fail, and one of which is Google.  Those
few big wins compensate for losses on their other investments.  What this
means is that most VCs will only invest in you if you're a potential
Google.  They don't care about companies that are a safe bet to be
acquired for $20 million.  There needs to be a chance, however
small, of the company becoming really big.&lt;br/&gt;&lt;br/&gt;Angels are different in this respect.  They're happy to invest in
a company where the most likely outcome is a $20 million acquisition
if they can do it at a low enough valuation.  But of course they
like companies that could go public too.  So having an ambitious
long-term plan pleases everyone.&lt;br/&gt;&lt;br/&gt;If you take VC money, you have to mean it, because the structure
of VC deals prevents early acquisitions.  If you take VC money,
they won't let you sell early.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. VCs want to invest large amounts.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The fact that they're running investment funds makes VCs want to
invest large amounts.  A typical VC fund is now hundreds of millions
of dollars.  If $400 million has to be invested by 10 partners,
they have to invest $40 million each.  VCs usually sit on the boards
of companies they fund.  If the average deal size was $1 million,
each partner would have to sit on 40 boards, which would not be
fun.  So they prefer bigger deals, where they can put a lot of money
to work at once.&lt;br/&gt;&lt;br/&gt;VCs don't regard you as a bargain if you don't need a lot of money.
That may even make you less attractive, because it means their
investment creates less of a barrier to entry for competitors.&lt;br/&gt;&lt;br/&gt;Angels are in a different position because they're investing their
own money.  They're happy to invest small amountsâ€”sometimes as
little as $20,000â€”as long as the potential returns look good
enough.  So if you're doing something inexpensive, go to angels.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8. Valuations are fiction.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;VCs admit that valuations are an artifact.  They decide how much
money you need and how much of the company they want, and those two
constraints yield a valuation.&lt;br/&gt;&lt;br/&gt;Valuations increase as the size of the investment does.  A company
that an angel is willing to put $50,000 into at a valuation of a
million can't take $6 million from VCs at that valuation.  That
would leave the founders less than a seventh of the company between
them (since the option pool would also come out of that seventh).
Most VCs wouldn't want that, which is why you never hear of deals
where a VC invests $6 million at a premoney valuation of $1 million.&lt;br/&gt;&lt;br/&gt;If valuations change depending on the amount invested, that shows
how far they are from reflecting any kind of value of the company.&lt;br/&gt;&lt;br/&gt;Since valuations are made up, founders shouldn't care too much about
them.  That's not the part to focus on.  In fact, a high valuation
can be a bad thing.  If you take funding at a premoney valuation
of $10 million, you won't be selling the company for 20.  You'll
have to sell for over 50 for the VCs to get even a 5x return, which
is low to them.  More likely they'll want you to hold out for 100.
But needing to get a high price decreases the chance of getting
bought at all; many companies can buy you for $10 million, but only
a handful for 100.  And since a startup is like a pass/fail course
for the founders, what you want to optimize is your chance of a
good outcome, not the percentage of the company you keep.&lt;br/&gt;&lt;br/&gt;So why do founders chase high valuations?  They're tricked by
misplaced ambition.  They feel they've achieved more if they get a
higher valuation.  They usually know other founders, and if they
get a higher valuation they can say "mine is bigger than yours."
But funding is not the real test.  The real test is the final outcome
for the founder, and getting too high a valuation may just make a
good outcome less likely.&lt;br/&gt;&lt;br/&gt;The one advantage of a high valuation is that you get less dilution.
But there is another less sexy way to achieve that: just take less
money.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. Investors look for founders like the current stars.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Ten years ago investors were looking for the next Bill Gates.  This
was a mistake, because Microsoft was a very anomalous startup.  They
started almost as a contract programming operation, and the reason
they became huge was that IBM happened to drop the PC standard in
their lap.&lt;br/&gt;&lt;br/&gt;Now all the VCs are looking for the next Larry and Sergey.  This
is a good trend, because Larry and Sergey are closer to the ideal
startup founders.&lt;br/&gt;&lt;br/&gt;Historically investors thought it was important for a founder to
be an expert in business.  So they were willing to fund teams of
MBAs who planned to use the money to pay programmers to build their
product for them.  This is like funding Steve Ballmer in the hope
that the programmer he'll hire is Bill Gatesâ€”kind of backward,
as the events of the Bubble showed.  Now most VCs know they should
be funding technical guys.  This is more pronounced among the very
top funds; the lamer ones still want to fund MBAs.&lt;br/&gt;&lt;br/&gt;If you're a hacker, it's good news that investors are looking for
Larry and Sergey.  The bad news is, the only investors who can do
it right are the ones who knew them when they were a
couple of CS grad students, not the confident media stars they are
today.  What investors still don't get is how clueless and tentative
great founders can seem at the very beginning.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;10. The contribution of investors tends to be underestimated.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Investors do more for startups than give them money.  They're helpful
in doing deals and arranging introductions, and some of the smarter
ones, particularly angels, can give good advice about the product.&lt;br/&gt;&lt;br/&gt;In fact, I'd say what separates the great investors from the mediocre
ones is the quality of their advice.  Most investors give advice,
but the top ones give &lt;i&gt;good&lt;/i&gt; advice.&lt;br/&gt;&lt;br/&gt;Whatever help investors give a startup tends to be underestimated.
It's to everyone's advantage to let the world think the founders
thought of everything.  The goal of the investors is for the company
to become valuable, and the company seems more valuable if it seems
like all the good ideas came from within.&lt;br/&gt;&lt;br/&gt;This trend is compounded by the obsession that the press has with
founders.  In a company founded by two people, 10% of the ideas
might come from the first guy they hire.  Arguably they've done a
bad job of hiring otherwise.  And yet this guy will be almost
entirely overlooked by the press.&lt;br/&gt;&lt;br/&gt;I say this as a founder: the contribution of founders is always
overestimated.  The danger here is that new founders, looking at
existing founders, will think that they're supermen that one couldn't
possibly equal oneself.  Actually they have a hundred different
types of support people just offscreen making the whole show possible.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/guidetoinvestors.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;11. VCs are afraid of looking bad.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I've been very surprised to discover how timid most VCs are.  They
seem to be afraid of looking bad to their partners, and perhaps
also to the limited partnersâ€”the people whose money they invest.&lt;br/&gt;&lt;br/&gt;You can measure this fear in how much less risk VCs are willing to
take.  You can tell they won't make investments for their fund that
they might be willing to make themselves as angels.  Though it's
not quite accurate to say that VCs are less willing to take risks.
They're less willing to do things that might look bad.  That's not
the same thing.&lt;br/&gt;&lt;br/&gt;For example, most VCs would be very reluctant to invest in a startup
founded by a pair of 18 year old hackers, no matter how brilliant,
because if the startup failed their partners could turn on them and
say "What, you invested $x million of our money in a pair of 18
year olds?"  Whereas if a VC invested in a startup founded by
three former banking executives in their 40s who planned to outsource
their product developmentâ€”which to my mind is actually a lot
riskier than investing in a pair of really smart 18 year oldsâ€”he
couldn't be faulted, if it failed, for making such an apparently
prudent investment.&lt;br/&gt;&lt;br/&gt;As a friend of mine said, "Most VCs can't do anything that would
sound bad to the kind of doofuses who run pension funds." Angels
can take greater risks because they don't have to answer to anyone.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;12. Being turned down by investors doesn't mean much.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some founders are quite dejected when they get turned down by
investors.  They shouldn't take it so much to heart.  To start with,
investors are often wrong.  It's hard to think of a successful
startup that wasn't turned down by investors at some point.  Lots
of VCs rejected Google.  So obviously the reaction of investors is
not a very meaningful test.&lt;br/&gt;&lt;br/&gt;Investors will often reject you for what seem to be superficial
reasons.  I read of one VC who 
&lt;a href="http://ricksegal.typepad.com/pmv/2007/02/a_fatal_paper_c.html"&gt;turned
down&lt;/a&gt; a startup simply because
they'd given away so many little bits of stock that the deal required
too many signatures to close. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/guidetoinvestors.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The reason investors can get away
with this is that they see so many deals.  It doesn't matter if
they underestimate you because of some surface imperfection, because
the next best deal will be &lt;a href="https://paulgraham.com/judgement.html"&gt;almost as good&lt;/a&gt;.  
Imagine picking out
apples at a grocery store.  You grab one with a little bruise.
Maybe it's just a surface bruise, but why even bother checking when
there are so many other unbruised apples to choose from?&lt;br/&gt;&lt;br/&gt;Investors would be the first to admit they're often wrong.  So when
you get rejected by investors, don't think "we suck," but instead
ask "do we suck?"  Rejection is a question, not an answer.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;13. Investors are emotional.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I've been surprised to discover how emotional investors can be.
You'd expect them to be cold and calculating, or at least businesslike,
but often they're not.  I'm not sure if it's their position of power
that makes them this way, or the large sums of money involved, but
investment negotiations can easily turn personal.  If you offend
investors, they'll leave in a huff.&lt;br/&gt;&lt;br/&gt;A while ago an eminent VC firm offered a series A round to a startup
we'd seed funded.  Then they heard a rival VC firm was also interested.
They were so afraid that they'd be rejected in favor of this other
firm that they gave the startup what's known as an "exploding
termsheet."  They had, I think, 24 hours to say yes or no, or the
deal was off.  Exploding termsheets are a somewhat dubious device,
but not uncommon.  What surprised me was their reaction when I
called to talk about it.  I asked if they'd still be interested in
the startup if the rival VC didn't end up making an offer, and they
said no.  What rational basis could they have had for saying that?
If they thought the startup was worth investing in, what difference
should it make what some other VC thought?  Surely it was their
duty to their limited partners simply to invest in the best
opportunities they found; they should be delighted if the other VC
said no, because it would mean they'd overlooked a good opportunity.
But of course there was no rational basis for their decision.  They
just couldn't stand the idea of taking this rival firm's rejects.&lt;br/&gt;&lt;br/&gt;In this case the exploding termsheet was not (or not only) a tactic
to pressure the startup.  It was more like the high school trick
of breaking up with someone before they can break up with you.  In
an &lt;a href="https://paulgraham.com/startupfunding.html"&gt;earlier essay&lt;/a&gt; I said that VCs were a lot like high school girls.
A few VCs have joked about that characterization, but none have
disputed it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;14. The negotiation never stops till the closing.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Most deals, for investment or acquisition, happen in two phases.
There's an initial phase of negotiation about the big questions.
If this succeeds you get a termsheet, so called because it outlines
the key terms of a deal.  A termsheet is not legally binding,
but it is a definite step.  It's supposed to mean that a
deal is going to happen, once the lawyers work out all the details.
In theory these details are minor ones; by definition all the
important points are supposed to be covered in the termsheet.&lt;br/&gt;&lt;br/&gt;Inexperience and wishful thinking combine to make founders feel
that when they have a termsheet, they have a deal.  They want there
to be a deal; everyone acts like they have a deal; so there must
be a deal.  But there isn't and may not be for several months.  A
lot can change for a startup in several months.  It's not uncommon
for investors and acquirers to get buyer's remorse.  So you have
to keep pushing, keep selling, all the way to the close.  Otherwise
all the "minor" details left unspecified in the termsheet will be
interpreted to your disadvantage.  The other side may even break
the deal; if they do that, they'll usually seize on some technicality
or claim you misled them, rather than admitting they changed their
minds.&lt;br/&gt;&lt;br/&gt;It can be hard to keep the pressure on an investor or acquirer all
the way to the closing, because the most effective pressure is
competition from other investors or acquirers, and these tend to
drop away when you get a termsheet.  You should try to stay as close
friends as you can with these rivals, but the most important thing
is just to keep up the momentum in your startup.  The investors or
acquirers chose you because you seemed hot.  Keep doing whatever
made you seem hot.  Keep releasing new features; keep getting new
users; keep getting mentioned in the press and in blogs.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;15. Investors like to co-invest.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I've been surprised how willing investors are to split deals.  You
might think that if they found a good deal they'd want it all to
themselves, but they seem positively eager to syndicate.  This is
understandable with angels; they invest on a smaller scale and don't
like to have too much money tied up in any one deal.  But VCs also
share deals a lot.  Why?&lt;br/&gt;&lt;br/&gt;Partly I think this is an artifact of the rule I quoted earlier:
after traffic, VCs care most what other VCs think.  A deal that has
multiple VCs interested in it is more likely to close, so of deals
that close, more will have multiple investors.&lt;br/&gt;&lt;br/&gt;There is one rational reason to want multiple VCs in a deal: Any
investor who co-invests with you is one less investor who could
fund a competitor.  Apparently Kleiner and Sequoia didn't like
splitting the Google deal, but it did at least have the advantage,
from each one's point of view, that there probably wouldn't be a
competitor funded by the other.  Splitting deals thus has similar
advantages to confusing paternity.&lt;br/&gt;&lt;br/&gt;But I think the main reason VCs like splitting deals is the fear
of looking bad.  If another firm shares the deal, then in the event
of failure it will seem to have been a prudent choiceâ€”a consensus
decision, rather than just the whim of an individual partner.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;16. Investors collude.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Investing is not covered by antitrust law.  At least, it better not
be, because investors regularly do things that would be illegal
otherwise.  I know personally of cases where one investor has talked
another out of making a competitive offer, using the promise of
sharing future deals.&lt;br/&gt;&lt;br/&gt;In principle investors are all competing for the same deals, but
the spirit of cooperation is stronger than the spirit of competition.
The reason, again, is that there are so many deals.  Though a
professional investor may have a closer relationship with a founder
he invests in than with other investors, his relationship with the
founder is only going to last a couple years, whereas his relationship
with other firms will last his whole career.  There isn't so much
at stake in his interactions with other investors, but there will
be a lot of them.  Professional investors are constantly trading
little favors.&lt;br/&gt;&lt;br/&gt;Another reason investors stick together is to preserve the power
of investors as a whole.  So you will not, as of this writing, be
able to get investors into an auction for your series A round.
They'd rather lose the deal than establish a precedent of VCs
competitively bidding against one another.  An efficient startup
funding market may be coming in the distant future; things tend to
move in that direction; but it's certainly not here now.
&lt;!--
The best way to describe the situation might be to say that VCs
compete intramurally. --&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;17. Large-scale investors care about their portfolio, not any
individual company.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The reason startups work so well is that everyone with power also
has equity.  The only way any of them can succeed is if they all
do.  This makes everyone naturally pull in the same direction,
subject to differences of opinion about tactics.&lt;br/&gt;&lt;br/&gt;The problem is, larger scale investors don't have exactly the same
motivation.  Close, but not identical. They don't need any given
startup to succeed, like founders do, just their portfolio as a
whole to.  So in borderline cases the rational thing for them to
do is to sacrifice unpromising startups.&lt;br/&gt;&lt;br/&gt;Large-scale investors tend to put startups in three categories:
successes, failures, and the "living dead"â€”companies that are
plugging along but don't seem likely in the immediate future to get
bought or go public.  To the founders, "living dead" sounds harsh.
These companies may be far from failures by ordinary standards. But
they might as well be from a venture investor's point of view, and
they suck up just as much time and attention as the successes.  So
if such a company has two possible strategies, a conservative one
that's slightly more likely to work in the end, or a risky one that
within a short time will either yield a giant success or kill the
company, VCs will push for the kill-or-cure option.  To them the
company is already a write-off.  Better to have resolution, one way
or the other, as soon as possible.&lt;br/&gt;&lt;br/&gt;If a startup gets into real trouble, instead of trying to save it
VCs may just sell it at a low price to another of their portfolio
companies.  Philip Greenspun said in &lt;a href="http://www.amazon.com/gp/product/1590597141"&gt;&lt;i&gt;Founders at Work&lt;/i&gt;&lt;/a&gt; that Ars Digita's VCs did this to them.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;18. Investors have different risk profiles from founders.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Most people would rather a 100% chance of $1 million than a 20%
chance of $10 million.  Investors are rich enough to be rational
and prefer the latter.  So they'll always tend to encourage founders
to keep rolling the dice.  If a company is doing well, investors
will want founders to turn down most acquisition offers.  And indeed,
most startups that turn down acquisition offers ultimately do better.
But it's still hair-raising for the founders, because they might
end up with nothing.  When someone's offering to buy you for a price
at which your stock is worth $5 million, saying no is equivalent
to having $5 million and betting it all on one spin of the roulette
wheel.&lt;br/&gt;&lt;br/&gt;Investors will tell you the company is worth more.  And they may
be right.  But that doesn't mean it's wrong to sell.  Any financial
advisor who put all his client's assets in the stock of a single,
private company would probably lose his license for it.&lt;br/&gt;&lt;br/&gt;More and more, investors are letting founders cash out partially.
That should correct the problem. Most founders have such low standards
that they'll feel rich with a sum that doesn't seem huge to investors.
But this custom is spreading too slowly, because VCs are afraid of
seeming irresponsible.  No one wants to be the first VC to give
someone fuck-you money and then actually get told "fuck you." But
until this does start to happen, we know VCs are being too conservative.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;19. Investors vary greatly.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Back when I was a founder I used to think all VCs were the same.
And in fact they do all &lt;a href="http://www.redpoint.com/team/"&gt;look&lt;/a&gt; 
the same.  They're all what hackers
call "suits."  But since I've been dealing with VCs more I've learned
that some suits are smarter than others.&lt;br/&gt;&lt;br/&gt;They're also in a business where winners tend to keep winning and
losers to keep losing.  When a VC firm has been successful in the
past, everyone wants funding from them, so they get the pick of all
the new deals.  The self-reinforcing nature of the venture funding
market means that the top ten firms live in a completely different
world from, say, the hundredth.  As well as being smarter, they
tend to be calmer and more upstanding; they don't need to do iffy
things to get an edge, and don't want to because they have more
brand to protect.&lt;br/&gt;&lt;br/&gt;There are only two kinds of VCs you want to take money from, if you
have the luxury of choosing: the "top tier" VCs, meaning about the
top 20 or so firms, plus a few new ones that are not among the top
20 only because they haven't been around long enough.&lt;br/&gt;&lt;br/&gt;It's particularly important to raise money from a top firm if you're
a hacker, because they're more confident.  That means they're less
likely to stick you with a business guy as CEO, like VCs used to
do in the 90s.  If you seem smart and want to do it, they'll let
you run the company.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;20. Investors don't realize how much it costs to raise money from
them.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Raising money is a huge time suck at just the point where startups
can least afford it. It's not unusual for it to take five or six
months to close a funding round.  Six weeks is fast.  And raising
money is not just something you can leave running as a background
process.  When you're raising money, it's inevitably the main focus
of the company.  Which means building the product isn't.&lt;br/&gt;&lt;br/&gt;Suppose a Y Combinator company starts talking to VCs after demo
day, and is successful in raising money from them, closing the deal
after a comparatively short 8 weeks.  Since demo day occurs after
10 weeks, the company is now 18 weeks old.  Raising money, rather
than working on the product, has been the company's main focus for
44% of its existence.  And mind you, this an example where things
turned out &lt;i&gt;well&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;When a startup does return to working on the product after a funding
round finally closes, it's as if they were returning to work after
a months-long illness.  They've lost most of their momentum.&lt;br/&gt;&lt;br/&gt;Investors have no idea how much they damage the companies they
invest in by taking so long to do it.  But companies do. So there
is a big opportunity here for a new kind of venture fund that invests
smaller amounts at lower valuations, but promises to either close
or say no very quickly.  If there were such a firm, I'd recommend
it to startups in preference to any other, no matter how prestigious.
Startups live on speed and momentum.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;21. Investors don't like to say no.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The reason funding deals take so long to close is mainly that
investors can't make up their minds.  VCs are not big companies;
they can do a deal in 24 hours if they need to.  But they usually
let the initial meetings stretch out over a couple weeks.  The
reason is the selection algorithm I mentioned earlier.  Most don't
try to predict whether a startup will win, but to notice quickly
that it already is winning.  They care what the market thinks of
you and what other VCs think of you, and they can't judge those
just from meeting you.&lt;br/&gt;&lt;br/&gt;Because they're investing in things that (a) change fast and (b)
they don't understand, a lot of investors will reject you in a way
that can later be claimed not to have been a rejection.  Unless you
know this world, you may not even realize you've been rejected.
Here's a VC saying no:
&lt;blockquote&gt;
  We're really excited about your project, and we want to keep in
  close touch as you develop it further.
&lt;/blockquote&gt;
Translated into more straightforward language, this means: We're
not investing in you, but we may change our minds if it looks like
you're taking off.  Sometimes they're more candid and say explicitly
that they need to "see some traction."  They'll invest in you if
you start to get lots of users.  But so would any VC.  So all they're
saying is that you're still at square 1.&lt;br/&gt;&lt;br/&gt;Here's a test for deciding whether a VC's response was yes or no.
Look down at your hands.  Are you holding a termsheet?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;22. You need investors.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some founders say "Who needs investors?"  Empirically the answer
seems to be: everyone who wants to succeed.  Practically every
successful startup takes outside investment at some point.&lt;br/&gt;&lt;br/&gt;Why? What the people who think they don't need investors forget is
that they will have competitors.  The question is not whether you
&lt;i&gt;need&lt;/i&gt; outside investment, but whether it could help you at all.
If the answer is yes, and you don't take investment, then competitors
who do will have an advantage over you.  And in the startup world
a little advantage can expand into a lot.&lt;br/&gt;&lt;br/&gt;Mike Moritz famously said that he invested in Yahoo because he
thought they had a few weeks' lead over their competitors.  That
may not have mattered quite so much as he thought, because Google
came along three years later and kicked Yahoo's ass.  But there is
something in what he said.  Sometimes a small lead can grow into
the yes half of a binary choice.&lt;br/&gt;&lt;br/&gt;Maybe as it gets cheaper to start a startup, it will start to be
possible to succeed in a competitive market without outside funding.  
There are certainly
costs to raising money.  But as of this writing the empirical
evidence says it's a net win.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;23. Investors like it when you don't need them.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of founders approach investors as if they needed their
permission to start a companyâ€”as if it were like getting into
college.  But you don't need investors to start most companies;
they just make it easier.&lt;br/&gt;&lt;br/&gt;And in fact, investors greatly prefer it if you don't need them.
What excites them, both consciously and unconsciously, is the sort
of startup that approaches them saying "the train's leaving the
station; are you in or out?" not the one saying "please can we have
some money to start a company?"&lt;br/&gt;&lt;br/&gt;Most investors are "bottoms" in the sense that the startups they
like most are those that are rough with them.  When Google stuck
Kleiner and Sequoia with a $75 million premoney valuation, their
reaction was probably "Ouch! That feels so good." And they were
right, weren't they?  That deal probably made them more than any
other they've done.&lt;br/&gt;&lt;br/&gt;The thing is, VCs are pretty good at reading people.  So don't try
to act tough with them unless you really are the next Google, or
they'll see through you in a second.  Instead of acting tough, what
most startups should do is simply always have a backup plan.  Always
have some alternative plan for getting started if any given investor
says no.  Having one is the best insurance against needing one.&lt;br/&gt;&lt;br/&gt;So you shouldn't start a startup that's expensive to start, because
then you'll be at the mercy of investors.  If you ultimately want
to do something that will cost a lot, start by doing a cheaper
subset of it, and expand your ambitions when and if you raise more
money.&lt;br/&gt;&lt;br/&gt;Apparently the most likely animals to be left alive after a nuclear
war are cockroaches, because they're so hard to kill.  That's what
you want to be as a startup, initially.  Instead of a beautiful
but fragile flower that needs to have its stem in a plastic tube
to support itself, better to be small, ugly, and indestructible.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I may be underestimating VCs.  They may play some behind the scenes 
role in IPOs, which you ultimately need if you want to create a silicon 
valley.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
A few VCs have an email address you can send your business
plan to, but the number of startups that get funded this way is
basically zero.  You should always get a personal introductionâ€”and 
to a partner, not an associate.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Several people have told us that the most valuable thing about 
&lt;a href="http://startupschool.org"&gt;startup school&lt;/a&gt; 
was that they got to see famous startup founders and realized
they were just ordinary guys.  Though we're happy to provide this
service, this is not generally the way we pitch startup school to
potential speakers.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Actually this sounds to me like a VC who got buyer's remorse,
then used a technicality to get out of the deal.  But it's telling
that it even seemed a plausible excuse.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Hutch Fishman, and Robert 
Morris for reading drafts of
this, and to Kenneth King of ASES for inviting me to speak.&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/item?id=17947"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//guidetoinvestors.html</guid>
      <pubDate>Sun, 01 Apr 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why to Not Not Start a Startup</title>
      <link>https://paulgraham.com//notnot.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from talks at the 2007 
Startup School and th&lt;/i&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from talks at the 2007 
Startup School and the Berkeley CSUA.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;We've now been doing Y Combinator long enough to have some data
about success rates.  Our first batch, in the summer of 2005, had
eight startups in it.  Of those eight, it now looks as if at least
four succeeded.  Three have been acquired: 
&lt;a href="http://reddit.com"&gt;Reddit&lt;/a&gt; was a merger of
two, Reddit and Infogami, and a third was acquired that we can't
talk about yet.  Another from that batch was 
&lt;a href="http://loopt.com"&gt;Loopt&lt;/a&gt;, which is doing
so well they could probably be acquired in about ten minutes if
they wanted to.&lt;br/&gt;&lt;br/&gt;So about half the founders from that first summer, less than two
years ago, are now rich, at least by their standards.  (One thing
you learn when you get rich is that there are many degrees of it.)&lt;br/&gt;&lt;br/&gt;I'm not ready to predict our success rate will stay as high as 50%.
That first batch could have been an anomaly.  But we should be able
to do better than the oft-quoted (and probably made
up) standard figure of 10%.  I'd feel safe aiming at 25%.&lt;br/&gt;&lt;br/&gt;Even the founders who fail don't seem to have such a bad time.  Of
those first eight startups, three are now probably dead.  In two
cases the founders just went on to do other things at the end of
the summer.   I don't think they were traumatized by the experience.
The closest to a traumatic failure was Kiko, whose founders kept
working on their startup for a whole year before being squashed by
Google Calendar.  But they ended up happy.  They sold their software
on eBay for a quarter of a million dollars.  After they paid back
their angel investors, they had about a year's salary each.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/notnot.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Then they immediately went on to start a new and much more exciting
startup, &lt;a href="http://justin.tv"&gt;Justin.TV&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;So here is an even more striking statistic: 0% of that first batch
had a terrible experience.  They had ups and downs, like every
startup, but I don't think any would have traded it for a job in a
cubicle.  And that statistic is probably not an anomaly.  Whatever
our long-term success rate ends up being, I think the rate of people
who wish they'd gotten a regular job will stay close to 0%.&lt;br/&gt;&lt;br/&gt;The big mystery to me is: why don't more people start startups?  If
nearly everyone who does it prefers it to a regular job, and a
significant percentage get rich, why doesn't everyone want to do
this?  A lot of people think we get thousands of applications for
each funding cycle.  In fact we usually only get several hundred.
Why don't more people apply?  And while it must seem to anyone
watching this world that startups are popping up like crazy, the
number is small compared to the number of people with the necessary
skills.  The great majority of programmers still go straight from
college to cubicle, and stay there.&lt;br/&gt;&lt;br/&gt;It seems like people are not acting in their own interest.  What's
going on?   Well, I can answer that.  Because of Y Combinator's
position at the very start of the venture funding process, we're
probably the world's leading experts on the psychology of people
who aren't sure if they want to start a company.&lt;br/&gt;&lt;br/&gt;There's nothing wrong with being unsure.  If you're a hacker thinking
about starting a startup and hesitating before taking the leap,
you're part of a grand tradition.  Larry and Sergey seem to have
felt the same before they started Google, and so did Jerry and Filo
before they started Yahoo.  In fact, I'd guess the most successful
startups are the ones started by uncertain hackers rather than
gung-ho business guys.&lt;br/&gt;&lt;br/&gt;We have some evidence to support this.  Several of the most successful
startups we've funded told us later that they only decided to apply
at the last moment.  Some decided only hours before the deadline.&lt;br/&gt;&lt;br/&gt;The way to deal with uncertainty is to analyze it into components.
Most people who are reluctant to do something have about eight
different reasons mixed together in their heads, and don't know
themselves which are biggest.  Some will be justified and some
bogus, but unless you know the relative proportion of each, you
don't know whether your overall uncertainty is mostly justified or
mostly bogus.&lt;br/&gt;&lt;br/&gt;So I'm going to list all the components of people's reluctance to
start startups, and explain which are real.  Then would-be founders
can use this as a checklist to examine their own feelings.&lt;br/&gt;&lt;br/&gt;I admit my goal is to increase your self-confidence.  But there are
two things different here from the usual confidence-building exercise.
One is that I'm motivated to be honest.  Most people in the
confidence-building business have already achieved their goal when
you buy the book or pay to attend the seminar where they tell you
how great you are.  Whereas if I encourage people to start startups
who shouldn't, I make my own life worse.  If I encourage too many
people to apply to Y Combinator, it just means more work for me,
because I have to read all the applications.&lt;br/&gt;&lt;br/&gt;The other thing that's going to be different is my approach.  Instead
of being positive, I'm going to be negative.  Instead of telling
you "come on, you can do it" I'm going to consider all the reasons
you aren't doing it, and show why most (but not all) should be
ignored.  We'll start with the one everyone's born with.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Too young&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of people think they're too young to start a startup.  Many
are right.  The median age worldwide is about 27, so probably a
third of the population can truthfully say they're too young.&lt;br/&gt;&lt;br/&gt;What's too young?  One of our goals with Y Combinator was to discover
the lower bound on the age of startup founders.  It always seemed
to us that investors were too conservative hereâ€”that they wanted
to fund professors, when really they should be funding grad students
or even undergrads.&lt;br/&gt;&lt;br/&gt;The main thing we've discovered from pushing the edge of this
envelope is not where the edge is, but how fuzzy it is.  The outer
limit may be as low as 16.  We don't look beyond 18 because people
younger than that can't legally enter into contracts.  But the most
successful founder we've funded so far, Sam Altman, was 19 at the
time.&lt;br/&gt;&lt;br/&gt;Sam Altman, however, is an outlying data point.  When he was 19,
he seemed like he had a 40 year old inside him.  There are other
19 year olds who are 12 inside.&lt;br/&gt;&lt;br/&gt;There's a reason we have a distinct word "adult" for people over a
certain age.  There is a threshold you cross.  It's conventionally
fixed at 21, but different people cross it at greatly varying ages.
You're old enough to start a startup if you've crossed this threshold,
whatever your age.&lt;br/&gt;&lt;br/&gt;How do you tell?  There are a couple tests adults use.  I realized
these tests existed after meeting Sam Altman, actually.  I noticed
that I felt like I was talking to someone much older.  Afterward I
wondered, what am I even measuring?  What made him seem older?&lt;br/&gt;&lt;br/&gt;One test adults use is whether you still have the kid flake reflex.
When you're a little kid and you're asked to do something hard, you
can cry and say "I can't do it" and the adults will probably let
you off.  As a kid there's a magic button you can press by saying
"I'm just a kid" that will get you out of most difficult situations.
Whereas adults, by definition, are not allowed to flake.  They still
do, of course, but when they do they're ruthlessly pruned.&lt;br/&gt;&lt;br/&gt;The other way to tell an adult is by how they react to a challenge.
Someone who's not yet an adult will tend to respond to a challenge
from an adult in a way that acknowledges their dominance.  If an
adult says "that's a stupid idea," a kid will either crawl away
with his tail between his legs, or rebel.  But rebelling presumes
inferiority as much as submission.  The adult response to
"that's a stupid idea," is simply to look the other person in the
eye and say "Really?  Why do you think so?"&lt;br/&gt;&lt;br/&gt;There are a lot of adults who still react childishly to challenges,
of course.  What you don't often find are kids who react to challenges
like adults.  When you do, you've found an adult, whatever their
age.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Too inexperienced&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I once wrote that startup founders should be at least 23, and that
people should work for another company for a few years before
starting their own.  I no longer believe that, and what changed my
mind is the example of the startups we've funded.&lt;br/&gt;&lt;br/&gt;I still think 23 is a better age than 21.  But the best way to get
experience if you're 21 is to start a startup.  So, paradoxically,
if you're too inexperienced to start a startup, what you should do
is start one.  That's a way more efficient cure for inexperience
than a normal job.  In fact, getting a normal job may actually make
you less able to start a startup, by turning you into a tame animal
who thinks he needs an office to work in and a product manager to
tell him what software to write.&lt;br/&gt;&lt;br/&gt;What really convinced me of this was the Kikos.  They started a
startup right out of college.  Their inexperience caused them to
make a lot of mistakes.  But by the time we funded their second
startup, a year later, they had become extremely formidable.  They
were certainly not tame animals.  And there is no way they'd have
grown so much if they'd spent that year working at Microsoft, or
even Google.  They'd still have been diffident junior programmers.&lt;br/&gt;&lt;br/&gt;So now I'd advise people to go ahead and start startups right out
of college.  There's no better time to take risks than when you're
young.  Sure, you'll probably fail.  But even failure will get you
to the ultimate goal faster than getting a job.&lt;br/&gt;&lt;br/&gt;It worries me a bit to be saying this, because in effect we're
advising people to educate themselves by failing at our expense,
but it's the truth.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Not determined enough&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You need a lot of determination to succeed as a startup founder.
It's probably the single best predictor of success.&lt;br/&gt;&lt;br/&gt;Some people may not be determined enough to make it.  It's
hard for me to say for sure, because I'm so determined that I can't
imagine what's going on in the heads of people who aren't.  But I
know they exist.&lt;br/&gt;&lt;br/&gt;Most hackers probably underestimate their determination.  I've seen
a lot become visibly more determined as they get used to running a 
startup.  I can think of
several we've funded who would have been delighted at first to be
bought for $2 million, but are now set on world domination.&lt;br/&gt;&lt;br/&gt;How can you tell if you're determined enough, when Larry and Sergey
themselves were unsure at first about starting a company?  I'm
guessing here, but I'd say the test is whether you're sufficiently
driven to work on your own projects.  Though they may have been
unsure whether they wanted to start a company, it doesn't seem as
if Larry and Sergey were meek little research assistants, obediently
doing their advisors' bidding.  They started projects of their own.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;4. Not smart enough&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You may need to be moderately smart to succeed as a startup founder.
But if you're worried about this, you're probably mistaken.  If
you're smart enough to worry that you might not be smart enough to
start a startup, you probably are.&lt;br/&gt;&lt;br/&gt;And in any case, starting a startup just doesn't require that much
intelligence.  Some startups do.  You have to be good at math to
write Mathematica.  But most companies do more mundane stuff where
the decisive factor is effort, not brains.  Silicon Valley can warp
your perspective on this, because there's a cult of smartness here.
People who aren't smart at least try to act that way.  But if you
think it takes a lot of intelligence to get rich, try spending a
couple days in some of the fancier bits of New York or LA.&lt;br/&gt;&lt;br/&gt;If you don't think you're smart enough to start a startup doing
something technically difficult, just write enterprise software.
Enterprise software companies aren't technology companies, they're
sales companies, and sales depends mostly on effort.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Know nothing about business&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This is another variable whose coefficient should be zero.  You
don't need to know anything about business to start a startup.  The
initial focus should be the product.  All you need to know in this
phase is how to build things people want.  If you succeed, you'll
have to think about how to make money from it.  But this is so easy
you can pick it up on the fly.&lt;br/&gt;&lt;br/&gt;I get a fair amount of flak for telling founders just to make
something great and not worry too much about making money.  And yet
all the empirical evidence points that way: pretty much 100% of
startups that make something popular manage to make money from it.
And acquirers tell me privately that revenue is not what they buy
startups for, but their strategic value.  Which means, because they
made something people want.  Acquirers know the rule holds for them
too: if users love you, you can always make money from that somehow,
and if they don't, the cleverest business model in the world won't
save you.&lt;br/&gt;&lt;br/&gt;So why do so many people argue with me?  I think one reason is that
they hate the idea that a bunch of twenty year olds could get rich
from building something cool that doesn't make any money.  They
just don't want that to be possible.  But how possible it is doesn't
depend on how much they want it to be.&lt;br/&gt;&lt;br/&gt;For a while it annoyed me to hear myself described as some kind of
irresponsible pied piper, leading impressionable young hackers down
the road to ruin.  But now I realize this kind of controversy is a
sign of a good idea.&lt;br/&gt;&lt;br/&gt;The most valuable truths are the ones most people don't believe.
They're like undervalued stocks.  If you start with them, you'll
have the whole field to yourself.  So when you find an idea you
know is good but most people disagree with, you should not
merely ignore their objections, but push aggressively in that
direction.  In this case, that means you should seek out ideas that
would be popular but seem hard to make money from.&lt;br/&gt;&lt;br/&gt;We'll bet a seed round you can't make something popular that we
can't figure out how to make money from.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. No cofounder&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Not having a cofounder is a real problem.  A startup is too much
for one person to bear.  And though we differ from other investors
on a lot of questions, we all agree on this.  All investors, without
exception, are more likely to fund you with a cofounder than without.&lt;br/&gt;&lt;br/&gt;We've funded two single founders, but in both cases we suggested
their first priority should be to find a cofounder.  Both did.  But
we'd have preferred them to have cofounders before they applied.
It's not super hard to get a cofounder for a project that's just
been funded, and we'd rather have cofounders committed enough to
sign up for something super hard.&lt;br/&gt;&lt;br/&gt;If you don't have a cofounder, what should you do?  Get one.  It's
more important than anything else.  If there's no one where you
live who wants to start a startup with you, move where there are
people who do.  If no one wants to work with you on your current
idea, switch to an idea people want to work on.&lt;br/&gt;&lt;br/&gt;If you're still in school, you're surrounded by potential cofounders.
A few years out it gets harder to find them.  Not only do you have
a smaller pool to draw from, but most already have jobs, and perhaps
even families to support.  So if you had friends in college you
used to scheme about startups with, stay in touch with them as well
as you can.  That may help keep the dream alive.&lt;br/&gt;&lt;br/&gt;It's possible you could meet a cofounder through something like a
user's group or a conference.  But I wouldn't be too optimistic.
You need to work with someone to know whether you want them as a
cofounder.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/notnot.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The real lesson to draw from this is not how to find a cofounder,
but that you should start startups when you're young and there are
lots of them around.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. No idea&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In a sense, it's not a problem if you don't have a good idea, because
most startups change their idea anyway.  In the average Y Combinator
startup, I'd guess 70% of the idea is new at the end of the
first three months.  Sometimes it's 100%.&lt;br/&gt;&lt;br/&gt;In fact, we're so sure the founders are more important than the
initial idea that we're going to try something new this funding
cycle. We're going to let people apply with no idea at all.  If you
want, you can answer the question on the application form that asks
what you're going to do with "We have no idea."  If you seem really
good we'll accept you anyway.  We're confident we can sit down with
you and cook up some promising project.&lt;br/&gt;&lt;br/&gt;Really this just codifies what we do already.  We put little weight
on the idea.  We ask mainly out of politeness.  The kind of question
on the application form that we really care about is the one where
we ask what cool things you've made.  If what you've made is version
one of a promising startup, so much the better, but the main thing
we care about is whether you're good at making things.  Being lead
developer of a popular open source project counts almost as much.&lt;br/&gt;&lt;br/&gt;That solves the problem if you get funded by Y Combinator.  What
about in the general case?  Because in another sense, it is a problem
if you don't have an idea.  If you start a startup with no idea,
what do you do next?&lt;br/&gt;&lt;br/&gt;So here's the brief recipe for getting startup ideas.  Find something
that's missing in your own life, and supply that needâ€”no matter
how specific to you it seems.  Steve Wozniak built himself a computer;
who knew so many other people would want them?  A need that's narrow
but genuine is a better starting point than one that's broad but
hypothetical.  So even if the problem is simply that you don't have
a date on Saturday night, if you can think of a way to fix that by
writing software, you're onto something, because a lot of other
people have the same problem.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8. No room for more startups&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of people look at the ever-increasing number of startups and
think "this can't continue."  Implicit in their thinking is a
fallacy: that there is some limit on the number of startups there
could be.  But this is false.  No one claims there's any limit on
the number of people who can work for salary at 1000-person companies.
Why should there be any limit on the number who can work for equity
at 5-person companies? 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/notnot.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Nearly everyone who works is satisfying some kind of need.  Breaking
up companies into smaller units doesn't make those needs go away.
Existing needs would probably get satisfied more efficiently by a
network of startups than by a few giant, hierarchical organizations,
but I don't think that would mean less opportunity, because satisfying
current needs would lead to more.  Certainly this tends to be the
case in individuals.  Nor is there anything wrong with that.  We
take for granted things that medieval kings would have considered
effeminate luxuries, like whole buildings heated to spring temperatures
year round.  And if things go well, our descendants will take for
granted things we would consider shockingly luxurious.  There is
no absolute standard for material wealth.  Health care is a component
of it, and that alone is a black hole.  For the foreseeable future,
people will want ever more material wealth, so there is no limit
to the amount of work available for companies, and for startups in
particular.&lt;br/&gt;&lt;br/&gt;Usually the limited-room fallacy is not expressed directly.  Usually
it's implicit in statements like "there are only so many startups
Google, Microsoft, and Yahoo can buy."  Maybe, though the list of
acquirers is a lot longer than that.  And whatever you think of
other acquirers, Google is not stupid.  The reason big companies
buy startups is that they've created something valuable.  And why
should there be any limit to the number of valuable startups companies
can acquire, any more than there is a limit to the amount of wealth
individual people want?  Maybe there would be practical limits on
the number of startups any one acquirer could assimilate, but if
there is value to be had, in the form of upside that founders are
willing to forgo in return for an immediate payment, acquirers will
evolve to consume it.  Markets are pretty smart that way.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. Family to support&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This one is real.  I wouldn't advise anyone with a family to start
a startup.  I'm not saying it's a bad idea, just that I don't want
to take responsibility for advising it.  I'm willing to take
responsibility for telling 22 year olds to start startups.  So what
if they fail?  They'll learn a lot, and that job at Microsoft will
still be waiting for them if they need it.  But I'm not prepared
to cross moms.&lt;br/&gt;&lt;br/&gt;What you can do, if you have a family and want to start a startup,
is start a consulting business you can then gradually turn into a
product business.  Empirically the chances of pulling that off seem
very small. You're never going to produce Google this way.  But at
least you'll never be without an income.&lt;br/&gt;&lt;br/&gt;Another way to decrease the risk is to join an existing startup
instead of starting your own.  Being one of the first employees of
a startup is a lot like being a founder, in both the good ways and
the bad.  You'll be roughly 1/n^2 founder, where n is your employee
number.&lt;br/&gt;&lt;br/&gt;As with the question of cofounders, the real lesson here is to start
startups when you're young.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;10. Independently wealthy&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This is my excuse for not starting a startup.  Startups are stressful.
Why do it if you don't need the money?  For every "serial entrepreneur,"
there are probably twenty sane ones who think "Start another
company?  Are you crazy?"&lt;br/&gt;&lt;br/&gt;I've come close to starting new startups a couple times, but I
always pull back because I don't want four years of my life to be
consumed by random schleps.  I know this business well enough to
know you can't do it half-heartedly.  What makes a good startup
founder so dangerous is his willingness to endure infinite schleps.&lt;br/&gt;&lt;br/&gt;There is a bit of a problem with retirement, though.  Like a lot
of people, I like to work.  And one of the many weird little problems
you discover when you get rich is that a lot of the interesting
people you'd like to work with are not rich.  They need to work at
something that pays the bills.  Which means if you want to have
them as colleagues, you have to work at something that pays the
bills too, even though you don't need to.  I think this is what
drives a lot of serial entrepreneurs, actually.&lt;br/&gt;&lt;br/&gt;That's why I love working on Y Combinator so much.  It's an excuse
to work on something interesting with people I like.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;11.  Not ready for commitment&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This was my reason for not starting a startup for most of my twenties.
Like a lot of people that age, I valued freedom most of all.  I was
reluctant to do anything that required a commitment of more than a
few months.  Nor would I have wanted to do anything that completely
took over my life the way a startup does.  And that's fine.  If you
want to spend your time travelling around, or playing in a band,
or whatever, that's a perfectly legitimate reason not to start a
company.&lt;br/&gt;&lt;br/&gt;If you start a startup that succeeds, it's going to consume at least
three or four years.  (If it fails, you'll be done a lot quicker.)
So you shouldn't do it if you're not ready for commitments on that
scale.  Be aware, though, that if you get a regular job, you'll
probably end up working there for as long as a startup would take,
and you'll find you have much less spare time than you might expect.
So if you're ready to clip on that ID badge and go to that orientation
session, you may also be ready to start that startup.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;12.  Need for structure&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'm told there are people who need structure in their lives.  This
seems to be a nice way of saying they need someone to tell them
what to do.  I believe such people exist.  There's plenty of empirical
evidence: armies, religious cults, and so on.  They may even be the
majority.&lt;br/&gt;&lt;br/&gt;If you're one of these people, you probably shouldn't start a
startup.  In fact, you probably shouldn't even go to work for one.
In a good startup, you don't get told what to do very much.  There
may be one person whose job title is CEO, but till the company has
about twelve people no one should be telling anyone what to do.
That's too inefficient.  Each person should just do what they need
to without anyone telling them.&lt;br/&gt;&lt;br/&gt;If that sounds like a recipe for chaos, think about a soccer team.
Eleven people manage to work together in quite complicated ways,
and yet only in occasional emergencies does anyone tell anyone else
what to do.  A reporter once asked David Beckham if there were any
language problems at Real Madrid, since the players were from about
eight different countries.  He said it was never an issue, because
everyone was so good they never had to talk.  They all just did the
right thing.&lt;br/&gt;&lt;br/&gt;How do you tell if you're independent-minded enough to start a
startup?  If you'd bristle at the suggestion that you aren't, then
you probably are.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;13. Fear of uncertainty&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Perhaps some people are deterred from starting startups because
they don't like the uncertainty.  If you go to work for Microsoft,
you can predict fairly accurately what the next few years will be
likeâ€”all too accurately, in fact.  If you start a startup, anything
might happen.&lt;br/&gt;&lt;br/&gt;Well, if you're troubled by uncertainty, I can solve that problem
for you: if you start a startup, it will probably fail.  Seriously, 
though, this is not a bad way to think
about the whole experience.  Hope for the best, but expect the
worst.  In the worst case, it will at least be interesting.  In the
best case you might get rich.&lt;br/&gt;&lt;br/&gt;No one will blame you if the startup tanks, so long as you made a
serious effort.  There may once have been a time when employers
would regard that as a mark against you, but they wouldn't now.  I
asked managers at big companies, and they all said they'd prefer
to hire someone who'd tried to start a startup and failed over
someone who'd spent the same time working at a big company.&lt;br/&gt;&lt;br/&gt;Nor will investors hold it against you, as long as you didn't fail
out of laziness or incurable stupidity.   I'm told there's a lot
of stigma attached to failing in other placesâ€”in Europe, for
example.  Not here.  In America, companies, like practically
everything else, are disposable.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;14. Don't realize what you're avoiding&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;One reason people who've been out in the world for a year or two
make better founders than people straight from college is that they
know what they're avoiding.  If their startup fails, they'll have
to get a job, and they know how much jobs suck.&lt;br/&gt;&lt;br/&gt;If you've had summer jobs in college, you may think you know what
jobs are like, but you probably don't.  Summer jobs at technology
companies are not real jobs.  If you get a summer job as a waiter,
that's a real job.  Then you have to carry your weight.  But software
companies don't hire students for the summer as a source of cheap
labor.  They do it in the hope of recruiting them when they graduate.
So while they're happy if you produce, they don't expect you to.&lt;br/&gt;&lt;br/&gt;That will change if you get a real job after you graduate.  Then
you'll have to earn your keep.  And since most of what big companies
do is boring, you're going to have to work on boring stuff.  Easy,
compared to college, but boring.  At first it may seem cool to get
paid for doing easy stuff, after paying to do hard stuff in college.
But that wears off after a few months.  Eventually it gets demoralizing
to work on dumb stuff, even if it's easy and you get paid a lot.&lt;br/&gt;&lt;br/&gt;And that's not the worst of it.  The thing that really sucks about
having a regular job is the expectation that you're supposed to be
there at certain times.  Even Google is afflicted with this,
apparently.  And what this means, as everyone who's had a regular
job can tell you, is that there are going to be times when you have
absolutely no desire to work on anything, and you're going to have
to go to work anyway and sit in front of your screen and pretend
to.  To someone who likes work, as most good hackers do, this is
torture.&lt;br/&gt;&lt;br/&gt;In a startup, you skip all that.  There's no concept of office hours
in most startups.  Work and life just get mixed together.  But the
good thing about that is that no one minds if you have a life at
work.  In a startup you can do whatever you want most of the time.
If you're a founder, what you want to do most of the time is work.
But you never have to pretend to.&lt;br/&gt;&lt;br/&gt;If you took a nap in your office in a big company, it would seem
unprofessional.  But if you're starting a startup and you fall
asleep in the middle of the day, your cofounders will just assume
you were tired.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;15. Parents want you to be a doctor&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A significant number of would-be startup founders are probably
dissuaded from doing it by their parents.  I'm not going to say you
shouldn't listen to them.  Families are entitled to their own
traditions, and who am I to argue with them?  But I will give you
a couple reasons why a safe career might not be what your parents
really want for you.&lt;br/&gt;&lt;br/&gt;One is that parents tend to be more conservative for their kids
than they would be for themselves.  This is actually a rational
response to their situation.  Parents end up sharing more of their
kids' ill fortune than good fortune.  Most parents don't mind this;
it's part of the job; but it does tend to make them excessively
conservative.  And erring on the side of conservatism is still
erring.  In almost everything, reward is proportionate to risk.  So
by protecting their kids from risk, parents are, without realizing
it, also protecting them from rewards.  If they saw that, they'd
want you to take more risks.&lt;br/&gt;&lt;br/&gt;The other reason parents may be mistaken is that, like generals,
they're always fighting the last war.  If they want you to be a
doctor, odds are it's not just because they want you to help the
sick, but also because it's a prestigious and lucrative career.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/notnot.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But not so lucrative or prestigious as it was when their
opinions were formed.  When I was a kid in the seventies, a doctor
was &lt;i&gt;the&lt;/i&gt; thing to be.  There was a sort of golden triangle involving
doctors, Mercedes 450SLs, and tennis.  All three vertices now seem
pretty dated.&lt;br/&gt;&lt;br/&gt;The parents who want you to be a doctor may simply not realize how
much things have changed.  Would they be that unhappy if you were
Steve Jobs instead?  So I think the way to deal with your parents'
opinions about what you should do is to treat them like feature
requests.  Even if your only goal is to please them, the way to do
that is not simply to give them what they ask for.  Instead think
about why they're asking for something, and see if there's a better
way to give them what they need.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;16.  A job is the default&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This leads us to the last and probably most powerful reason people
get regular jobs: it's the default thing to do.  Defaults are
enormously powerful, precisely because they operate without any
conscious choice.&lt;br/&gt;&lt;br/&gt;To almost everyone except criminals, it seems an axiom that if you
need money, you should get a job.  Actually this tradition is not
much more than a hundred years old.  Before that, the default way
to make a living was by farming.  It's a bad plan to treat something
only a hundred years old as an axiom.  By historical standards,
that's something that's changing pretty rapidly.&lt;br/&gt;&lt;br/&gt;We may be seeing another such change right now.  I've read a lot
of economic history, and I understand the startup world pretty well,
and it now seems to me fairly likely that we're seeing the beginning
of a change like the one from farming to manufacturing.&lt;br/&gt;&lt;br/&gt;And you know what?  If you'd been around when that change began
(around 1000 in Europe) it would have seemed to nearly everyone
that running off to the city to make your fortune was a crazy thing
to do.  Though serfs were in principle forbidden to leave their
manors, it can't have been that hard to run away to a city.  There
were no guards patrolling the perimeter of the village.  What
prevented most serfs from leaving was that it seemed insanely risky.
Leave one's plot of land?  Leave the people you'd spent your whole
life with, to live in a giant city of three or four thousand complete
strangers?  How would you live?  How would you get food, if you
didn't grow it?&lt;br/&gt;&lt;br/&gt;Frightening as it seemed to them, it's now the default with us to
live by our wits.  So if it seems risky to you to start a startup,
think how risky it once seemed to your ancestors to live as we do
now.  Oddly enough, the people who know this best are the very ones
trying to get you to stick to the old model.  How can Larry and
Sergey say you should come work as their employee, when they didn't
get jobs themselves?&lt;br/&gt;&lt;br/&gt;Now we look back on medieval peasants and wonder how they stood it.
How grim it must have been to till the same fields your whole life
with no hope of anything better, under the thumb of lords and priests
you had to give all your surplus to and acknowledge as your masters.
I wouldn't be surprised if one day people look back on what we
consider a normal job in the same way.  How grim it would be to
commute every day to a cubicle in some soulless office complex, and
be told what to do by someone you had to acknowledge as a bossâ€”someone 
who could call you into their office and say "take a seat,"
and you'd sit!  Imagine having to ask &lt;i&gt;permission&lt;/i&gt; to release
software to users.  Imagine being sad on Sunday afternoons because
the weekend was almost over, and tomorrow you'd have to get up and
go to work.  How did they stand it?&lt;br/&gt;&lt;br/&gt;It's exciting to think we may be on the cusp of another shift like
the one from farming to manufacturing.  That's why I care about
startups.  Startups aren't interesting just because they're a way
to make a lot of money.  I couldn't care less about other ways to
do that, like speculating in securities.  At most those are interesting
the way puzzles are.  There's more going on with startups.  They
may represent one of those rare, historic shifts in the way 
&lt;a href="https://paulgraham.com/wealth.html"&gt;wealth&lt;/a&gt; is created.&lt;br/&gt;&lt;br/&gt;That's ultimately what drives us to work on Y Combinator.  We want
to make money, if only so we don't have to stop doing it, but that's
not the main goal.  There have only been a handful of these great
economic shifts in human history.  It would be an amazing hack to
make one happen faster.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
The only people who lost were us.  The angels had convertible
debt, so they had first claim on the proceeds of the auction. Y
Combinator only got 38 cents on the dollar.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
The best kind of organization for that might be an open source
project, but those don't involve a lot of face to face meetings.
Maybe it would be worth starting one that did.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
There need to be some number of big companies to acquire the
startups, so the number of big companies couldn't decrease to zero.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Thought experiment: If doctors did the same work, but as
impoverished outcasts, which parents would still want their kids
to be doctors?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, and Robert
Morris for reading drafts of this, to the founders of Zenter
for letting me use their web-based PowerPoint killer even though 
it isn't launched yet, and to Ming-Hay Luk
of the Berkeley CSUA for inviting me to speak.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/comments?id=6668"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//notnot.html</guid>
      <pubDate>Thu, 01 Mar 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Is It Worth Being Wise?</title>
      <link>https://paulgraham.com//wisdom.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2007&lt;br/&gt;&lt;br/&gt;A few days ago I finally figured out something I've wondered about
for 25 years: the relationship between wisdom and intelligence.
Anyone can see they're not the same by the number of people who are
smart, but not very wise.  And yet intelligence and wisdom do seem
related.  How?&lt;br/&gt;&lt;br/&gt;What is wisdom?  I'd say it's knowing what to do in a lot of
situations.  I'm not trying to make a deep point here about the
true nature of wisdom, just to f&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2007&lt;br/&gt;&lt;br/&gt;A few days ago I finally figured out something I've wondered about
for 25 years: the relationship between wisdom and intelligence.
Anyone can see they're not the same by the number of people who are
smart, but not very wise.  And yet intelligence and wisdom do seem
related.  How?&lt;br/&gt;&lt;br/&gt;What is wisdom?  I'd say it's knowing what to do in a lot of
situations.  I'm not trying to make a deep point here about the
true nature of wisdom, just to figure out how we use the word.  A
wise person is someone who usually knows the right thing to do.&lt;br/&gt;&lt;br/&gt;And yet isn't being smart also knowing what to do in certain
situations?  For example, knowing what to do when the teacher tells
your elementary school class to add all the numbers from 1 to 100?
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Some say wisdom and intelligence apply to different types of
problemsâ€”wisdom to human problems and intelligence to abstract
ones.  But that isn't true.  Some wisdom has nothing to do with
people: for example, the wisdom of the engineer who knows certain
structures are less prone to failure than others.  And certainly
smart people can find clever solutions to human problems as well
as abstract ones. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Another popular explanation is that wisdom comes from experience
while intelligence is innate.  But people are not simply wise in
proportion to how much experience they have.  Other things must
contribute to wisdom besides experience, and some may be innate: a
reflective disposition, for example.&lt;br/&gt;&lt;br/&gt;Neither of the conventional explanations of the difference between
wisdom and intelligence stands up to scrutiny.  So what is the
difference?  If we look at how people use the words "wise" and
"smart," what they seem to mean is different shapes of performance.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Curve&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;"Wise" and "smart" are both ways of saying someone knows what to
do.  The difference is that "wise" means one has a high average
outcome across all situations, and "smart" means one does spectacularly
well in a few.  That is, if you had a graph in which the x axis
represented situations and the y axis the outcome, the graph of the
wise person would be high overall, and the graph of the smart person
would have high peaks.&lt;br/&gt;&lt;br/&gt;The distinction is similar to the rule that one should judge talent
at its best and character at its worst.  Except you judge intelligence
at its best, and wisdom by its average.  That's how the two are
related: they're the two different senses in which the same curve
can be high.&lt;br/&gt;&lt;br/&gt;So a wise person knows what to do in most situations, while a smart
person knows what to do in situations where few others could.  We
need to add one more qualification: we should ignore cases where
someone knows what to do because they have inside information. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But aside from that, I don't think we can get much more specific
without starting to be mistaken.&lt;br/&gt;&lt;br/&gt;Nor do we need to.  Simple as it is, this explanation predicts, or
at least accords with, both of the conventional stories about the
distinction between wisdom and intelligence.  Human problems are
the most common type, so being good at solving those is key in
achieving a high average outcome.   And it seems natural that a
high average outcome depends mostly on experience, but that dramatic
peaks can only be achieved by people with certain rare, innate
qualities; nearly anyone can learn to be a good swimmer, but to be
an Olympic swimmer you need a certain body type.&lt;br/&gt;&lt;br/&gt;This explanation also suggests why wisdom is such an elusive concept:
there's no such thing.  "Wise" means somethingâ€”that one is
on average good at making the right choice.  But giving the name
"wisdom" to the supposed quality that enables one to do that doesn't
mean such a thing exists.  To the extent "wisdom" means anything,
it refers to a grab-bag of qualities as various as self-discipline,
experience, and empathy.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Likewise, though "intelligent" means something, we're asking for
trouble if we insist on looking for a single thing called "intelligence."
And whatever its components, they're not all innate.  We use the
word "intelligent" as an indication of ability: a smart person can
grasp things few others could.  It does seem likely there's some
inborn predisposition to intelligence (and wisdom too), but this
predisposition is not itself intelligence.&lt;br/&gt;&lt;br/&gt;One reason we tend to think of intelligence as inborn is that people
trying to measure it have concentrated on the aspects of it that
are most measurable.  A quality that's inborn will obviously be
more convenient to work with than one that's influenced by experience,
and thus might vary in the course of a study.  The problem comes
when we drag the word "intelligence" over onto what they're measuring.
If they're measuring something inborn, they can't be measuring
intelligence.  Three year olds aren't smart.   When we describe one
as smart, it's shorthand for "smarter than other three year olds."&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Split&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Perhaps it's a technicality to point out that a predisposition to
intelligence is not the same as intelligence.  But it's an important
technicality, because it reminds us that we can become smarter,
just as we can become wiser.&lt;br/&gt;&lt;br/&gt;The alarming thing is that we may have to choose between the two.&lt;br/&gt;&lt;br/&gt;If wisdom and intelligence are the average and peaks of the same
curve, then they converge as the number of points on the curve
decreases.  If there's just one point, they're identical: the average
and maximum are the same.  But as the number of points increases,
wisdom and intelligence diverge.  And historically the number of
points on the curve seems to have been increasing: our ability is
tested in an ever wider range of situations.&lt;br/&gt;&lt;br/&gt;In the time of Confucius and Socrates, people seem to have regarded
wisdom, learning, and intelligence as more closely related than we
do.  Distinguishing between "wise" and "smart" is a modern habit.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f5n"&gt;&lt;font color="#777777"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
And the reason we do is that they've been diverging.  As knowledge
gets more specialized, there are more points on the curve, and the
distinction between the spikes and the average becomes sharper,
like a digital image rendered with more pixels.&lt;br/&gt;&lt;br/&gt;One consequence is that some old recipes may have become obsolete.
At the very least we have to go back and figure out if they were
really recipes for wisdom or intelligence.  But the really striking
change, as intelligence and wisdom drift apart, is that we may have
to decide which we prefer.  We may not be able to optimize for both
simultaneously.&lt;br/&gt;&lt;br/&gt;Society seems to have voted for intelligence.  We no longer admire
the sageâ€”not the way people did two thousand years ago.  Now
we admire the genius.  Because in fact the distinction we began
with has a rather brutal converse: just as you can be smart without
being very wise, you can be wise without being very smart.  That
doesn't sound especially admirable.  That gets you James Bond, who
knows what to do in a lot of situations, but has to rely on Q for
the ones involving math.&lt;br/&gt;&lt;br/&gt;Intelligence and wisdom are obviously not mutually exclusive.  In
fact, a high average may help support high peaks.  But there are
reasons to believe that at some point you have to choose between
them.  One is the example of very smart people, who are so often
unwise that in popular culture this now seems to be regarded as the
rule rather than the exception.  Perhaps the absent-minded professor
is wise in his way, or wiser than he seems, but he's not wise in
the way Confucius or Socrates wanted people to be. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f6n"&gt;&lt;font color="#777777"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;New&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;For both Confucius and Socrates, wisdom, virtue, and happiness were
necessarily related.  The wise man was someone who knew what the
right choice was and always made it; to be the right choice, it had
to be morally right; he was therefore always happy, knowing he'd
done the best he could.  I can't think of many ancient philosophers
who would have disagreed with that, so far as it goes.&lt;br/&gt;&lt;br/&gt;"The superior man is always happy; the small man sad," said Confucius.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f7n"&gt;&lt;font color="#777777"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Whereas a few years ago I read an interview with a mathematician
who said that most nights he went to bed discontented, feeling he
hadn't made enough progress.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f8n"&gt;&lt;font color="#777777"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The Chinese and Greek words we
translate as "happy" didn't mean exactly what we do by it, but
there's enough overlap that this remark contradicts them.&lt;br/&gt;&lt;br/&gt;Is the mathematician a small man because he's discontented?  No;
he's just doing a kind of work that wasn't very common in Confucius's
day.&lt;br/&gt;&lt;br/&gt;Human knowledge seems to grow fractally.  Time after time, something
that seemed a small and uninteresting areaâ€”experimental error,
evenâ€”turns out, when examined up close, to have as much in
it as all knowledge up to that point.  Several of the fractal buds
that have exploded since ancient times involve inventing and
discovering new things.  Math, for example, used to be something a
handful of people did part-time.  Now it's the career of thousands.
And in work that involves making new things, some old rules don't
apply.&lt;br/&gt;&lt;br/&gt;Recently I've spent some time advising people, and there I find the
ancient rule still works: try to understand the situation as well
as you can, give the best advice you can based on your experience,
and then don't worry about it, knowing you did all you could.  But
I don't have anything like this serenity when I'm writing an essay.
Then I'm worried.  What if I run out of ideas?  And when I'm writing,
four nights out of five I go to bed discontented, feeling I didn't
get enough done.&lt;br/&gt;&lt;br/&gt;Advising people and writing are fundamentally different types of
work.  When people come to you with a problem and you have to figure
out the right thing to do, you don't (usually) have to invent
anything.  You just weigh the alternatives and try to judge which
is the prudent choice.  But &lt;i&gt;prudence&lt;/i&gt; can't tell me what sentence
to write next.  The search space is too big.&lt;br/&gt;&lt;br/&gt;Someone like a judge or a military officer can in much of his work
be guided by duty, but duty is no guide in making things.  Makers
depend on something more precarious: inspiration.  And like most
people who lead a precarious existence, they tend to be worried,
not contented.  In that respect they're more like the small man of
Confucius's day, always one bad harvest (or ruler) away from
starvation. Except instead of being at the mercy of weather and
officials, they're at the mercy of their own imagination.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Limits&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;To me it was a relief just to realize it might be ok to be discontented.
The idea that a successful person should be happy has thousands of
years of momentum behind it.  If I was any good, why didn't I have
the easy confidence winners are supposed to have?  But that, I now
believe, is like a runner asking "If I'm such a good athlete, why
do I feel so tired?" Good runners still get tired; they just get
tired at higher speeds.&lt;br/&gt;&lt;br/&gt;People whose work is to invent or discover things are in the same
position as the runner.  There's no way for them to do the best
they can, because there's no limit to what they could do.  The
closest you can come is to compare yourself to other people.  But
the better you do, the less this matters.  An undergrad who gets
something published feels like a star.  But for someone at the top
of the field, what's the test of doing well?  Runners can at least
compare themselves to others doing exactly the same thing; if you
win an Olympic gold medal, you can be fairly content, even if you
think you could have run a bit faster.  But what is a novelist to
do?&lt;br/&gt;&lt;br/&gt;Whereas if you're doing the kind of work in which problems are
presented to you and you have to choose between several alternatives,
there's an upper bound on your performance: choosing the best every
time.  In ancient societies, nearly all work seems to have been of
this type.  The peasant had to decide whether a garment was worth
mending, and the king whether or not to invade his neighbor, but
neither was expected to invent anything.  In principle they could
have; the king could have invented firearms, then invaded his
neighbor.  But in practice innovations were so rare that they weren't
expected of you, any more than goalkeepers are expected to score
goals. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f9n"&gt;&lt;font color="#777777"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
In practice, it seemed as if there was a correct decision
in every situation, and if you made it you'd done your job perfectly,
just as a goalkeeper who prevents the other team from scoring is
considered to have played a perfect game.&lt;br/&gt;&lt;br/&gt;In this world, wisdom seemed paramount.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/wisdom.html#f10n"&gt;&lt;font color="#777777"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Even now, most people
do work in which problems are put before them and they have to
choose the best alternative.  But as knowledge has grown more
specialized, there are more and more types of work in which people
have to make up new things, and in which performance is therefore
unbounded.  Intelligence has become increasingly important relative
to wisdom because there is more room for spikes.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Recipes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Another sign we may have to choose between intelligence and wisdom
is how different their recipes are.  Wisdom seems to come largely
from curing childish qualities, and intelligence largely from
cultivating them.&lt;br/&gt;&lt;br/&gt;Recipes for wisdom, particularly ancient ones, tend to have a
remedial character.  To achieve wisdom one must cut away all the
debris that fills one's head on emergence from childhood, leaving
only the important stuff.  Both self-control and experience have
this effect: to eliminate the random biases that come from your own
nature and from the circumstances of your upbringing respectively.
That's not all wisdom is, but it's a large part of it.  Much of
what's in the sage's head is also in the head of every twelve year
old.  The difference is that in the head of the twelve year old
it's mixed together with a lot of random junk.&lt;br/&gt;&lt;br/&gt;The path to intelligence seems to be through working on hard problems.
You develop intelligence as you might develop muscles, through
exercise.  But there can't be too much compulsion here.  No amount
of discipline can replace genuine curiosity.  So cultivating
intelligence seems to be a matter of identifying some bias in one's
characterâ€”some tendency to be interested in certain types of
thingsâ€”and nurturing it.  Instead of obliterating your
idiosyncrasies in an effort to make yourself a neutral vessel for
the truth, you select one and try to grow it from a seedling into
a tree.&lt;br/&gt;&lt;br/&gt;The wise are all much alike in their wisdom, but very smart people
tend to be smart in distinctive ways.&lt;br/&gt;&lt;br/&gt;Most of our educational traditions aim at wisdom. So perhaps one
reason schools work badly is that they're trying to make intelligence
using recipes for wisdom.  Most recipes for wisdom have an element
of subjection.  At the very least, you're supposed to do what the
teacher says.  The more extreme recipes aim to break down your
individuality the way basic training does.  But that's not the route
to intelligence.  Whereas wisdom comes through humility, it may
actually help, in cultivating intelligence, to have a mistakenly
high opinion of your abilities, because that encourages you to keep
working.  Ideally till you realize how mistaken you were.&lt;br/&gt;&lt;br/&gt;(The reason it's hard to learn new skills late in life is not just
that one's brain is less malleable.  Another probably even worse
obstacle is that one has higher standards.)&lt;br/&gt;&lt;br/&gt;I realize we're on dangerous ground here.  I'm not proposing the
primary goal of education should be to increase students' "self-esteem."
That just breeds laziness.  And in any case, it doesn't really fool
the kids, not the smart ones.  They can tell at a young age that a
contest where everyone wins is a fraud.&lt;br/&gt;&lt;br/&gt;A teacher has to walk a narrow path: you want to encourage kids to
come up with things on their own, but you can't simply applaud
everything they produce.  You have to be a good audience: appreciative,
but not too easily impressed.  And that's a lot of work.  You have
to have a good enough grasp of kids' capacities at different ages
to know when to be surprised.&lt;br/&gt;&lt;br/&gt;That's the opposite of traditional recipes for education.  Traditionally
the student is the audience, not the teacher; the student's job is
not to invent, but to absorb some prescribed body of material.  (The
use of the term "recitation" for sections in some colleges is a
fossil of this.) The problem with these old traditions is that
they're too much influenced by recipes for wisdom.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Different&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I deliberately gave this essay a provocative title; of course it's
worth being wise.  But I think it's important to understand the
relationship between intelligence and wisdom, and particularly what
seems to be the growing gap between them.  That way we can avoid
applying rules and standards to intelligence that are really meant
for wisdom.  These two senses of "knowing what to do" are more
different than most people realize.  The path to wisdom is through
discipline, and the path to intelligence through carefully selected
self-indulgence.  Wisdom is universal, and intelligence idiosyncratic.
And while wisdom yields calmness, intelligence much of the time
leads to discontentment.&lt;br/&gt;&lt;br/&gt;That's particularly worth remembering.  A physicist friend recently
told me half his department was on Prozac.  Perhaps if we acknowledge
that some amount of frustration is inevitable in certain kinds
of work, we can mitigate its effects.  Perhaps we can box it up and
put it away some of the time, instead of letting it flow together
with everyday sadness to produce what seems an alarmingly large
pool.  At the very least, we can avoid being discontented about
being discontented.&lt;br/&gt;&lt;br/&gt;If you feel exhausted, it's not necessarily because there's something
wrong with you.  Maybe you're just running fast.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Gauss was supposedly asked this when he was 10.  Instead of
laboriously adding together the numbers like the other students,
he saw that they consisted of 50 pairs that each summed to 101 (100
+ 1, 99 + 2, etc), and that he could just multiply 101 by 50 to get
the answer, 5050.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
A variant is that intelligence is the ability to solve problems,
and wisdom the judgement to know how to use those solutions.   But
while this is certainly an important relationship between wisdom
and intelligence, it's not the &lt;i&gt;distinction between&lt;/i&gt; them.  Wisdom
is useful in solving problems too, and intelligence can help in
deciding what to do with the solutions.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
In judging both intelligence and wisdom we have to factor out
some knowledge. People who know the combination of a safe will be
better at opening it than people who don't, but no one would say
that was a test of intelligence or wisdom.&lt;br/&gt;&lt;br/&gt;But knowledge overlaps with wisdom and probably also intelligence.
A knowledge of human nature is certainly part of wisdom.  So where
do we draw the line?&lt;br/&gt;&lt;br/&gt;Perhaps the solution is to discount knowledge that at some point
has a sharp drop in utility.  For example, understanding French
will help you in a large number of situations, but its value drops
sharply as soon as no one else involved knows French.  Whereas the
value of understanding vanity would decline more gradually.&lt;br/&gt;&lt;br/&gt;The knowledge whose utility drops sharply is the kind that has
little relation to other knowledge.  This includes mere conventions,
like languages and safe combinations, and also what we'd call
"random" facts, like movie stars' birthdays, or how to distinguish
1956 from 1957 Studebakers.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
People seeking some single thing called "wisdom" have been
fooled by grammar.  Wisdom is just knowing the right thing to do,
and there are a hundred and one different qualities that help in
that.  Some, like selflessness, might come from meditating in an
empty room, and others, like a knowledge of human nature, might
come from going to drunken parties.&lt;br/&gt;&lt;br/&gt;Perhaps realizing this will help dispel the cloud of semi-sacred
mystery that surrounds wisdom in so many people's eyes.  The mystery
comes mostly from looking for something that doesn't exist.  And
the reason there have historically been so many different schools
of thought about how to achieve wisdom is that they've focused on
different components of it.&lt;br/&gt;&lt;br/&gt;When I use the word "wisdom" in this essay, I mean no more than
whatever collection of qualities helps people make the right choice
in a wide variety of situations.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Even in English, our sense of the word "intelligence" is
surprisingly recent.  Predecessors like "understanding" seem to
have had a broader meaning.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
There is of course some uncertainty about how closely the remarks
attributed to Confucius and Socrates resemble their actual opinions.
I'm using these names as we use the name "Homer," to mean the
hypothetical people who said the things attributed to them.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
&lt;i&gt;Analects&lt;/i&gt; VII:36, Fung trans.&lt;br/&gt;&lt;br/&gt;Some translators use "calm" instead of "happy."  One source of
difficulty here is that present-day English speakers have a different
idea of happiness from many older societies.  Every language probably
has a word meaning "how one feels when things are going well," but
different cultures react differently when things go well.  We react
like children, with smiles and laughter.  But in a more reserved
society, or in one where life was tougher, the reaction might be a
quiet contentment.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
It may have been Andrew Wiles, but I'm not sure.  If anyone
remembers such an interview, I'd appreciate hearing from you.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Confucius claimed proudly that he had never invented
anythingâ€”that he had simply passed on an accurate account of
ancient traditions.  [&lt;i&gt;Analects&lt;/i&gt; VII:1] It's hard for us now to
appreciate how important a duty it must have been in preliterate
societies to remember and pass on the group's accumulated knowledge.
Even in Confucius's time it still seems to have been the first duty
of the scholar.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
The bias toward wisdom in ancient philosophy may be exaggerated
by the fact that, in both Greece and China, many of the first
philosophers (including Confucius and Plato) saw themselves as
teachers of administrators, and so thought disproportionately about
such matters.  The few people who did invent things, like storytellers,
must have seemed an outlying data point that could be ignored.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Sarah Harlin, Jessica Livingston,
and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//wisdom.html</guid>
      <pubDate>Thu, 01 Feb 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Learning from Founders</title>
      <link>https://paulgraham.com//foundersatwork.html</link>
      <description>&lt;font face="verdana" size="2"&gt;January 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(Foreword to Jessica Livingston's 
&lt;a href="http://www.amazon.com/gp/product/1590597141"&gt;Founders at Work&lt;/a&gt;.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;Apparently sprinters reach their highest speed right out of the
blocks, and spend the rest of the race slowing down.  The winners
slow down the least.  It's that way with most startups too.  The
earliest phase is usually the most productive.  That's when they
have the really big ideas.  Imagine what Apple was like when&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;January 2007&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(Foreword to Jessica Livingston's 
&lt;a href="http://www.amazon.com/gp/product/1590597141"&gt;Founders at Work&lt;/a&gt;.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;Apparently sprinters reach their highest speed right out of the
blocks, and spend the rest of the race slowing down.  The winners
slow down the least.  It's that way with most startups too.  The
earliest phase is usually the most productive.  That's when they
have the really big ideas.  Imagine what Apple was like when 100%
of its employees were either Steve Jobs or Steve Wozniak.&lt;br/&gt;&lt;br/&gt;The striking thing about this phase is that it's completely different
from most people's idea of what business is like.  If you looked
in people's heads (or stock photo collections) for images representing
"business," you'd get images of people dressed up in suits, groups
sitting around conference tables looking serious, Powerpoint
presentations, people producing thick reports for one another to
read.   Early stage startups are the exact opposite of this.  And
yet they're probably the most productive part of the whole economy.&lt;br/&gt;&lt;br/&gt;Why the disconnect?  I think there's a general principle at work
here: the less energy people expend on performance, the more they
expend on appearances to compensate.  More often than not the energy
they expend on seeming impressive makes their actual performance
worse.  A few years ago I read an article in which a car magazine
modified the "sports" model of some production car to get the fastest
possible standing quarter mile.  You know how they did it?  They
cut off all the crap the manufacturer had bolted onto the car to
make it &lt;i&gt;look&lt;/i&gt; fast.&lt;br/&gt;&lt;br/&gt;Business is broken the same way that car was.  The effort that goes
into looking productive is not merely wasted, but actually makes
organizations less productive.  Suits, for example.  Suits do not
help people to think better.  I bet most executives at big companies
do their best thinking when they wake up on Sunday morning and go
downstairs in their bathrobe to make a cup of coffee.  That's when
you have ideas.  Just imagine what a company would be like if people
could think that well at work.  People do in startups, at least
some of the time.  (Half the time you're in a panic because your
servers are on fire, but the other half you're thinking as deeply
as most people only get to sitting alone on a Sunday morning.)&lt;br/&gt;&lt;br/&gt;Ditto for most of the other differences between startups and what
passes for productivity in big companies.  And yet conventional
ideas of professionalism have such an iron grip on our minds that
even startup founders are affected by them.  In our startup, when
outsiders came to visit we tried hard to seem "professional." We'd
clean up our offices, wear better clothes, try to arrange that a
lot of people were there during conventional office hours.  In fact,
programming didn't get done by well-dressed people at clean desks
during office hours.  It got done by badly dressed people (I was
notorious for programmming wearing just a towel) in offices strewn
with junk at 2 in the morning.  But no visitor would understand
that.  Not even investors, who are supposed to be able to recognize
real productivity when they see it.  Even we were affected by the
conventional wisdom.  We thought of ourselves as impostors, succeeding
despite being totally unprofessional.  It was as if we'd created a
Formula 1 car but felt sheepish because it didn't look like a car
was supposed to look.&lt;br/&gt;&lt;br/&gt;In the car world, there are at least some people who know that a
high performance car looks like a Formula 1 racecar, not a sedan
with giant rims and a fake spoiler bolted to the trunk.  Why not
in business?  Probably because startups are so small.  The really
dramatic growth happens when a startup only has three or four people,
so only three or four people see that, whereas tens of thousands
see business as it's practiced by Boeing or Philip Morris.&lt;br/&gt;&lt;br/&gt;This book can help fix that problem, by showing everyone what, till
now, only a handful people got to see: what happens in the first
year of a startup.  This is what real productivity looks like. This
is the Formula 1 racecar.  It looks weird, but it goes fast.&lt;br/&gt;&lt;br/&gt;Of course, big companies won't be able to do everything these
startups do.  In big companies there's always going to be more
politics, and less scope for individual decisions.  But seeing what
startups are really like will at least show other organizations
what to aim for.  The time may soon be coming when instead of
startups trying to seem more corporate, corporations will try to
seem more like startups.  That would be a good thing.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;a href="http://www.aoky.net/articles/paul_graham/foundersatwork.htm"&gt;Japanese
Translation&lt;/a&gt;
&lt;br/&gt;&lt;br/&gt;&lt;hr color="#cccccc" height="50"/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//foundersatwork.html</guid>
      <pubDate>Mon, 01 Jan 2007 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How Art Can Be Good</title>
      <link>https://paulgraham.com//goodart.html</link>
      <description>&lt;font face="verdana" size="2"&gt;December 2006&lt;br/&gt;&lt;br/&gt;I grew up believing that taste is just a matter of personal preference.
Each person has things they like, but no one's preferences are any
better than anyone else's.  There is no such thing as &lt;i&gt;good&lt;/i&gt; taste.&lt;br/&gt;&lt;br/&gt;Like a lot of things I grew up believing, this turns out to be
false, and I'm going to try to explain why.&lt;br/&gt;&lt;br/&gt;One problem with saying there's no such thing as good taste is that
it also means there's no such thing as goo&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;December 2006&lt;br/&gt;&lt;br/&gt;I grew up believing that taste is just a matter of personal preference.
Each person has things they like, but no one's preferences are any
better than anyone else's.  There is no such thing as &lt;i&gt;good&lt;/i&gt; taste.&lt;br/&gt;&lt;br/&gt;Like a lot of things I grew up believing, this turns out to be
false, and I'm going to try to explain why.&lt;br/&gt;&lt;br/&gt;One problem with saying there's no such thing as good taste is that
it also means there's no such thing as good art.  If there were
good art, then people who liked it would have better taste than
people who didn't.  So if you discard taste, you also have to discard
the idea of art being good, and artists being good at making it.&lt;br/&gt;&lt;br/&gt;It was pulling on that thread that unravelled my childhood faith
in relativism.  When you're trying to make things, taste becomes a
practical matter.  You have to decide what to do next.  Would it
make the painting better if I changed that part?  If there's no
such thing as better, it doesn't matter what you do.  In fact, it
doesn't matter if you paint at all.  You could just go out and buy
a ready-made blank canvas.  If there's no such thing as good, that
would be just as great an achievement as the ceiling of the Sistine
Chapel.  Less laborious, certainly, but if you can achieve the same
level of performance with less effort, surely that's more impressive,
not less.&lt;br/&gt;&lt;br/&gt;Yet that doesn't seem quite right, does it?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Audience&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I think the key to this puzzle is to remember that art has an
audience.  Art has a purpose, which is to interest its audience.
Good art (like good anything) is art that achieves its purpose
particularly well.  The meaning of "interest" can vary.  Some works
of art are meant to shock, and others to please; some are meant to
jump out at you, and others to sit quietly in the background. But
all art has to work on an audience, andâ€”here's the critical 
pointâ€”members of the audience share things in common.&lt;br/&gt;&lt;br/&gt;For example, nearly all humans find human faces engaging.  It seems
to be wired into us.  Babies can recognize faces practically from
birth.  In fact, faces seem to have co-evolved with our interest
in them; the face is the body's billboard.  So all other things
being equal, a painting with faces in it will interest people more
than one without. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One reason it's easy to believe that taste is merely personal
preference is that, if it isn't, how do you pick out the people
with better taste?  There are billions of people, each with their
own opinion; on what grounds can you prefer one to another?
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But if audiences have a lot in common, you're not in a position of
having to choose one out of a random set of individual biases,
because the set isn't random.  All humans find faces 
engagingâ€”practically by definition: face recognition is 
in our DNA.  And so
having a notion of good art, in the sense of art that does its job
well, doesn't require you to pick out a few individuals and label
their opinions as correct.  No matter who you pick, they'll find
faces engaging.&lt;br/&gt;&lt;br/&gt;Of course, space aliens probably wouldn't find human faces engaging.
But there might be other things they shared in common with us.  The
most likely source of examples is math.  I expect space aliens would
agree with us most of the time about which of two proofs was better.
Erdos thought so.  He called a maximally elegant proof one out of
God's book, and presumably God's book is universal.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Once you start talking about audiences, you don't have to argue
simply that there are or aren't standards of taste.  Instead tastes
are a series of concentric rings, like ripples in a pond.  There
are some things that will appeal to you and your friends, others
that will appeal to most people your age, others that will appeal
to most humans, and perhaps others that would appeal to most sentient
beings (whatever that means).&lt;br/&gt;&lt;br/&gt;The picture is slightly more complicated than that, because in the
middle of the pond there are overlapping sets of ripples.  For
example, there might be things that appealed particularly to men,
or to people from a certain culture.&lt;br/&gt;&lt;br/&gt;If good art is art that interests its audience, then when you talk
about art being good, you also have to say for what audience.  So
is it meaningless to talk about art simply being good or bad?  No,
because one audience is the set of all possible humans.  I think
that's the audience people are implicitly talking about when they
say a work of art is good: they mean it would engage any human.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;And that is a meaningful test, because although, like any everyday
concept, "human" is fuzzy around the edges, there are a lot of
things practically all humans have in common.  In addition to our
interest in faces, there's something special about primary colors
for nearly all of us, because it's an artifact of the way our eyes
work.  Most humans will also find images of 3D objects engaging,
because that also seems to be built into our visual perception.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f5n"&gt;&lt;font color="#777777"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
And beneath that there's edge-finding, which makes images
with definite shapes more engaging than mere blur.&lt;br/&gt;&lt;br/&gt;Humans have a lot more in common than this, of course.  My goal is
not to compile a complete list, just to show that there's some solid
ground here.  People's preferences aren't random.  So an artist
working on a painting and trying to decide whether to change some
part of it doesn't have to think "Why bother?  I might as well flip
a coin." Instead he can ask "What would make the painting more
interesting to people?"  And the reason you can't equal Michelangelo
by going out and buying a blank canvas is that the ceiling of the
Sistine Chapel is more interesting to people.&lt;br/&gt;&lt;br/&gt;A lot of philosophers have had a hard time believing it was possible
for there to be objective standards for art. It seemed obvious that
beauty, for example, was something that happened in the head of the observer,
not something that was a property of objects.  It was thus 
"subjective" rather than "objective."  But in fact if you narrow the
definition of beauty to something that works a certain way on
humans, and you observe how much humans have in common, it turns out
to be a property of objects after all.   You don't
have to choose between something being a property of the   
subject or the object if subjects all react similarly.
Being good art is thus a property of objects as much as, say, being
toxic to humans is: it's good art if it consistently affects humans 
in a certain way.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Error&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So could we figure out what the best art is by taking a vote?  After
all, if appealing to humans is the test, we should be able to just
ask them, right?&lt;br/&gt;&lt;br/&gt;Well, not quite.  For products of nature that might work.  I'd be
willing to eat the apple the world's population had voted most
delicious, and I'd probably be willing to visit the beach they voted
most beautiful, but having to look at the painting they voted the
best would be a crapshoot.&lt;br/&gt;&lt;br/&gt;Man-made stuff is different.  For one thing, artists, unlike apple
trees, often deliberately try to trick us.  Some tricks are quite
subtle.  For example, any work of art sets expectations by its level
of finish.  You don't expect photographic accuracy in something
that looks like a quick sketch.  So one widely used trick, especially
among illustrators, is to intentionally make a painting or drawing
look like it was done faster than it was.  The average person looks
at it and thinks: how amazingly skillful.  It's like saying something
clever in a conversation as if you'd thought of it on the spur of
the moment, when in fact you'd worked it out the day before.&lt;br/&gt;&lt;br/&gt;Another much less subtle influence is brand.  If you go to see the
Mona Lisa, you'll probably be disappointed, because it's hidden
behind a thick glass wall and surrounded by a frenzied crowd taking
pictures of themselves in front of it.  At best you can see it the
way you see a friend across the room at a crowded party.  The Louvre
might as well replace it with copy; no one would be able to tell.
And yet the Mona Lisa is a small, dark painting.  If you found
people who'd never seen an image of it and sent them to a museum
in which it was hanging among other paintings with a tag labelling
it as a portrait by an unknown fifteenth century artist, most would
walk by without giving it a second look.&lt;br/&gt;&lt;br/&gt;For the average person, brand dominates all other factors in the
judgement of art.  Seeing a painting they recognize from reproductions
is so overwhelming that their response to it as a painting is drowned
out.&lt;br/&gt;&lt;br/&gt;And then of course there are the tricks people play on themselves.
Most adults looking at art worry that if they don't like what they're
supposed to, they'll be thought uncultured.  This doesn't just
affect what they claim to like; they actually make themselves like
things they're supposed to.&lt;br/&gt;&lt;br/&gt;That's why you can't just take a vote.  Though appeal to people is
a meaningful test, in practice you can't measure it, just as you
can't find north using a compass with a magnet sitting next to it.
There are sources of error so powerful that if you take a vote, all
you're measuring is the error.&lt;br/&gt;&lt;br/&gt;We can, however, approach our goal from another direction, by using
ourselves as guinea pigs.  You're human.  If you want to know what
the basic human reaction to a piece of art would be, you can at
least approach that by getting rid of the sources of error in your
own judgements.&lt;br/&gt;&lt;br/&gt;For example, while anyone's reaction to a famous painting will be
warped at first by its fame, there are ways to decrease its effects.
One is to come back to the painting over and over.  After a few
days the fame wears off, and you can start to see it as a painting.
Another is to stand close.  A painting familiar from reproductions
looks more familiar from ten feet away; close in you see details
that get lost in reproductions, and which you're therefore seeing
for the first time.&lt;br/&gt;&lt;br/&gt;There are two main kinds of error that get in the way of seeing a
work of art: biases you bring from your own circumstances, and
tricks played by the artist.  Tricks are straightforward to correct
for. Merely being aware of them usually prevents them from working.
For example, when I was ten I used to be very impressed by airbrushed
lettering that looked like shiny metal.  But once you study how
it's done, you see that it's a pretty cheesy trickâ€”one of the
sort that relies on pushing a few visual buttons really hard to
temporarily overwhelm the viewer.  It's like trying to convince
someone by shouting at them.&lt;br/&gt;&lt;br/&gt;The way not to be vulnerable to tricks is to explicitly seek out
and catalog them.  When you notice a whiff of dishonesty coming
from some kind of art, stop and figure out what's going on.  When
someone is obviously pandering to an audience that's easily fooled,
whether it's someone making shiny stuff to impress ten year olds,
or someone making conspicuously avant-garde stuff to impress would-be
intellectuals, learn how they do it.  Once you've seen enough
examples of specific types of tricks, you start to become a connoisseur
of trickery in general, just as professional magicians are.&lt;br/&gt;&lt;br/&gt;What counts as a trick?  Roughly, it's something done with contempt
for the audience.  For example, the guys designing Ferraris in the
1950s were probably designing cars that they themselves admired.
Whereas I suspect over at General Motors the marketing people are
telling the designers, "Most people who buy SUVs do it to seem
manly, not to drive off-road. So don't worry about the suspension;
just make that sucker as big and tough-looking as you can." 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f6n"&gt;&lt;font color="#777777"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I think with some effort you can make yourself nearly immune to
tricks.  It's harder to escape the influence of your own circumstances,
but you can at least move in that direction.  The way to do it is
to travel widely, in both time and space.  If you go and see all
the different kinds of things people like in other cultures, and
learn about all the different things people have liked in the past,
you'll probably find it changes what you like.  I doubt you could
ever make yourself into a completely universal person, if only
because you can only travel in one direction in time.  But if you
find a work of art that would appeal equally to your friends, to
people in Nepal, and to the ancient Greeks, you're probably onto
something.&lt;br/&gt;&lt;br/&gt;My main point here is not how to have good taste, but that there
can even be such a thing.  And I think I've shown that.  There is
such a thing as good art. It's art that interests its human audience,
and since humans have a lot in common, what interests them is not
random.  Since there's such a thing as good art, there's
also such a thing as good taste, which is the ability to recognize
it.&lt;br/&gt;&lt;br/&gt;If we were talking about the taste of apples, I'd agree that taste
is just personal preference.  Some people like certain kinds of
apples and others like other kinds, but how can you say that one
is right and the other wrong? 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f7n"&gt;&lt;font color="#777777"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The thing is, art isn't apples.  Art is man-made. It comes with a
lot of cultural baggage, and in addition the people who make it
often try to trick us.  Most people's judgement of art is dominated
by these extraneous factors; they're like someone trying to judge
the taste of apples in a dish made of equal parts apples and jalapeno
peppers.  All they're tasting is the peppers.  So it turns out you
can pick out some people and say that they have better taste than
others: they're the ones who actually taste art like apples.&lt;br/&gt;&lt;br/&gt;Or to put it more prosaically, they're the people who (a) are hard
to trick, and (b) don't just like whatever they grew up with.  If
you could find people who'd eliminated all such influences on their
judgement, you'd probably still see variation in what they liked.
But because humans have so much in common, you'd also find they
agreed on a lot.  They'd nearly all prefer the ceiling of the Sistine
Chapel to a blank canvas.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Making It&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I wrote this essay because I was tired of hearing "taste is subjective"
and wanted to kill it once and for all. Anyone who makes things
knows intuitively that's not true.  When you're trying to make art,
the temptation to be lazy is as great as in any other kind of work.
Of course it matters to do a good job.  And yet you can see how
great a hold "taste is subjective" has even in the art world by how
nervous it makes people to talk about art being good or bad.  Those
whose jobs require them to judge art, like curators, mostly resort
to euphemisms like "significant" or "important" or (getting dangerously
close) "realized." 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f8n"&gt;&lt;font color="#777777"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I don't have any illusions that being able to talk about art being
good or bad will cause the people who talk about it to have anything
more useful to say.  Indeed, one of the reasons "taste is subjective"
found such a receptive audience is that, historically, the things
people have said about good taste have generally been such nonsense.&lt;br/&gt;&lt;br/&gt;It's not for the people who talk about art that I want to free the
idea of good art, but for those who 
&lt;a href="https://paulgraham.com/taste.html"&gt;make&lt;/a&gt; it.  Right now, ambitious
kids going to art school run smack into a brick wall.  They arrive
hoping one day to be as good as the famous artists they've seen in
books, and the first thing they learn is that the concept of good
has been retired.  Instead everyone is just supposed to explore
their own personal vision. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f9n"&gt;&lt;font color="#777777"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;When I was in art school, we were looking one day at a slide of
some great fifteenth century painting, and one of the students asked
"Why don't artists paint like that now?" The room suddenly got
quiet.  Though rarely asked out loud, this question lurks uncomfortably
in the back of every art student's mind.  It was as if someone had
brought up the topic of lung cancer in a meeting within Philip
Morris.&lt;br/&gt;&lt;br/&gt;"Well," the professor replied, "we're interested in different
questions now."  He was a pretty nice guy, but at the time I couldn't
help wishing I could send him back to fifteenth century Florence
to explain in person to Leonardo &amp;amp; Co. how we had moved beyond their
early, limited concept of art.  Just imagine that conversation.&lt;br/&gt;&lt;br/&gt;In fact, one of the reasons artists in fifteenth century Florence made
such great things was that they believed you could make great things.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/goodart.html#f10n"&gt;&lt;font color="#777777"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
They were intensely competitive and were always trying to outdo
one another, like mathematicians or physicists todayâ€”maybe like
anyone who has ever done anything really well.&lt;br/&gt;&lt;br/&gt;The idea that you could make great things was not just a useful
illusion.  They were actually right.  So the most important consequence
of realizing there can be good art is that it frees artists to try
to make it.  To the ambitious kids arriving at art school this year
hoping one day to make great things, I say: don't believe it when
they tell you this is a naive and outdated ambition.  There is such
a thing as good art, and if you try to make it, there are people
who will notice.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
This is not to say, of course, that good paintings must
have faces in them, just that everyone's visual piano has that key
on it.  There are situations in which you want to avoid faces,
precisely because they attract so much attention.  But you can see
how universally faces work by their prevalence in
advertising.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
The other reason it's easy to believe is that it makes people
feel good.  To a kid, this idea is crack.  In every other respect
they're constantly being told that they have a lot to learn.  But
in this they're perfect.  Their opinion carries the same weight as
any adult's.  You should probably question anything you believed
as a kid that you'd want to believe this much.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
It's conceivable that the elegance of proofs is quantifiable,
in the sense that there may be some formal measure that turns out
to coincide with mathematicians' judgements.  Perhaps it would be
worth trying to make a formal language for proofs in which those
considered more elegant consistently came out shorter (perhaps after
being macroexpanded or compiled).&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Maybe it would be possible to make art that would appeal to
space aliens, but I'm not going to get into that because (a) it's
too hard to answer, and (b) I'm satisfied if I can establish that
good art is a meaningful idea for human audiences.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
If early abstract paintings seem more interesting than later
ones, it may be because the first abstract painters were trained
to paint from life, and their hands thus tended to make the kind
of gestures you use in representing physical things.  In effect
they were saying "scaramara" instead of "uebfgbsb."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
It's a bit more complicated, because sometimes artists
unconsciously use tricks by imitating art that does.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
I phrased this in terms of the taste of apples because if
people can see the apples, they can be fooled.  When I was a kid
most apples were a variety called Red Delicious that had been bred
to look appealing in stores, but which didn't taste very good.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
To be fair, curators are in a difficult position.  If they're
dealing with recent art, they have to include things in shows that
they think are bad.  That's because the test for what gets included
in shows is basically the market price, and for recent art that is
largely determined by successful businessmen and their wives.  So
it's not always intellectual dishonesty that makes curators and
dealers use neutral-sounding language.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
What happens in practice is that everyone gets really good at
&lt;i&gt;talking&lt;/i&gt; about art.  As the art itself gets more random, the effort
that would have gone into the work goes instead into the intellectual
sounding theory behind it.  "My work represents an exploration of
gender and sexuality in an urban context," etc.  Different people
win at that game.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
There were several other reasons, including that Florence was
then the richest and most sophisticated city in the world, and that
they lived in a time before photography had (a) killed portraiture
as a source of income and (b) made brand the dominant factor in the
sale of art.&lt;br/&gt;&lt;br/&gt;Incidentally, I'm not saying that good art = fifteenth century
European art.  I'm not saying we should make what they made, but
that we should work like they worked.  There are fields now in which
many people work with the same energy and honesty that fifteenth
century artists did, but art is not one of them.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, and Robert Morris 
for reading drafts of this, and to Paul Watson for permission to 
use the image at the top.&lt;br/&gt;&lt;br/&gt;&lt;!-- &lt;a href="http://reddit.com"&gt;&lt;img src="https://sep.turbifycdn.com/ty/cdn/paulgraham/redditino.png?t=1688221954&amp;" border=0&gt;&lt;/a&gt;
&lt;a href="http://reddit.com/info/ufsk/comments"&gt;
Comment&lt;/a&gt; on this essay. --&gt;&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//goodart.html</guid>
      <pubDate>Fri, 01 Dec 2006 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Student's Guide to Startups</title>
      <link>https://paulgraham.com//mit.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2006&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at MIT.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;Till rece&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2006&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at MIT.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;Till recently graduating seniors had two choices: get a job or go
to grad school.  I think there will increasingly be a third option:
to start your own startup.  But how common will that be?&lt;br/&gt;&lt;br/&gt;I'm sure the default will always be to get a job, but starting a
startup could well become as popular as grad school.  In the late
90s my professor friends used to complain that they couldn't get
grad students, because all the undergrads were going to work for
startups.  I wouldn't be surprised if that situation returns, but
with one difference: this time they'll be starting their own
instead of going to work for other people's.&lt;br/&gt;&lt;br/&gt;The most ambitious students will at this point be asking: Why wait
till you graduate?  Why not start a startup while you're in college?
In fact, why go to college at all?  Why not start a startup instead?&lt;br/&gt;&lt;br/&gt;A year and a half ago I gave a &lt;a href="https://paulgraham.com/hiring.html"&gt;talk&lt;/a&gt; 
where I said that the average age of the founders of
Yahoo, Google, and Microsoft was 24, and that if grad students could
start startups, why not undergrads?  I'm glad I phrased that as a
question, because now I can pretend it wasn't merely a rhetorical
one.  At the time I couldn't imagine why there should be any lower
limit for the age of startup founders.  Graduation is a bureaucratic
change, not a biological one.  And certainly there are undergrads
as competent technically as most grad students.  So why shouldn't
undergrads be able to start startups as well as grad students?&lt;br/&gt;&lt;br/&gt;I now realize that something does change at graduation: you lose a
huge excuse for failing.  Regardless of how complex your life is,
you'll find that everyone else, including your family and friends,
will discard all the low bits and regard you as having a single
occupation at any given time.  If you're in college and have a
summer job writing software, you still read as a student.  Whereas
if you graduate and get a job programming, you'll be instantly
regarded by everyone as a programmer.&lt;br/&gt;&lt;br/&gt;The problem with starting a startup while you're still in school
is that there's a built-in escape hatch.  If you start a startup
in the summer between your junior and senior year, it reads to
everyone as a summer job.
So if it goes nowhere, big deal; you return to school in the
fall with all the other seniors; no one regards you as a failure,
because your occupation is student, and you didn't fail at that.
Whereas if you start a startup just one year later, after you
graduate, as long as you're not accepted to grad school in the fall
the startup reads to everyone as your occupation.  You're
now a startup founder, so you have to do well at that.&lt;br/&gt;&lt;br/&gt;For nearly everyone, the opinion of one's peers is the most powerful
motivator of allâ€”more powerful even than the nominal goal of most
startup founders, getting rich.  
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/mit.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
About a month into each funding
cycle we have an event called Prototype Day where each startup
presents to the others what they've got so far.  You might think
they wouldn't need any more motivation.  They're working on their
cool new idea; they have funding for the immediate future; and
they're playing a game with only two outcomes: wealth or failure.
You'd think that would be motivation enough.  And yet the prospect
of a demo pushes most of them into a
rush of activity.&lt;br/&gt;&lt;br/&gt;Even if you start a startup explicitly to get rich, the money you
might get seems pretty theoretical most of the time.  What drives
you day to day is not wanting to look bad.&lt;br/&gt;&lt;br/&gt;You probably can't change that.  Even if you could, I don't think
you'd want to; someone who really, truly doesn't care what his peers
think of him is probably a psychopath.  So the best you can do is
consider this force like a wind, and set up your boat accordingly.
If you know your peers are going to push you in some direction,
choose good peers, and position yourself so they push you in a
direction you like.&lt;br/&gt;&lt;br/&gt;Graduation changes the prevailing winds, and those make a difference.
Starting a startup is so hard
that it's a close call even for the ones that succeed.  However
high a startup may be flying now, it probably has a few leaves stuck
in the landing gear from those trees it barely cleared at the end
of the runway.  In such a close game, the smallest increase in the
forces against you can be enough to flick you over the edge into
failure.&lt;br/&gt;&lt;br/&gt;When we first started &lt;a href="http://ycombinator.com"&gt;Y Combinator&lt;/a&gt; 
we encouraged people to start
startups while they were still in college.  That's partly because
Y Combinator began as a kind of summer program.  We've kept the
program shapeâ€”all of us having dinner together once a week turns
out to be a good ideaâ€”but we've decided now
that the party line should be to tell people to wait till they
graduate.&lt;br/&gt;&lt;br/&gt;Does that mean you can't start a startup in college?  Not at all.
Sam Altman, the co-founder of &lt;a href="http://loopt.com"&gt;Loopt&lt;/a&gt;,
had just finished his sophomore year when we funded them, and Loopt
is probably the most promising of all the startups we've funded so
far.  But Sam Altman is a very unusual guy.  Within about three
minutes of meeting him, I remember thinking "Ah, so this is what
Bill Gates must have been like when he was 19."&lt;br/&gt;&lt;br/&gt;If it can work to start a startup during college, why do
we tell people not to?  For the same reason that the probably
apocryphal violinist, whenever he was asked to judge someone's
playing, would always say they didn't have enough talent to make
it as a pro.  Succeeding as a musician takes determination as well
as talent, so this answer works out to be the right advice for
everyone.  The ones who are uncertain believe it and give up, and
the ones who are sufficiently determined think "screw that, I'll
succeed anyway."&lt;br/&gt;&lt;br/&gt;So our official policy now is only to fund undergrads we can't talk
out of it.  And frankly, if you're not certain, you &lt;i&gt;should&lt;/i&gt; wait.
It's not as if all the opportunities to start companies are going
to be gone if you don't do it now.  Maybe the window will close on
some idea you're working on, but that won't be the last idea you'll
have.  For every idea that times out, new ones become feasible.
Historically the opportunities to start startups have only increased
with time.&lt;br/&gt;&lt;br/&gt;In that case, you might ask, why not wait longer?  Why not go work
for a while, or go to grad school, and then start a startup?  And
indeed, that might be a good idea.  If I had to pick the sweet spot
for startup founders, based on who we're most excited to see
applications from, I'd say it's probably the mid-twenties.  Why?
What advantages does someone in their mid-twenties have over someone
who's 21?  And why isn't it older?  What can 25 year olds do that
32 year olds can't?  Those turn out to be questions worth examining.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Plus&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If you start a startup soon after college, you'll be a young founder
by present standards, so you should know what the relative advantages
of young founders are.  They're not what you might think.  As a
young founder your strengths are: stamina, poverty, rootlessness,
colleagues, and ignorance.&lt;br/&gt;&lt;br/&gt;The importance of stamina shouldn't be surprising.  If you've heard
anything about startups you've probably heard about the long hours.
As far as I can tell these are universal.  I can't think of any
successful startups whose founders worked 9 to 5.  And it's
particularly necessary for younger founders to work long hours
because they're probably not as efficient as they'll be later.&lt;br/&gt;&lt;br/&gt;Your second advantage, poverty, might not sound like an advantage,
but it is a huge one.  Poverty implies you can live cheaply,
and this is critically important for startups.  Nearly every startup
that fails, fails by running out of money.  It's a little misleading
to put it this way, because there's usually some other underlying
cause.  But regardless of the source of your problems, a low burn
rate gives you more opportunity to recover from them.  And since
most startups make all kinds of mistakes at first, room to recover
from mistakes is a valuable thing to have.&lt;br/&gt;&lt;br/&gt;Most startups end up doing something different than they planned.
The way the successful ones find something that works is by trying
things that don't.  So the worst thing you can do in a startup is
to have a rigid, pre-ordained plan and then start spending a lot
of money to implement it.  Better to operate cheaply and give your
ideas time to evolve.&lt;br/&gt;&lt;br/&gt;Recent grads can live on practically nothing, and this gives you
an edge over older founders, because the main cost in software
startups is people.  The guys with kids and mortgages are at a
real disadvantage.  This is one reason I'd bet on the 25 year old
over the 32 year old.  The 32 year old probably is a better programmer,
but probably also has a much more expensive life.  Whereas a 25
year old has some work experience (more on that later) but can live
as cheaply as an undergrad.&lt;br/&gt;&lt;br/&gt;Robert Morris and I were 29 and 30 respectively when we started
Viaweb, but fortunately we still lived like 23 year olds.  We both had
roughly zero assets.  I would have loved to have a mortgage,
since that would have meant I had a &lt;i&gt;house&lt;/i&gt;.  But in retrospect
having nothing turned out to be convenient. I wasn't tied down and
I was used to living cheaply.&lt;br/&gt;&lt;br/&gt;Even more important than living cheaply, though, is thinking cheaply.
One reason the Apple II was so popular was that it was cheap.  The
computer itself was cheap, and it used cheap, off-the-shelf peripherals
like a cassette tape recorder for data storage and a TV as a monitor.
And you know why?  Because Woz designed this computer for himself,
and he couldn't afford anything more.&lt;br/&gt;&lt;br/&gt;We benefitted from the same phenomenon.  Our prices were
daringly low for the time.  The top level of service was
$300 a month, which was an order of magnitude below the norm.  In
retrospect this was a smart move, but we didn't do it because we
were smart.  $300 a month seemed like a lot of money to us.  Like
Apple, we created something inexpensive, and therefore popular,
simply because we were poor.&lt;br/&gt;&lt;br/&gt;A lot of startups have that form: someone comes along and makes
something for a tenth or a hundredth of what it used to cost, and
the existing players can't follow because they don't even want to
think about a world in which that's possible.  Traditional long
distance carriers, for example, didn't even want to think about
VoIP.  (It was coming, all the same.)  Being poor helps in this
game, because your own personal bias points in the same direction
technology evolves in.&lt;br/&gt;&lt;br/&gt;The advantages of rootlessness are similar to those of poverty.
When you're young you're more mobileâ€”not just because you don't
have a house or much stuff, but also because you're less likely to
have serious relationships.  This turns out to be important, because
a lot of startups involve someone moving.&lt;br/&gt;&lt;br/&gt;The founders of Kiko, for example, are now en route to the Bay Area
to start their next startup.  It's a better place for what they
want to do.  And it was easy for them to decide to go, because
neither as far as I know has a serious girlfriend, and everything
they own will fit in one carâ€”or more precisely, will either fit
in one car or is crappy enough that they don't mind leaving it
behind.&lt;br/&gt;&lt;br/&gt;They at least were in Boston.  What if they'd been in Nebraska,
like Evan Williams was at their age?   Someone wrote recently that
the drawback of Y Combinator was that you had to move to participate.
It couldn't be any other way. The kind of conversations we have
with founders, we have to have in person.  We fund a dozen startups
at a time, and we can't be in a dozen places at once.  But even if
we could somehow magically save people from moving, we wouldn't.
We wouldn't be doing founders a favor by letting them stay in
Nebraska.  Places that aren't 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;startup hubs&lt;/a&gt; are toxic to startups.
You can tell that from indirect evidence.  You can tell how hard
it must be to start a startup in Houston or Chicago or Miami from
the microscopically small number, per capita, that succeed 
there.  I don't know exactly what's suppressing all the startups in these
townsâ€”probably a hundred subtle little thingsâ€”but something
must be.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/mit.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Maybe this will change.  Maybe the increasing cheapness of startups
will mean they'll be able to survive anywhere, instead of only in
the most hospitable environments.  Maybe 37signals is the pattern
for the future.  But maybe not.  Historically there have always
been certain towns that were centers for certain industries, and
if you weren't in one of them you were at a disadvantage.  So my
guess is that 37signals is an anomaly.  We're looking at a pattern
much older than "Web 2.0" here.&lt;br/&gt;&lt;br/&gt;Perhaps the reason more startups per capita happen in the Bay Area
than Miami is simply that there are more founder-type people there.
Successful startups are almost never started by one person.  Usually
they begin with a conversation in which someone mentions that
something would be a good idea for a company, and his friend says,
"Yeah, that is a good idea, let's try it."  If you're missing that
second person who says "let's try it," the startup never happens.
And that is another area where undergrads have an edge.  They're
surrounded by people willing to say that.  At a good college you're
concentrated together with a lot of other ambitious and technically
minded peopleâ€”probably more concentrated than you'll ever be
again.  If your nucleus spits out a neutron, there's a good chance
it will hit another nucleus.&lt;br/&gt;&lt;br/&gt;The number one question people ask us at Y Combinator is: Where can
I find a co-founder?  That's the biggest problem for someone starting
a startup at 30.  When they were in school they knew a lot of good
co-founders, but by 30 they've either lost touch with them or these
people are tied down by jobs they don't want to leave.&lt;br/&gt;&lt;br/&gt;Viaweb was an anomaly in this respect too.  Though we were comparatively
old, we weren't tied down by impressive jobs.  I was trying to be
an artist, which is not very constraining, and Robert, though 29,
was still in grad school due to a little interruption in his academic
career back in 1988.  So arguably the Worm made Viaweb possible.
Otherwise Robert would have been a junior professor at that age,
and he wouldn't have had time to work on crazy speculative projects
with me.&lt;br/&gt;&lt;br/&gt;Most of the questions people ask Y Combinator we have some kind of
answer for, but not the co-founder question.  There is no good
answer.  Co-founders really should be people you already know.  And
by far the best place to meet them is school. You have a large
sample of smart people; you get to compare how they all perform on
identical tasks; and everyone's life is pretty fluid.  A lot of
startups grow out of schools for this reason.  Google, Yahoo, and
Microsoft, among others, were all founded by people who met in
school.  (In Microsoft's case, it was high school.)&lt;br/&gt;&lt;br/&gt;Many students feel they should wait and get a little more experience
before they start a company.  All other things being equal, they
should.  But all other things are not quite as equal as they look.
Most students don't realize how rich they are in the scarcest
ingredient in startups, co-founders.  If you wait too long, you may
find that your friends are now involved in some project they don't
want to abandon.  The better they are, the more likely this is to
happen.&lt;br/&gt;&lt;br/&gt;One way to mitigate this problem might be to actively plan your
startup while you're getting those n years of experience.  Sure,
go off and get jobs or go to grad school or whatever, but get
together regularly to scheme, so the idea of starting a startup
stays alive in everyone's brain.  I don't know if this works, but
it can't hurt to try.&lt;br/&gt;&lt;br/&gt;It would be helpful just to realize what an advantage you have as
students.  Some of your classmates are probably going to be successful
startup founders; at a great technical university, that is a near
certainty.  So which ones?  If I were you I'd look for the people
who are not just smart, but incurable 
&lt;a href="http://my-computer.cruftlabs.com:8080/photos/motorcouch/0067.html"&gt;builders&lt;/a&gt;.  &lt;!-- It seems like the
best founders are the people who can't stop making things.  So l--&gt;
Look
for the people who keep starting projects, and finish at least some
of them.  That's what we look for.  Above all else, above academic
credentials and even the idea you apply with, we look for people
who build things.&lt;br/&gt;&lt;br/&gt;The other place co-founders meet is at work.  Fewer do than at
school, but there are things you can do to improve the odds.  The
most important, obviously, is to work somewhere that has a lot of
smart, young people.  Another is to work for a company located in
a startup hub.  It will be easier to talk a co-worker into quitting
with you in a place where startups are happening all around you.&lt;br/&gt;&lt;br/&gt;You might also want to look at the employment agreement you sign
when you get hired.  Most will say that any ideas you think of while
you're employed by the company belong to them.  In practice it's
hard for anyone to prove what ideas you had when, so the line gets
drawn at code.  If you're going to start a startup, don't write any
of the code while you're still employed.  Or at least discard any
code you wrote while still employed and start over.  It's not so
much that your employer will find out and sue you.  It won't come
to that; investors or acquirers or (if you're so lucky) underwriters
will nail you first.  Between t = 0 and when you buy that yacht,
&lt;i&gt;someone&lt;/i&gt; is going to ask if any of your code legally belongs
to anyone else, and you need to be able to say no.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/mit.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The most overreaching employee agreement I've seen so far is Amazon's.
In addition to the usual clauses about owning your ideas, you also
can't be a founder of a startup that has another founder who worked
at Amazonâ€”even if you didn't know them or even work there at the
same time. I suspect they'd have a hard time enforcing this, but
it's a bad sign they even try.  There are plenty of other places
to work; you may as well choose one that keeps more of your options
open.&lt;br/&gt;&lt;br/&gt;Speaking of cool places to work, there is of course Google.  But I
notice something slightly frightening about Google: zero startups
come out of there.  In that respect it's a black hole.  People seem
to like working at Google too much to leave.  So if you hope to start
a startup one day, the evidence so far suggests you shouldn't work
there.&lt;br/&gt;&lt;br/&gt;I realize this seems odd advice.  If they make your life so good
that you don't want to leave, why not work there?  Because, in
effect, you're probably getting a local maximum.  You need a certain
activation energy to start a startup.  So an employer who's fairly
pleasant to work for can lull you into staying indefinitely, even
if it would be a net win for you to leave.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/mit.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The best place to work, if you want to start a startup, is probably
a startup.  In addition to being the right sort of experience, one
way or another it will be over quickly.  You'll either end up rich,
in which case problem solved, or the startup will get bought, in
which case it it will start to suck to work there and it will be
easy to leave, or most likely, the thing will blow up and you'll
be free again.&lt;br/&gt;&lt;br/&gt;Your final advantage, ignorance, may not sound very useful.  I
deliberately used a controversial word for it; you might equally
call it innocence.  But it seems to be a powerful force.  My Y
Combinator co-founder Jessica Livingston is just about to publish
a book of &lt;a href="http://www.amazon.com/gp/product/1590597141"&gt;interviews&lt;/a&gt;
with startup founders, and I noticed a remarkable pattern in them.
One after another said that if they'd known how hard it would be,
they would have been too intimidated to start.&lt;br/&gt;&lt;br/&gt;Ignorance can be useful when it's a counterweight to other forms
of stupidity.  It's useful in starting startups because you're
capable of more than you realize.  Starting startups is harder than
you expect, but you're also capable of more than you expect, so
they balance out.&lt;br/&gt;&lt;br/&gt;Most people look at a company like Apple and think, how could I
ever make such a thing?  Apple is an institution, and I'm just a
person.  But every institution was at one point just a handful of
people in a room deciding to start something.  Institutions are
made up, and made up by people no different from you.&lt;br/&gt;&lt;br/&gt;I'm not saying everyone could start a startup.  I'm sure most people
couldn't; I don't know much about the population at large.  When
you get to groups I know well, like hackers, I can say more precisely.
At the top schools, I'd guess as many as a quarter of the CS majors
could make it as startup founders if they wanted.&lt;br/&gt;&lt;br/&gt;That "if they wanted" is an important qualificationâ€”so important
that it's almost cheating to append it like thatâ€”because once you
get over a certain threshold of intelligence, which most CS majors
at top schools are past, the deciding factor in whether you succeed
as a founder is how much you want to.  You don't have to be that
smart.  If you're not a genius, just start a startup in some unsexy
field where you'll have less competition, like software for human
resources departments.  I picked that example at random, but I feel
safe in predicting that whatever they have now, it wouldn't take
genius to do better.   There are a lot of people out there working
on boring stuff who are desperately in need of better software, so
however short you think you fall of Larry and Sergey, you can ratchet
down the coolness of the idea far enough to compensate.&lt;br/&gt;&lt;br/&gt;As well as preventing you from being intimidated, ignorance can
sometimes help you discover new ideas.  &lt;a href="http://foundersatwork.com/stevewozniak.html"&gt;Steve Wozniak&lt;/a&gt;
put this very strongly:
&lt;blockquote&gt;
  All the best things that I did at Apple came from (a) not having
  money and (b) not having done it before, ever. Every single thing
  that we came out with that was really great, I'd never once done
  that thing in my life.
&lt;/blockquote&gt;
When you know nothing, you have to reinvent stuff for yourself, and
if you're smart your reinventions may be better than what preceded
them.  This is especially true in fields where the rules change.
All our ideas about software were developed in a time when processors
were slow, and memories and disks were tiny.  Who knows what obsolete
assumptions are embedded in the conventional wisdom?  And the way
these assumptions are going to get fixed is not by explicitly
deallocating them, but by something more akin to garbage collection.
Someone ignorant but smart will come along and reinvent everything,
and in the process simply fail to reproduce certain existing ideas.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Minus&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So much for the advantages of young founders.  What about the
disadvantages? I'm going to start with what goes wrong and try to
trace it back to the root causes.&lt;br/&gt;&lt;br/&gt;What goes wrong with young founders is that they build stuff that
looks like class projects.  It was only recently that we figured
this out ourselves.  We noticed a lot of similarities between the
startups that seemed to be falling behind, but we couldn't figure
out how to put it into words.  Then finally we realized what it
was: they were building class projects.&lt;br/&gt;&lt;br/&gt;But what does that really mean?  What's wrong with class projects?
What's the difference between a class project and a real startup?
If we could answer that question it would be useful not just to
would-be startup founders but to students in general, because we'd
be a long way toward explaining the mystery of the so-called real
world.&lt;br/&gt;&lt;br/&gt;There seem to be two big things missing in class projects: (1) an
iterative definition of a real problem and (2) intensity.&lt;br/&gt;&lt;br/&gt;The first is probably unavoidable.  Class projects will inevitably
solve fake problems.  For one thing, real problems are rare and
valuable.  If a professor wanted to have students solve real problems,
he'd face the same paradox as someone trying to give an example of
whatever "paradigm" might succeed the Standard Model of physics.
There may well be something that does, but if you could think of
an example you'd be entitled to the Nobel Prize.  Similarly, good
new problems are not to be had for the asking.&lt;br/&gt;&lt;br/&gt;In technology the difficulty is compounded by the fact that real
startups tend to discover the problem they're solving by a process
of evolution.  Someone has an idea for something; they build it;
and in doing so (and probably only by doing so) they realize
the problem they should be solving is another one.  Even if the
professor let you change your project description on the fly, there
isn't time enough to do that in a college class, or a market to
supply evolutionary pressures.  So class
projects are mostly about implementation, which is the least
of your problems in a startup.&lt;br/&gt;&lt;br/&gt;It's not just that in a startup you work on the idea as well as
implementation.  The very implementation is different.  Its main
purpose is to refine the idea.  Often the only value of most of the
stuff you build in the first six months is that it proves your
initial idea was mistaken.  And that's extremely valuable.  If
you're free of a misconception that everyone else still shares,
you're in a powerful position.  But you're not thinking that way
about a class project.  Proving your initial plan was mistaken would
just get you a bad grade.  Instead of building stuff to throw away,
you tend to want every line of code to go toward that final goal
of showing you did a lot of work.&lt;br/&gt;&lt;br/&gt;That leads to our second difference: the way class projects are
measured.  Professors will tend to judge you by the distance between
the starting point and where you are now.  If someone has achieved
a lot, they should get a good grade.  But customers will judge you
from the other direction: the distance remaining between where you
are now and the features they need.  The market doesn't give a shit
how hard you worked.  Users just want your software to do what they
need, and you get a zero otherwise.  That is one of the most
distinctive differences between school and the real world: there
is no reward for putting in a good effort.  In fact, the whole
concept of a "good effort" is a fake idea adults invented to encourage
kids.  It is not found in nature.&lt;br/&gt;&lt;br/&gt;Such lies seem to be helpful to kids.  But unfortunately when you
graduate they don't give you a list of all the lies they told you
during your education.  You have to get them beaten out of you by
contact with the real world.  And this is why so many jobs want
work experience.  I couldn't understand that when I was in college.
I knew how to program.  In fact, I could tell I knew how to program
better than most people doing it for a living.  So what was this
mysterious "work experience" and why did I need it?&lt;br/&gt;&lt;br/&gt;Now I know what it is, and part of the confusion is grammatical.
Describing it as "work experience" implies it's like experience
operating a certain kind of machine, or using a certain programming
language.  But really what work experience refers to is not some
specific expertise, but the elimination of certain habits left over
from childhood.&lt;br/&gt;&lt;br/&gt;One of the defining qualities of kids is that they flake.  When
you're a kid and you face some hard test, you can cry and say "I
can't" and they won't make you do it.  Of course, no one can make
you do anything in the grownup world either.  What they do instead
is fire you.  And when motivated by that
you find you can do a lot more than you realized.  So one of the
things employers expect from someone with "work experience" is the
elimination of the flake reflexâ€”the ability to get things done,
with no excuses.&lt;br/&gt;&lt;br/&gt;The other thing you get from work experience is an understanding
of what work is, and in particular, how intrinsically horrible it
is.  Fundamentally the equation is a brutal one: you have to spend
most of your waking hours doing stuff someone else wants, or starve.
There are a few places where the work is so interesting that this
is concealed, because what other people want done happens to coincide
with what you want to work on.  But you only have to imagine what
would happen if they diverged to see the underlying reality.&lt;br/&gt;&lt;br/&gt;It's not so much that adults lie to kids about this as never explain
it.  They never explain what the deal is with money.  You know from
an early age that you'll have some sort of job, because everyone
asks what you're going to "be" when you grow up. What they
don't tell you is that as a kid you're sitting on the shoulders of
someone else who's treading water, and that starting working means
you get thrown into the water on your own, and have to start treading
water yourself or sink.  "Being" something is incidental; the
immediate problem is not to drown.&lt;br/&gt;&lt;br/&gt;The relationship between work and money tends to dawn on you only
gradually.  At least it did for me.  One's first thought tends to
be simply "This sucks.  I'm in debt. Plus I have to get up on monday
and go to work."  Gradually you realize that these two things are
as tightly connected as only a market can make them.&lt;br/&gt;&lt;br/&gt;So the most important advantage 24 year old founders have over 20
year old founders is that they know what they're trying to avoid.
To the average undergrad the idea of getting rich translates into
buying Ferraris, or being admired.  To someone who has learned from
experience about the relationship between money and work, it
translates to something way more important: it means you get to opt
out of the brutal equation that governs the lives of 99.9% of people.
Getting rich means you can stop treading water.&lt;br/&gt;&lt;br/&gt;Someone who gets this will work much harder at making a startup
succeedâ€”with the proverbial energy of a drowning man, in fact.
But understanding the relationship between money and work also
changes the way you work.  You don't get money just for working,
but for doing things other people want.  Someone who's figured that
out will automatically focus more on the user.  And that cures the
other half of the class-project syndrome.  After you've been working
for a while, you yourself tend to measure what you've done the same
way the market does.&lt;br/&gt;&lt;br/&gt;Of course, you don't have to spend years working to learn this
stuff.  If you're sufficiently perceptive you can grasp these things
while you're still in school.  Sam Altman did.  He must have, because
Loopt is no class project.  And as his example suggests, this can
be valuable knowledge.  At a minimum, if you get this stuff, you
already have most of what you gain from the "work experience"
employers consider so desirable.  But of course if you really get
it, you can use this information in a way that's more valuable to
you than that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Now&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So suppose you think you might start a startup at some point, either
when you graduate or a few years after.  What should you do now?
For both jobs and grad school, there are ways to prepare while
you're in college.  If you want to get a job when you graduate, you
should get summer jobs at places you'd like to work.  If you want
to go to grad school, it will help to work on research projects as
an undergrad.  What's the equivalent for startups?  How do you keep
your options maximally open?&lt;br/&gt;&lt;br/&gt;One thing you can do while you're still in school is to learn how
startups work.  Unfortunately that's not easy.  Few if any colleges
have classes about startups.  There may be business school classes
on entrepreneurship, as they call it over there, but these are
likely to be a waste of time.  Business schools like to talk about
startups, but philosophically they're at the opposite end of the
spectrum.  Most books on startups also seem to be useless.  I've
looked at a few and none get it right.  Books in most fields are
written by people who know the subject from experience, but for
startups there's a unique problem:  by definition the founders of
successful startups don't need to write books to make money. As a
result most books on the subject end up being written by people who
don't understand it.&lt;br/&gt;&lt;br/&gt;So I'd be skeptical of classes and books.  The way to learn about
startups is by watching them in action, preferably by working at
one.  How do you do that as an undergrad?  Probably by sneaking in
through the back door. Just hang around a lot and gradually start
doing things for them.  Most startups are (or should be) very
cautious about hiring.  Every hire increases the burn rate, and bad
hires early on are hard to recover from.  However, startups usually
have a fairly informal atmosphere, and there's always a lot that
needs to be done.  If you just start doing stuff for them, many
will be too busy to shoo you away.  You can thus gradually work
your way into their confidence, and maybe turn it into an official
job later, or not, whichever you prefer.  This won't work for all
startups, but it would work for most I've known.&lt;br/&gt;&lt;br/&gt;Number two, make the most of the great advantage of school: the
wealth of co-founders.  Look at the people around you and ask
yourself which you'd like to work with.  When you apply that test,
you may find you get surprising results.  You may find you'd prefer
the quiet guy you've mostly ignored to someone who seems impressive
but has an attitude to match.  I'm not suggesting you suck up to
people you don't really like because you think one day they'll be
successful.  Exactly the opposite, in fact: you should only start
a startup with someone you like, because a startup will put your
friendship through a stress test.  I'm just saying you should think
about who you really admire and hang out with them, instead of
whoever circumstances throw you together with.&lt;br/&gt;&lt;br/&gt;Another thing you can do is learn skills that will be useful to you
in a startup.  These may be different from the skills you'd learn
to get a job.  For example, thinking about getting a job will make
you want to learn programming languages you think employers want,
like Java and C++.  Whereas if you start a startup, you get to pick
the language, so you have to think about which will actually let
you get the most done.  If you use that test you might end up
learning Ruby or Python instead.&lt;br/&gt;&lt;br/&gt;&lt;!--More generally, you'll find that you have to start thinking about
being good instead of looking good.  That could be a liberating
idea for college students, most of whom, especially at the top
schools, have spent so long jumping through artificial hoops that
it has started to affect even the way they judge themselves.
Instead of focusing on getting good grades, for example, you'll
tend to focus on actually learning stuff.  In a startup your boss
is the customer, and they don't care what grades you got.  All they
care about is whether you can build stuff that works.
--&gt;
But the most important skill for a startup founder isn't a programming
technique.  It's a knack for understanding users and figuring out
how to give them what they want.  I know I repeat this, but that's
because it's so important.  And it's a skill you can learn, though
perhaps habit might be a better word.  Get into the habit of thinking
of software as having users.  What do those users want?  What would
make them say wow?&lt;br/&gt;&lt;br/&gt;This is particularly valuable for undergrads, because the concept
of users is missing from most college programming classes.  The way
you get taught programming in college would be like teaching writing
as grammar, without mentioning that its purpose is to communicate
something to an audience.  Fortunately an audience for software is
now only an http request away.  So in addition to the programming
you do for your classes, why not build some kind of website people
will find useful?  At the very least it will teach you how to write
software with users.  In the best case, it might not just be
preparation for a startup, but the startup itself, like it was for
Yahoo and Google.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Even the desire to protect one's children seems weaker, judging
from things people have historically done to their kids
rather than risk their community's disapproval.  (I assume we still
do things that will be regarded in the future as barbaric, but
historical abuses are easier for us to see.)&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Worrying that Y Combinator makes founders move for 3 months
also suggests one underestimates how hard it is to start a startup.
You're going to have to put up with much greater inconveniences than
that.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Most employee agreements
say that any idea relating to the company's present or potential
future business belongs to them.  Often as not the second clause could
include any possible startup, and anyone doing due diligence for an 
investor or acquirer will assume the worst.&lt;br/&gt;&lt;br/&gt;To be safe either (a) don't use code written while you
were still employed in your previous job, or (b) get your employer to
renounce, in writing, any claim to the code you write for your side   
project.  Many will consent to (b) rather than
lose a prized employee.  The downside is that you'll have to tell them
exactly what your project does.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Geshke and Warnock only founded Adobe because Xerox ignored
them.  If Xerox had used what they built, they would probably 
never have left PARC.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Jessica Livingston and Robert Morris for reading
drafts of this, and to Jeff Arnold and the SIPB for inviting me to
speak.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://reddit.com"&gt;&lt;img border="0" src="https://sep.turbifycdn.com/ty/cdn/paulgraham/redditino.png?t=1688221954&amp;amp;"/&gt;&lt;/a&gt;
&lt;a href="http://reddit.com/info/l1xb/comments"&gt;
Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//mit.html</guid>
      <pubDate>Sun, 01 Oct 2006 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The 18 Mistakes That Kill Startups</title>
      <link>https://paulgraham.com//startupmistakes.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2006&lt;br/&gt;&lt;br/&gt;In the Q &amp;amp; A period after a recent talk, someone asked what made
&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2006&lt;br/&gt;&lt;br/&gt;In the Q &amp;amp; A period after a recent talk, someone asked what made
startups fail.  After standing there gaping for a few seconds I
realized this was kind of a trick question.  It's equivalent to
asking how to make a startup succeed â€” if you avoid every cause of
failure, you succeed â€” and that's too big a question to answer on
the fly.&lt;br&gt;&lt;br/&gt;Afterwards I realized it could be helpful to look at the problem
from this direction.  If you have a list of all the things you
shouldn't do, you can turn that into a recipe for succeeding just
by negating.  And this form of list may be more useful in practice.
It's easier to catch yourself doing something you shouldn't than
always to remember to do something you should.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f1n"&gt;&lt;font color="#777777"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In a sense there's just one mistake that kills startups: not making
something users want.  If you make something users want, you'll
probably be fine, whatever else you do or don't do.  And if you
don't make something users want, then you're dead, whatever else
you do or don't do.  So really this is a list of 18 things that
cause startups not to make something users want.  Nearly all failure
funnels through that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Single Founder&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Have you ever noticed how few successful startups were founded by
just one person?  Even companies you think of as having one founder,
like Oracle, usually turn out to have more.  It seems unlikely this
is a coincidence.&lt;br/&gt;&lt;br/&gt;What's wrong with having one founder?  To start with, it's a vote
of no confidence.  It probably means the founder couldn't talk any
of his friends into starting the company with him.  That's pretty
alarming, because his friends are the ones who know him best.&lt;br/&gt;&lt;br/&gt;But even if the founder's friends were all wrong and the company
is a good bet, he's still at a disadvantage.  Starting a startup
is too hard for one person.  Even if you could do all the work
yourself, you need colleagues to brainstorm with, to talk you out
of stupid decisions, and to cheer you up when things go wrong.&lt;br/&gt;&lt;br/&gt;The last one might be the most important.  The low points in a
startup are so low that few could bear them alone.  When you have
multiple founders, esprit de corps binds them together in a way
that seems to violate conservation laws.  Each thinks "I can't let
my friends down."  This is one of the most powerful forces in human
nature, and it's missing when there's just one founder.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Bad Location&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Startups prosper in some places and not others.  Silicon Valley
dominates, then Boston, then Seattle, Austin, Denver, and New York.  After
that there's not much.  Even in New York the number of startups per
capita is probably a 20th of what it is in Silicon Valley.  In towns
like Houston and Chicago and Detroit it's too small to measure.&lt;br/&gt;&lt;br/&gt;Why is the falloff so sharp?  Probably for the same reason it is
in other industries.  What's the sixth largest fashion center in
the US?  The sixth largest center for oil, or finance, or publishing?
Whatever they are they're probably so far from the top that it would
be misleading even to call them centers.&lt;br/&gt;&lt;br/&gt;It's an interesting question why cities 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;become&lt;/a&gt; startup hubs, but
the reason startups prosper in them is probably the same as it is
for any industry: that's where the experts are.  Standards are
higher; people are more sympathetic to what you're doing; the kind
of people you want to hire want to live there; supporting industries
are there; the people you run into in chance meetings are in the
same business.  Who knows exactly how these factors combine to boost
startups in Silicon Valley and squish them in Detroit, but it's
clear they do from the number of startups per capita in each.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Marginal Niche&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Most of the groups that apply to Y Combinator suffer from a common
problem: choosing a small, obscure niche in the hope of avoiding
competition.&lt;br/&gt;&lt;br/&gt;If you watch little kids playing sports, you notice that below a
certain age they're afraid of the ball.  When the ball comes near
them their instinct is to avoid it.  I didn't make a lot of catches
as an eight year old outfielder, because whenever a fly ball came
my way, I used to close my eyes and hold my glove up more for
protection than in the hope of catching it.&lt;br/&gt;&lt;br/&gt;Choosing a marginal project is the startup equivalent of my eight
year old strategy for dealing with fly balls.  If you make anything
good, you're going to have competitors, so you may as well face
that.  You can only avoid competition by avoiding good ideas.&lt;br/&gt;&lt;br/&gt;I think this shrinking from big problems is mostly unconscious.
It's not that people think of grand ideas but decide to pursue
smaller ones because they seem safer.  Your unconscious won't even
let you think of grand ideas.  So the solution may be to think about
ideas without involving yourself.  What would be a great idea for
&lt;i&gt;someone else&lt;/i&gt; to do as a startup?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Derivative Idea&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Many of the applications we get are imitations of some existing
company.  That's one source of ideas, but not the best.  If you
look at the origins of successful startups, few were started in
imitation of some other startup.  Where did they get their ideas?
Usually from some specific, unsolved problem the founders identified.&lt;br/&gt;&lt;br/&gt;Our startup made software for making online stores.  When we started
it, there wasn't any; the few sites you could order from were
hand-made at great expense by web consultants.  We knew that if
online shopping ever took off, these sites would have to be generated
by software, so we wrote some.  Pretty straightforward.&lt;br/&gt;&lt;br/&gt;It seems like the best problems to solve are ones that affect you
personally.  Apple happened because Steve Wozniak wanted a computer,
Google because Larry and Sergey couldn't find stuff online, Hotmail
because Sabeer Bhatia and Jack Smith couldn't exchange email at
work.&lt;br/&gt;&lt;br/&gt;So instead of copying the Facebook, with some variation that the
Facebook rightly ignored, look for ideas from the other direction.
Instead of starting from companies and working back to the problems
they solved, look for problems and imagine the company that might
solve them. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f2n"&gt;&lt;font color="#777777"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
What do people complain about?  What do you wish there was?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Obstinacy&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In some fields the way to succeed is to have a vision of what you
want to achieve, and to hold true to it no matter what setbacks you
encounter.  Starting startups is not one of them.  The stick-to-your-vision
approach works for something like winning an Olympic gold medal,
where the problem is well-defined.  Startups are more like science,
where you need to follow the trail wherever it leads.&lt;br/&gt;&lt;br/&gt;So don't get too attached to your original plan, because it's
probably wrong.  Most successful startups end up doing something
different than they originally intended â€” often so different that
it doesn't even seem like the same company.  You have to be prepared
to see the better idea when it arrives.  And the hardest part of
that is often discarding your old idea.&lt;br/&gt;&lt;br/&gt;But openness to new ideas has to be tuned just right.  Switching
to a new idea every week will be equally fatal.  Is there some kind
of external test you can use?  One is to ask whether the ideas
represent some kind of progression.  If in each new idea you're
able to re-use most of what you built for the previous ones, then
you're probably in a process that converges.  Whereas if you keep
restarting from scratch, that's a bad sign.&lt;br/&gt;&lt;br/&gt;Fortunately there's someone you can ask for advice: your users.  If
you're thinking about turning in some new direction and your users
seem excited about it, it's probably a good bet.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. Hiring Bad Programmers&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I forgot to include this in the early versions of the list,
because nearly all the founders I know are programmers.  This is
not a serious problem for them.  They might accidentally hire someone
bad, but it's not going to kill the company.  In a pinch they can
do whatever's required themselves.&lt;br/&gt;&lt;br/&gt;But when I think about what killed most of the startups in the
e-commerce business back in the 90s, it was bad programmers.  A lot
of those companies were started by business guys who thought the
way startups worked was that you had some clever idea and then hired
programmers to implement it.  That's actually much harder than it
sounds â€” almost impossibly hard in fact â€” because business guys
can't tell which are the good programmers.  They don't even get a
shot at the best ones, because no one really good wants a job
implementing the vision of a business guy.&lt;br/&gt;&lt;br/&gt;In practice what happens is that the business guys choose people
they think are good programmers (it says here on his resume that
he's a Microsoft Certified Developer) but who aren't.  Then they're
mystified to find that their startup lumbers along like a World War
II bomber while their competitors scream past like jet fighters.
This kind of startup is in the same position as a big company,
but without the advantages.&lt;br/&gt;&lt;br/&gt;So how do you pick good programmers if you're not a programmer?  I
don't think there's an answer.  I was about to say you'd have to
find a good programmer to help you hire people.  But if you can't
recognize good programmers, how would you even do that?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. Choosing the Wrong Platform&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A related problem (since it tends to be done by bad programmers)
is choosing the wrong platform.  For example, I think a lot of
startups during the Bubble killed themselves by deciding to build
server-based applications on Windows.  Hotmail was still running
on FreeBSD for years after Microsoft bought it, presumably because
Windows couldn't handle the load.  If Hotmail's founders
had chosen to use Windows, they would have been swamped.&lt;br/&gt;&lt;br/&gt;PayPal only just dodged this bullet.  After they merged with X.com,
the new CEO wanted to switch to Windows â€” even after PayPal cofounder
Max Levchin showed that their software scaled only 1% as well on
Windows as Unix.  Fortunately for PayPal they switched CEOs instead.&lt;br/&gt;&lt;br/&gt;Platform is a vague word.  It could mean an operating system, or a
programming language, or a "framework" built on top of a programming
language.  It implies something that both supports and limits, like
the foundation of a house.&lt;br/&gt;&lt;br/&gt;The scary thing about platforms is that there are always some that
seem to outsiders to be fine, responsible choices and yet, like
Windows in the 90s, will destroy you if you choose them.  Java
applets were probably the most spectacular example.  This was
supposed to be the new way of delivering applications.  Presumably
it killed just about 100% of the startups who believed that.&lt;br/&gt;&lt;br/&gt;How do you pick the right platforms?  The usual way is to hire good
programmers and let them choose.  But there is a trick you could
use if you're not a programmer: visit a top computer science
department and see what they use in research projects.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8. Slowness in Launching&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Companies of all sizes have a hard time getting software done.  It's
intrinsic to the medium; software is always 85% done.  It takes an
effort of will to push through this and get something released to
users.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f3n"&gt;&lt;font color="#777777"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Startups make all kinds of excuses for delaying their launch.  Most
are equivalent to the ones people use for procrastinating in everyday
life.  There's something that needs to happen first.  Maybe.  But
if the software were 100% finished and ready to launch at the push
of a button, would they still be waiting?&lt;br/&gt;&lt;br/&gt;One reason to launch quickly is that it forces you to actually
&lt;i&gt;finish&lt;/i&gt; some quantum of work.  Nothing is truly finished till it's
released; you can see that from the rush of work that's always
involved in releasing anything, no matter how finished you thought
it was.  The other reason you need to launch is that it's only by
bouncing your idea off users that you fully understand it.&lt;br/&gt;&lt;br/&gt;Several distinct problems manifest themselves as delays in launching:
working too slowly; not truly understanding the problem; fear of
having to deal with users; fear of being judged; working on too
many different things; excessive perfectionism.  Fortunately you
can combat all of them by the simple expedient of forcing yourself
to launch &lt;i&gt;something&lt;/i&gt; fairly quickly.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. Launching Too Early&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Launching too slowly has probably killed a hundred times more
startups than launching too fast, but it is possible to launch too
fast.  The danger here is that you ruin your reputation.  You launch
something, the early adopters try it out, and if it's no good they
may never come back.&lt;br/&gt;&lt;br/&gt;So what's the minimum you need to launch?  We suggest startups think
about what they plan to do, identify a core that's both (a) useful
on its own and (b) something that can be incrementally expanded
into the whole project, and then get that done as soon as possible.&lt;br/&gt;&lt;br/&gt;This is the same approach I (and many other programmers) use for
writing software.  Think about the overall goal, then start by
writing the smallest subset of it that does anything useful.  If
it's a subset, you'll have to write it anyway, so in the worst case
you won't be wasting your time.  But more likely you'll find that
implementing a working subset is both good for morale and helps you
see more clearly what the rest should do.&lt;br/&gt;&lt;br/&gt;The early adopters you need to impress are fairly tolerant.  They
don't expect a newly launched product to do everything; it just has
to do &lt;i&gt;something&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;10. Having No Specific User in Mind&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You can't build things users like without understanding them.  I
mentioned earlier that the most successful startups seem to have
begun by trying to solve a problem their founders had.  Perhaps
there's a rule here: perhaps you create wealth in proportion to how
well you understand the problem you're solving, and the problems
you understand best are your own. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f4n"&gt;&lt;font color="#777777"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;That's just a theory.  What's not a theory is the converse: if
you're trying to solve problems you don't understand, you're hosed.&lt;br/&gt;&lt;br/&gt;And yet a surprising number of founders seem willing to
assume that someone, they're not sure exactly who, will want what
they're building.  Do the founders want it?  No, they're not the
target market.  Who is?  Teenagers.  People interested in local
events (that one is a perennial tarpit).  Or "business" users.  What
business users?  Gas stations?  Movie studios?  Defense contractors?&lt;br/&gt;&lt;br/&gt;You can of course build something for users other than yourself.
We did.  But you should realize you're stepping into dangerous
territory.  You're flying on instruments, in effect, so you should
(a) consciously shift gears, instead of assuming you can rely on
your intuitions as you ordinarily would, and (b) look at the
instruments.&lt;br/&gt;&lt;br/&gt;In this case the instruments are the users.  When designing for
other people you have to be empirical.  You can no longer guess
what will work; you have to find users and measure their responses.
So if you're going to make something for teenagers or "business"
users or some other group that doesn't include you, you have to be
able to talk some specific ones into using what you're making.  If
you can't, you're on the wrong track.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;11. Raising Too Little Money&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Most successful startups take funding at some point.  Like having
more than one founder, it seems a good bet statistically.  How much
should you take, though?&lt;br/&gt;&lt;br/&gt;Startup funding is measured in time.  Every startup that isn't
profitable (meaning nearly all of them, initially) has a certain
amount of time left before the money runs out and they have to stop.
This is sometimes referred to as runway, as in "How much runway do
you have left?"  It's a good metaphor because it reminds you that
when the money runs out you're going to be airborne or dead.&lt;br/&gt;&lt;br/&gt;Too little money means not enough to get airborne.  What airborne
means depends on the situation.  Usually you have to advance to a
visibly higher level: if all you have is an idea, a working prototype;
if you have a prototype, launching; if you're launched, significant
growth.  It depends on investors, because until you're profitable
that's who you have to convince.&lt;br/&gt;&lt;br/&gt;So if you take money from investors, you have to take enough to get
to the next step, whatever that is.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f5n"&gt;&lt;font color="#777777"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Fortunately you have some
control over both how much you spend and what the next step is.  We
advise startups to set both low, initially: spend practically
nothing, and make your initial goal simply to build a solid prototype.
This gives you maximum flexibility.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;12. Spending Too Much&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's hard to distinguish spending too much from raising too little.
If you run out of money, you could say either was the cause.  The
only way to decide which to call it is by comparison with other
startups.  If you raised five million and ran out of money, you
probably spent too much.&lt;br/&gt;&lt;br/&gt;Burning through too much money is not as common as it used to be.
Founders seem to have learned that lesson.  Plus it keeps getting
cheaper to start a startup.  So as of this writing few startups
spend too much.  None of the ones we've funded have.  (And not just
because we make small investments; many have gone on to raise further
rounds.)&lt;br/&gt;&lt;br/&gt;The classic way to burn through cash is by hiring a lot of people.
This bites you twice: in addition to increasing your costs, it slows
you downâ€”so money that's getting consumed faster has to last
longer.  Most hackers understand why that happens; Fred Brooks
explained it in The Mythical Man-Month.&lt;br/&gt;&lt;br/&gt;We have three general suggestions about hiring: (a) don't do it if
you can avoid it, (b) pay people with equity rather than salary,
not just to save money, but because you want the kind of people who
are committed enough to prefer that, and (c) only hire people who
are either going to write code or go out and get users, because
those are the only things you need at first.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;13. Raising Too Much Money&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's obvious how too little money could kill you, but is there such
a thing as having too much?&lt;br/&gt;&lt;br/&gt;Yes and no.  The problem is not so much the money itself as what
comes with it.  As one VC who spoke at Y Combinator said, "Once you
take several million dollars of my money, the clock is ticking."
If VCs fund you, they're not going to let you just put the money
in the bank and keep operating as two guys living on ramen.  They
want that money to go to work. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f6n"&gt;&lt;font color="#777777"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
At the very least you'll move
into proper office space and hire more people.  That will change
the atmosphere, and not entirely for the better.  Now most of your
people will be employees rather than founders. They won't be as
committed; they'll need to be told what to do; they'll start to
engage in office politics.&lt;br/&gt;&lt;br/&gt;When you raise a lot of money, your company moves to the suburbs
and has kids.&lt;br/&gt;&lt;br/&gt;Perhaps more dangerously, once you take a lot of money it gets
harder to change direction.  Suppose your initial plan was to sell
something to companies.  After taking VC money you hire a sales
force to do that. What happens now if you realize you should be
making this for consumers instead of businesses?  That's a completely
different kind of selling.  What happens, in practice, is that you
don't realize that.  The more people you have, the more you stay
pointed in the same direction.&lt;br/&gt;&lt;br/&gt;Another drawback of large investments is the time they take.  The
time required to raise money grows with the amount.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f7n"&gt;&lt;font color="#777777"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
When the
amount rises into the millions, investors get very cautious.  VCs
never quite say yes or no; they just engage you in an apparently
endless conversation.  Raising VC scale investments is thus a huge
time sink â€” more work, probably, than the startup itself.   And you
don't want to be spending all your time talking to investors while
your competitors are spending theirs building things.&lt;br/&gt;&lt;br/&gt;We advise founders who go on to seek VC money to take the first
reasonable deal they get.  If you get an offer from a reputable
firm at a reasonable valuation with no unusually onerous terms,
just take it and get on with building the company.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f8n"&gt;&lt;font color="#777777"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Who cares
if you could get a 30% better deal elsewhere?  Economically, startups
are an all-or-nothing game.  Bargain-hunting among investors is a
waste of time.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;14. Poor Investor Management&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;As a founder, you have to manage your investors.  You shouldn't
ignore them, because they may have useful insights.  But neither
should you let them run the company.  That's supposed to be your
job.  If investors had sufficient vision to run the companies
they fund, why didn't they start them?&lt;br/&gt;&lt;br/&gt;Pissing off investors by ignoring them is probably less dangerous
than caving in to them.  In our startup, we erred on the ignoring
side.  A lot of our energy got drained
away in disputes with investors instead of going into the product.
But this was less costly than giving in, which would probably have
destroyed the company.  If the founders know what they're doing,
it's better to have half their attention focused on the product
than the full attention of investors who don't.&lt;br/&gt;&lt;br/&gt;How hard you have to work on managing investors usually depends on
how much money you've taken.  When you raise VC-scale money, the
investors get a great deal of control.  If they have a board majority,
they're literally your bosses.  In the more common case, where
founders and investors are equally represented and the deciding
vote is cast by neutral outside directors, all the investors have
to do is convince the outside directors and they control the company.&lt;br/&gt;&lt;br/&gt;If things go well, this shouldn't matter.  So long as you seem to
be advancing rapidly, most investors will leave you alone.  But
things don't always go smoothly in startups.  Investors have made
trouble even for the most successful companies.  One of the most
famous examples is Apple, whose board made a nearly fatal blunder
in firing Steve Jobs.  Apparently even Google got a lot of grief
from their investors early on.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;15. Sacrificing Users to (Supposed) Profit&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When I said at the beginning that if you make something users want,
you'll be fine, you may have noticed I didn't mention anything about
having the right business model.  That's not because making money
is unimportant.  I'm not suggesting that founders start companies
with no chance of making money in the hope of unloading them before
they tank.  The reason we tell founders not to worry about the
business model initially is that making something people want is
so much harder.&lt;br/&gt;&lt;br/&gt;I don't know why it's so hard to make something people want.  It
seems like it should be straightforward.  But you can tell it must
be hard by how few startups do it.&lt;br/&gt;&lt;br/&gt;Because making something people want is so much harder than making
money from it, you should leave business models for later, just as
you'd leave some trivial but messy feature for version 2.  In version
1, solve the core problem.  And the core problem in a startup is
how to &lt;a href="https://paulgraham.com/wealth.html"&gt;create wealth&lt;/a&gt; 
(= how much people want something x the number
who want it), not how to convert that wealth into money.&lt;br/&gt;&lt;br/&gt;The companies that win are the ones that put users first.  Google,
for example.  They made search work, then worried about how to make
money from it.  And yet some startup founders still think it's
irresponsible not to focus on the business model from the beginning.
They're often encouraged in this by investors whose experience comes
from less malleable industries.&lt;br/&gt;&lt;br/&gt;It &lt;i&gt;is&lt;/i&gt; irresponsible not to think about business models.  It's
just ten times more irresponsible not to think about the product.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;16. Not Wanting to Get Your Hands Dirty&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Nearly all programmers would rather spend their time writing code
and have someone else handle the messy business of extracting money
from it.  And not just the lazy ones.  Larry and Sergey apparently
felt this way too at first.  After developing their new search
algorithm, the first thing they tried was to get some other company
to buy it.&lt;br/&gt;&lt;br/&gt;Start a company?  Yech.  Most hackers would rather just have ideas.
But as Larry and Sergey found, there's not much of a market for
ideas.  No one trusts an idea till you embody it in a product and
use that to grow a user base.  Then they'll pay big time.&lt;br/&gt;&lt;br/&gt;Maybe this will change, but I doubt it will change much.  There's
nothing like users for convincing acquirers.  It's not just that
the risk is decreased.  The acquirers are human, and they have a
hard time paying a bunch of young guys millions of dollars just for
being clever.  When the idea is embodied in a company with a lot
of users, they can tell themselves they're buying the users rather
than the cleverness, and this is easier for them to swallow.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f9n"&gt;&lt;font color="#777777"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If you're going to attract users, you'll probably have to get up
from your computer and go find some.  It's unpleasant work, but if
you can make yourself do it you have a much greater chance of
succeeding.  In the first batch of startups we funded, in the summer
of 2005, most of the founders spent all their time building their
applications.  But there was one who was away half the time talking
to executives at cell phone companies, trying to arrange deals.
Can you imagine anything more painful for a hacker?
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f10n"&gt;&lt;font color="#777777"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But it
paid off, because this startup seems the most successful of that
group by an order of magnitude.&lt;br/&gt;&lt;br/&gt;If you want to start a startup, you have to face the fact that you
can't just hack.  At least one hacker will have to spend some of
the time doing business stuff.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;17. Fights Between Founders&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Fights between founders are surprisingly common.  About 20% of the
startups we've funded have had a founder leave.  It happens so often
that we've reversed our attitude to vesting.  We still don't require
it, but now we advise founders to vest so there will be an orderly
way for people to quit.&lt;br/&gt;&lt;br/&gt;A founder leaving doesn't necessarily kill a startup, though.  Plenty
of successful startups have had that happen. 
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f11n"&gt;&lt;font color="#777777"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Fortunately it's
usually the least committed founder who leaves.  If there are three
founders and one who was lukewarm leaves, big deal.  If you have
two and one leaves, or a guy with critical technical skills leaves,
that's more of a problem.  But even that is survivable.  Blogger
got down to one person, and they bounced back.&lt;br/&gt;&lt;br/&gt;Most of the disputes I've seen between founders could have been
avoided if they'd been more careful about who they started a company
with.  Most disputes are not due to the situation but the people.
Which means they're inevitable.  And most founders who've been
burned by such disputes probably had misgivings, which they suppressed,
when they started the company.  Don't suppress misgivings.  It's
much easier to fix problems before the company is started than
after.  So don't include your housemate in your startup because
he'd feel left out otherwise.  Don't start a company with someone
you dislike because they have some skill you need and you worry you
won't find anyone else.  The people are the most important ingredient
in a startup, so don't compromise there.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;18. A Half-Hearted Effort&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The failed startups you hear most about are the spectacular
flameouts.  Those are actually the elite of failures.  The most
common type is not the one that makes spectacular mistakes, but the
one that doesn't do much of anything â€” the one we never even hear
about, because it was some project a couple guys started on the
side while working on their day jobs, but which never got anywhere
and was gradually abandoned.&lt;br/&gt;&lt;br/&gt;Statistically, if you want to avoid failure, it would seem like the
most important thing is to quit your day job.  Most founders of
failed startups don't quit their day jobs, and most founders of
successful ones do.  If startup failure were a disease, the CDC
would be issuing bulletins warning people to avoid day jobs.&lt;br/&gt;&lt;br/&gt;Does that mean you should quit your day job?  Not necessarily.  I'm
guessing here, but I'd guess that many of these would-be founders
may not have the kind of determination it takes to start a company,
and that in the back of their minds, they know it.  The reason they
don't invest more time in their startup is that they know it's a
bad investment.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f12n"&gt;&lt;font color="#777777"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I'd also guess there's some band of people who could have succeeded
if they'd taken the leap and done it full-time, but didn't. I have
no idea how wide this band is, but if the winner/borderline/hopeless
progression has the sort of distribution you'd expect, the number
of people who could have made it, if they'd quit their day job, is
probably an order of magnitude larger than the number who do make
it.
&lt;font color="#777777"&gt;[&lt;a href="https://paulgraham.com/startupmistakes.html#f13n"&gt;&lt;font color="#777777"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If that's true, most startups that could succeed fail because the
founders don't devote their whole efforts to them.  That certainly
accords with what I see out in the world.  Most startups fail because
they don't make something people want, and the reason most don't
is that they don't try hard enough.&lt;br/&gt;&lt;br/&gt;In other words, starting startups is just like everything else.
The biggest mistake you can make is not to try hard enough.  To the
extent there's a secret to success, it's not to be in denial about
that.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
This is not a complete list of the causes of failure,
just those you can control.  There are also several you can't,
notably ineptitude and bad luck.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Ironically, one variant of the Facebook that might work is a
facebook exclusively for college students.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Steve Jobs tried to motivate people by saying "Real artists
ship."  This is a fine sentence, but unfortunately not true.  Many
famous works of art are unfinished.  It's true in fields that have
hard deadlines, like architecture and filmmaking, but even there
people tend to be tweaking stuff till it's yanked out of their
hands.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
There's probably also a second factor: startup founders tend
to be at the leading edge of technology, so problems they face are
probably especially valuable.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
You should take more than you think you'll need, maybe 50% to
100% more, because software takes longer to write and deals longer
to close than you expect.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Since people sometimes call us VCs, I should add that we're
not.  VCs invest large amounts of other people's money.  We invest
small amounts of our own, like angel investors.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Not linearly of course, or it would take forever to raise five
million dollars.  In practice it just feels like it takes forever.&lt;br/&gt;&lt;br/&gt;Though if you include the cases where VCs don't invest, it would
literally take forever in the median case.  And maybe we should,
because the danger of chasing large investments is not just that
they take a long time.  That's the &lt;i&gt;best&lt;/i&gt; case.  The real danger
is that you'll expend a lot of time and get nothing.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
Some VCs will offer you an artificially low valuation to see
if you have the balls to ask for more.  It's lame that VCs play
such games, but some do.  If you're dealing with one of those you
should push back on the valuation a bit.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Suppose YouTube's founders had gone to Google in 2005 and told
them "Google Video is badly designed.  Give us $10 million and we'll
tell you all the mistakes you made."  They would have gotten
the royal raspberry.  Eighteen months later Google paid $1.6 billion
for the same lesson, partly because they could then tell themselves
that they were buying a phenomenon, or a community, or some vague
thing like that.&lt;br/&gt;&lt;br/&gt;I don't mean to be hard on Google.  They did better than their
competitors, who may have now missed the video boat entirely.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
Yes, actually: dealing with the government.  But phone companies
are up there.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
Many more than most people realize, because companies don't advertise
this.  Did you know Apple originally had three founders?&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
I'm not dissing these people.  I don't have the determination
myself.  I've twice come close to starting startups since Viaweb,
and both times I bailed because I realized that without the spur
of poverty I just wasn't willing to endure the stress of a startup.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
So how do you know whether you're in the category of people
who should quit their day job, or the presumably larger one who
shouldn't?  I got to the point of saying that this was hard to judge
for yourself and that you should seek outside advice, before realizing
that that's what we do.  We think of ourselves as investors, but
viewed from the other direction Y Combinator is a service for
advising people whether or not to quit their day job.  We could be
mistaken, and no doubt often are, but we do at least bet money on
our conclusions.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Jessica Livingston, Greg McAdoo, and Robert Morris 
for reading drafts of this.
&lt;!--
&lt;a href="http://reddit.com"&gt;&lt;img src="https://sep.turbifycdn.com/ty/cdn/paulgraham/redditino.png?t=1688221954&amp;" border=0&gt;&lt;/a&gt;
&lt;a href="http://reddit.com/info/me0s/comments"&gt;
Comment&lt;/a&gt; on this essay. --&gt;&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//startupmistakes.html</guid>
      <pubDate>Sun, 01 Oct 2006 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
