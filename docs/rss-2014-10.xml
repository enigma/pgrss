<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Paul Graham's Essays</title>
    <link>https://enigma.github.io/pgrss/rss.xml</link>
    <description>Paul Graham's Essays</description>
    <atom:link href="https://enigma.github.io/pgrss/rss-2014-10.xml" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Oct 2014 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Before the Startup</title>
      <link>https://paulgraham.com//before.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2014&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a guest lecture in Sam Altman's &amp;lt;a hre&lt;/i&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2014&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a guest lecture in Sam Altman's &lt;a href="http://startupclass.samaltman.com/"&gt;startup class&lt;/a&gt; at
Stanford.  It's intended for college students, but much of it is
applicable to potential founders at other ages.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;One of the advantages of having kids is that when you have to give
advice, you can ask yourself "what would I tell my own kids?"  My
kids are little, but I can imagine what I'd tell them about startups
if they were in college, and that's what I'm going to tell you.&lt;br/&gt;&lt;br/&gt;Startups are very counterintuitive.  I'm not sure why.  Maybe it's
just because knowledge about them hasn't permeated our culture yet.
But whatever the reason, starting a startup is a task where you
can't always trust your instincts.&lt;br/&gt;&lt;br/&gt;It's like skiing in that way.  When you first try skiing and you
want to slow down, your instinct is to lean back.  But if you lean
back on skis you fly down the hill out of control.  So part of
learning to ski is learning to suppress that impulse.  Eventually
you get new habits, but at first it takes a conscious effort.  At
first there's a list of things you're trying to remember as you
start down the hill.&lt;br/&gt;&lt;br/&gt;Startups are as unnatural as skiing, so there's a similar list for
startups. Here I'm going to give you the first part of it — the things
to remember if you want to prepare yourself to start a startup.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Counterintuitive&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The first item on it is the fact I already mentioned: that startups
are so weird that if you trust your instincts, you'll make a lot
of mistakes.  If you know nothing more than this, you may at least
pause before making them.&lt;br/&gt;&lt;br/&gt;When I was running Y Combinator I used to joke that our function
was to tell founders things they would ignore.  It's really true.
Batch after batch, the YC partners warn founders about mistakes
they're about to make, and the founders ignore them, and then come
back a year later and say "I wish we'd listened."&lt;br/&gt;&lt;br/&gt;Why do the founders ignore the partners' advice?  Well, that's the
thing about counterintuitive ideas: they contradict your intuitions.
They seem wrong.  So of course your first impulse is to disregard
them.  And in fact my joking description is not merely the curse
of Y Combinator but part of its raison d'etre. If founders' instincts
already gave them the right answers, they wouldn't need us.  You
only need other people to give you advice that surprises you. That's
why there are a lot of ski instructors and not many running
instructors.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;You can, however, trust your instincts about people.  And in fact
one of the most common mistakes young founders make is not to
do that enough.  They get involved with people who seem impressive,
but about whom they feel some misgivings personally.  Later when
things blow up they say "I knew there was something off about him,
but I ignored it because he seemed so impressive."&lt;br/&gt;&lt;br/&gt;If you're thinking about getting involved with someone — as a
cofounder, an employee, an investor, or an acquirer — and you
have misgivings about them, trust your gut.  If someone seems
slippery, or bogus, or a jerk, don't ignore it.&lt;br/&gt;&lt;br/&gt;This is one case where it pays to be self-indulgent. Work with
people you genuinely like, and you've known long enough to be sure.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Expertise&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The second counterintuitive point is that it's not that important
to know a lot about startups.  The way to succeed in a startup is
not to be an expert on startups, but to be an expert on your users
and the problem you're solving for them.
Mark Zuckerberg didn't succeed because he was an expert on startups.
He succeeded despite being a complete noob at startups, because he
understood his users really well.&lt;br/&gt;&lt;br/&gt;If you don't know anything about, say, how to raise an angel round,
don't feel bad on that account.  That sort of thing you can learn
when you need to, and forget after you've done it.&lt;br/&gt;&lt;br/&gt;In fact, I worry it's not merely unnecessary to learn in great
detail about the mechanics of startups, but possibly somewhat
dangerous.  If I met an undergrad who knew all about convertible
notes and employee agreements and (God forbid) class FF stock, I
wouldn't think "here is someone who is way ahead of their peers."
It would set off alarms.  Because another of the characteristic
mistakes of young founders is to go through the motions of starting
a startup.  They make up some plausible-sounding idea, raise money
at a good valuation, rent a cool office, hire a bunch of people.
From the outside that seems like what startups do.  But the next
step after rent a cool office and hire a bunch of people is: gradually
realize how completely fucked they are, because while imitating all
the outward forms of a startup they have neglected the one thing
that's actually essential: making something people want.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Game&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;We saw this happen so often that we made up a name for it: playing
house.  Eventually I realized why it was happening.  The reason
young founders go through the motions of starting a startup is
because that's what they've been trained to do for their whole lives
up to that point.  Think about what you have to do to get into
college, for example.  Extracurricular activities, check.  Even in
college classes most of the work is as artificial as running laps.&lt;br/&gt;&lt;br/&gt;I'm not attacking the educational system for being this way. There
will always be a certain amount of fakeness in the work you do when
you're being taught something, and if you measure their performance
it's inevitable that people will exploit the difference to the point
where much of what you're measuring is artifacts of the fakeness.&lt;br/&gt;&lt;br/&gt;I confess I did it myself in college. I found that in a lot of
classes there might only be 20 or 30 ideas that were the right shape
to make good exam questions.  The way I studied for exams in these
classes was not (except incidentally) to master the material taught
in the class, but to make a list of potential exam questions and
work out the answers in advance. When I walked into the final, the
main thing I'd be feeling was curiosity about which of my questions
would turn up on the exam.  It was like a game.&lt;br/&gt;&lt;br/&gt;It's not surprising that after being trained for their whole lives
to play such games, young founders' first impulse on starting a
startup is to try to figure out the tricks for winning at this new
game. Since fundraising appears to be the measure of success for
startups (another classic noob mistake), they always want to know what the
tricks are for convincing investors.  We tell them the best way to
&lt;a href="https://paulgraham.com/convince.html"&gt;convince investors&lt;/a&gt; is to make a startup
that's actually doing well, meaning &lt;a href="https://paulgraham.com/growth.html"&gt;growing fast&lt;/a&gt;, and then simply
tell investors so.  Then they want to know what the tricks are for
growing fast.  And we have to tell them the best way to do that is
simply to make something people want.&lt;br/&gt;&lt;br/&gt;So many of the conversations YC partners have with young founders
begin with the founder asking "How do we..." and the partner replying
"Just..."&lt;br/&gt;&lt;br/&gt;Why do the founders always make things so complicated?  The reason,
I realized, is that they're looking for the trick.&lt;br/&gt;&lt;br/&gt;So this is the third counterintuitive thing to remember about
startups: starting a startup is where gaming the system stops
working.  Gaming the system may continue to work if you go to work
for a big company. Depending on how broken the company is, you can
succeed by sucking up to the right people, giving the impression
of productivity, and so on. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But that doesn't work with startups.
There is no boss to trick, only users, and all users care about is
whether your product does what they want. Startups are as impersonal
as physics.  You have to make something people want, and you prosper
only to the extent you do.&lt;br/&gt;&lt;br/&gt;The dangerous thing is, faking does work to some degree on investors.
If you're super good at sounding like you know what you're talking
about, you can fool investors for at least one and perhaps even two
rounds of funding.  But it's not in your interest to.  The company
is ultimately doomed.  All you're doing is wasting your own time
riding it down.&lt;br/&gt;&lt;br/&gt;So stop looking for the trick. There are tricks in startups, as
there are in any domain, but they are an order of magnitude less
important than solving the real problem. A founder who knows nothing
about fundraising but has made something users love will have an
easier time raising money than one who knows every trick in the
book but has a flat usage graph. And more importantly, the founder
who has made something users love is the one who will go on to
succeed after raising the money.&lt;br/&gt;&lt;br/&gt;Though in a sense it's bad news in that you're deprived of one of
your most powerful weapons, I think it's exciting that gaming the
system stops working when you start a startup.  It's exciting that
there even exist parts of the world where you win by doing good
work.  Imagine how depressing the world would be if it were all
like school and big companies, where you either have to spend a lot
of time on bullshit things or lose to people who do.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
I would
have been delighted if I'd realized in college that there were parts
of the real world where gaming the system mattered less than others,
and a few where it hardly mattered at all.  But there are, and this
variation is one of the most important things to consider when
you're thinking about your future.  How do you win in each type of
work, and what would you like to win by doing?
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;All-Consuming&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;That brings us to our fourth counterintuitive point: startups are
all-consuming.  If you start a startup, it will take over your life
to a degree you cannot imagine.  And if your startup succeeds, it
will take over your life for a long time: for several years at the
very least, maybe for a decade, maybe for the rest of your working
life.  So there is a real opportunity cost here.&lt;br/&gt;&lt;br/&gt;Larry Page may seem to have an enviable life, but there are aspects
of it that are unenviable.  Basically at 25 he started running as
fast as he could and it must seem to him that he hasn't stopped to
catch his breath since.  Every day new shit happens in the Google
empire that only the CEO can deal with, and he, as CEO, has to deal
with it.  If he goes on vacation for even a week, a whole week's
backlog of shit accumulates.  And he has to bear this uncomplainingly,
partly because as the company's daddy he can never show fear or
weakness, and partly because billionaires get less than zero sympathy
if they talk about having difficult lives.  Which has the strange
side effect that the difficulty of being a successful startup founder
is concealed from almost everyone except those who've done it.&lt;br/&gt;&lt;br/&gt;Y Combinator has now funded several companies that can be called
big successes, and in every single case the founders say the same
thing.  It never gets any easier.  The nature of the problems change.
You're worrying about construction delays at your London office
instead of the broken air conditioner in your studio apartment.
But the total volume of worry never decreases; if anything it
increases.&lt;br/&gt;&lt;br/&gt;Starting a successful startup is similar to having kids in that
it's like a button you push that changes your life irrevocably.
And while it's truly wonderful having kids, there are a lot of
things that are easier to do before you have them than after.  Many
of which will make you a better parent when you do have kids. And
since you can delay pushing the button for a while, most people in
rich countries do.&lt;br/&gt;&lt;br/&gt;Yet when it comes to startups, a lot of people seem to think they're
supposed to start them while they're still in college.  Are you
crazy?  And what are the universities thinking?  They go out of
their way to ensure their students are well supplied with contraceptives,
and yet they're setting up entrepreneurship programs and startup
incubators left and right.&lt;br/&gt;&lt;br/&gt;To be fair, the universities have their hand forced here.  A lot
of incoming students are interested in startups.  Universities are,
at least de facto, expected to prepare them for their careers.  So
students who want to start startups hope universities can teach
them about startups.  And whether universities can do this or not,
there's some pressure to claim they can, lest they lose applicants
to other universities that do.&lt;br/&gt;&lt;br/&gt;Can universities teach students about startups?  Yes and no.  They
can teach students about startups, but as I explained before, this
is not what you need to know.  What you need to learn about are the
needs of your own users, and you can't do that until you actually
start the company.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
So starting a startup is intrinsically
something you can only really learn by doing it.  And it's impossible
to do that in college, for the reason I just explained: startups
take over your life.  You can't start a startup for real as a
student, because if you start a startup for real you're not a student
anymore. You may be nominally a student for a bit, but you won't even
be that for long.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Given this dichotomy, which of the two paths should you take?  Be
a real student and not start a startup, or start a real startup and
not be a student?  I can answer that one for you. Do not start a
startup in college.  How to start a startup is just a subset of a
bigger problem you're trying to solve: how to have a good life.
And though starting a startup can be part of a good life for a lot
of ambitious people, age 20 is not the optimal time to do it.
Starting a startup is like a brutally fast depth-first search.  Most
people should still be searching breadth-first at 20.&lt;br/&gt;&lt;br/&gt;You can do things in your early 20s that you can't do as well before
or after, like plunge deeply into projects on a whim and travel
super cheaply with no sense of a deadline.  For unambitious people,
this sort of thing is the dreaded "failure to launch," but for the
ambitious ones it can be an incomparably valuable sort of exploration.
If you start a startup at 20 and you're sufficiently successful,
you'll never get to do it.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Mark Zuckerberg will never get to bum around a foreign country.  He
can do other things most people can't, like charter jets to fly him
to foreign countries. But success has taken a lot of the serendipity
out of his life. Facebook is running him as much as he's running
Facebook. And while it can be very cool to be in the grip of a
project you consider your life's work, there are advantages to
serendipity too, especially early in life.  Among other things it
gives you more options to choose your life's work from.&lt;br/&gt;&lt;br/&gt;There's not even a tradeoff here. You're not sacrificing anything
if you forgo starting a startup at 20, because you're more likely
to succeed if you wait.  In the unlikely case that you're 20 and
one of your side projects takes off like Facebook did, you'll face
a choice of running with it or not, and it may be reasonable to run
with it.  But the usual way startups take off is for the founders
to &lt;a href="https://paulgraham.com/ds.html"&gt;make them&lt;/a&gt; take off, and it's gratuitously
stupid to do that at 20.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Try&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Should you do it at any age?  I realize I've made startups sound
pretty hard.  If I haven't, let me try again: starting a startup
is really hard.  What if it's too hard?  How can you tell if you're
up to this challenge?&lt;br/&gt;&lt;br/&gt;The answer is the fifth counterintuitive point: you can't tell. Your
life so far may have given you some idea what your prospects might
be if you tried to become a mathematician, or a professional football
player.  But unless you've had a very strange life you haven't done
much that was &lt;a href="https://paulgraham.com/really.html"&gt;like&lt;/a&gt; being a startup founder.
Starting a startup will change you a lot.  So what you're trying
to estimate is not just what you are, but what you could grow into,
and who can do that?&lt;br/&gt;&lt;br/&gt;For the past 9 years it was my job to predict whether people would
have what it took to start successful startups.  It was easy to
tell how smart they were, and most people reading this will be over
that threshold.  The hard part was predicting how tough and ambitious they would become.  There
may be no one who has more experience at trying to predict that,
so I can tell you how much an expert can know about it, and the
answer is: not much.  I learned to keep a completely open mind about
which of the startups in each batch would turn out to be the stars.&lt;br/&gt;&lt;br/&gt;The founders sometimes think they know. Some arrive feeling sure
they will ace Y Combinator just as they've aced every one of the (few,
artificial, easy) tests they've faced in life so far.  Others arrive
wondering how they got in, and hoping YC doesn't discover whatever
mistake caused it to accept them.  But there is little correlation
between founders' initial attitudes and how well their companies
do.&lt;br/&gt;&lt;br/&gt;I've read that the same is true in the military — that the
swaggering recruits are no more likely to turn out to be really
tough than the quiet ones. And probably for the same reason: that
the tests involved are so different from the ones in their previous
lives.&lt;br/&gt;&lt;br/&gt;If you're absolutely terrified of starting a startup, you probably
shouldn't do it.  But if you're merely unsure whether you're up to
it, the only way to find out is to try.  Just not now.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Ideas&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;So if you want to start a startup one day, what should you do in
college?  There are only two things you need initially: an idea and
cofounders.  And the m.o. for getting both is the same.  Which leads
to our sixth and last counterintuitive point: that the way to get
startup ideas is not to try to think of startup ideas.&lt;br/&gt;&lt;br/&gt;I've written a whole &lt;a href="https://paulgraham.com/startupideas.html"&gt;essay&lt;/a&gt; on this,
so I won't repeat it all here.  But the short version is that if
you make a conscious effort to think of startup ideas, the ideas
you come up with will not merely be bad, but bad and plausible-sounding,
meaning you'll waste a lot of time on them before realizing they're
bad.&lt;br/&gt;&lt;br/&gt;The way to come up with good startup ideas is to take a step back.
Instead of making a conscious effort to think of startup ideas,
turn your mind into the type that startup ideas form in without any
conscious effort.  In fact, so unconsciously that you don't even
realize at first that they're startup ideas.&lt;br/&gt;&lt;br/&gt;This is not only possible, it's how Apple, Yahoo, Google, and
Facebook all got started.  None of these companies were even meant
to be companies at first.  They were all just side projects.  The
best startups almost have to start as side projects, because great
ideas tend to be such outliers that your conscious mind would reject
them as ideas for companies.&lt;br/&gt;&lt;br/&gt;Ok, so how do you turn your mind into the type that startup ideas
form in unconsciously?  (1) Learn a lot about things that matter,
then (2) work on problems that interest you (3) with people you
like and respect.  The third part, incidentally, is how you get
cofounders at the same time as the idea.&lt;br/&gt;&lt;br/&gt;The first time I wrote that paragraph, instead of "learn a lot about
things that matter," I wrote "become good at some technology." But
that prescription, though sufficient, is too narrow.  What was
special about Brian Chesky and Joe Gebbia was not that they were
experts in technology.  They were good at design, and perhaps even
more importantly, they were good at organizing groups and making
projects happen.  So you don't have to work on technology per se,
so long as you work on problems demanding enough to stretch you.&lt;br/&gt;&lt;br/&gt;What kind of problems are those?  That is very hard to answer in
the general case.  History is full of examples of young people who
were working on important problems that &lt;a href="https://paulgraham.com/marginal.html"&gt;no
one else&lt;/a&gt; at the time thought were important, and in particular
that their parents didn't think were important.  On the other hand,
history is even fuller of examples of parents who thought their
kids were wasting their time and who were right.  So how do you
know when you're working on real stuff?
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I know how &lt;i&gt;I&lt;/i&gt; know.  Real problems are interesting, and I am
self-indulgent in the sense that I always want to work on interesting
things, even if no one else cares about them (in fact, especially
if no one else cares about them), and find it very hard to make
myself work on boring things, even if they're supposed to be
important.&lt;br/&gt;&lt;br/&gt;My life is full of case after case where I worked on something just
because it seemed interesting, and it turned out later to be useful
in some worldly way.  &lt;a href="http://ycombinator.com/start.html"&gt;Y
Combinator itself&lt;/a&gt; was something I only did because it seemed
interesting. So I seem to have some sort of internal compass that
helps me out.  But I don't know what other people have in their
heads. Maybe if I think more about this I can come up with heuristics
for recognizing genuinely interesting problems, but for the moment
the best I can offer is the hopelessly question-begging advice that
if you have a taste for genuinely interesting problems, indulging
it energetically is the best way to prepare yourself for a startup.
And indeed, probably also the best way to live.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But although I can't explain in the general case what counts as an
interesting problem, I can tell you about a large subset of them.
If you think of technology as something that's spreading like a
sort of fractal stain, every moving point on the edge represents
an interesting problem.  So one guaranteed way to turn your mind
into the type that has good startup ideas is to get yourself to the
leading edge of some technology — to cause yourself, as Paul
Buchheit put it, to "live in the future." When you reach that point,
ideas that will seem to other people uncannily prescient will seem
obvious to you.  You may not realize they're startup ideas, but
you'll know they're something that ought to exist.&lt;br/&gt;&lt;br/&gt;For example, back at Harvard in the mid 90s a fellow grad student
of my friends Robert and Trevor wrote his own voice over IP software.
He didn't mean it to be a startup, and he never tried to turn it
into one.  He just wanted to talk to his girlfriend in Taiwan without
paying for long distance calls, and since he was an expert on
networks it seemed obvious to him that the way to do it was turn
the sound into packets and ship it over the Internet. He never did
any more with his software than talk to his girlfriend, but this
is exactly the way the best startups get started.&lt;br/&gt;&lt;br/&gt;So strangely enough the optimal thing to do in college if you want
to be a successful startup founder is not some sort of new, vocational
version of college focused on "entrepreneurship." It's the classic
version of college as education for its own sake. If you want to
start a startup after college, what you should do in college is
learn powerful things.  And if you have genuine intellectual
curiosity, that's what you'll naturally tend to do if you just
follow your own inclinations.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/before.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The component of entrepreneurship that really matters is domain
expertise.  The way to become Larry Page was to become an expert
on search. And the way to become an expert on search was to be
driven by genuine curiosity, not some ulterior motive.&lt;br/&gt;&lt;br/&gt;At its best, starting a startup is merely an ulterior motive for
curiosity.  And you'll do it best if you introduce the ulterior
motive toward the end of the process.&lt;br/&gt;&lt;br/&gt;So here is the ultimate advice for young would-be startup founders,
boiled down to two words: just learn.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Some founders listen more than others, and this tends to be a
&lt;a href="https://paulgraham.com/word.html"&gt;predictor of success&lt;/a&gt;. One of the things I
remember about the Airbnbs during YC is how intently they listened.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
In fact, this is one of the reasons startups are possible.  If
big companies weren't plagued by internal inefficiencies, they'd
be proportionately more effective, leaving less room for startups.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
In a startup you have to spend a lot of time on &lt;a href="https://paulgraham.com/schlep.html"&gt;schleps&lt;/a&gt;, but this sort of work is merely
unglamorous, not bogus.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
What should you do if your true calling is gaming the system?
Management consulting.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
The company may not be incorporated, but if you start to get
significant numbers of users, you've started it, whether you realize
it yet or not.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
It shouldn't be that surprising that colleges can't teach
students how to be good startup founders, because they can't teach
them how to be good employees either.&lt;br/&gt;&lt;br/&gt;The way universities "teach" students how to be employees is to
hand off the task to companies via internship programs.  But you
couldn't do the equivalent thing for startups, because by definition
if the students did well they would never come back.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Charles Darwin was 22 when he received an invitation to travel
aboard the HMS Beagle as a naturalist.  It was only because he was
otherwise unoccupied, to a degree that alarmed his family, that he
could accept it. And yet if he hadn't we probably would not know
his name.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
Parents can sometimes be especially conservative in this
department.  There are some whose definition of important problems
includes only those on the critical path to med school.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
I did manage to think of a heuristic for detecting whether you
have a taste for interesting ideas: whether you find known boring
ideas intolerable.  Could you endure studying literary theory, or
working in middle management at a large company?&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
In fact, if your goal is to start a startup, you can stick
even more closely to the ideal of a liberal education than past
generations have. Back when students focused mainly on getting a
job after college, they thought at least a little about how the
courses they took might look to an employer.  And perhaps even
worse, they might shy away from taking a difficult class lest they
get a low grade, which would harm their all-important GPA.  Good
news: users &lt;a href="https://paulgraham.com/credentials.html"&gt;don't care&lt;/a&gt; what your GPA
was.  And I've never heard of investors caring either.  Y Combinator
certainly never asks what classes you took in college or what grades
you got in them.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, John Collison, Patrick
Collison, Jessica Livingston, Robert Morris, Geoff Ralston, and
Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//before.html</guid>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Raise Money</title>
      <link>https://paulgraham.com//fr.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2013&lt;br/&gt;&lt;br/&gt;Most startups that raise money do it more than once.  A typical
tra&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2013&lt;br/&gt;&lt;br/&gt;Most startups that raise money do it more than once.  A typical
trajectory might be (1) to get started with a few tens of thousands
from something like Y Combinator or individual angels, then 
(2) raise a few hundred thousand to a few million to build the company,
and then (3) once the company is clearly succeeding, raise one or
more later rounds to accelerate growth.&lt;br&gt;&lt;br/&gt;Reality can be messier.  Some companies raise money twice in phase
2.  Others skip phase 1 and go straight to phase 2.  And at Y Combinator 
we get an increasing number of companies that have already
raised amounts in the hundreds of thousands.  But the three phase
path is at least the one about which individual startups' paths
oscillate.&lt;br/&gt;&lt;br/&gt;This essay focuses on phase 2 fundraising.  That's the type the
startups we fund are doing on Demo Day, and this essay is the advice
we give them.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Forces&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Fundraising is hard in both senses: hard like lifting a heavy weight,
and hard like solving a puzzle.  It's hard like lifting a weight
because it's intrinsically hard to convince people to part with
large sums of money.  That problem is irreducible; it should be
hard.  But much of the other kind of difficulty can be eliminated.
Fundraising only seems a puzzle because it's an alien world to most
founders, and I hope to fix that by supplying a map through it.&lt;br/&gt;&lt;br/&gt;To founders, the behavior of investors is often opaque — partly
because their motivations are obscure, but partly because they
deliberately mislead you.  And the misleading ways of investors
combine horribly with the wishful thinking of inexperienced founders.
At YC we're always warning founders about this danger, and investors
are probably more circumspect with YC startups than with other
companies they talk to, and even so we witness a constant series
of explosions as these two volatile components combine.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If you're an inexperienced founder, the only way to survive is by
imposing external constraints on yourself.  You can't trust your
intuitions.  I'm going to give you a set of rules here that will
get you through this process if anything will.  At certain moments
you'll be tempted to ignore them.  So rule number zero is: these
rules exist for a reason.  You wouldn't need a rule to keep you
going in one direction if there weren't powerful forces pushing you
in another.&lt;br/&gt;&lt;br/&gt;The ultimate source of the forces acting on you are the forces
acting on investors.  Investors are pinched between two kinds of
fear: fear of investing in startups that fizzle, and fear of missing
out on startups that take off.  The cause of all this fear is the
very thing that makes startups such attractive investments: the
successful ones grow very fast.  But that fast growth means investors
can't wait around.  If you wait till a startup is obviously a
success, it's too late.  To get the really high returns, you have
to invest in startups when it's still unclear how they'll do.  But
that in turn makes investors nervous they're about to invest in a
flop.  As indeed they often are.&lt;br/&gt;&lt;br/&gt;What investors would like to do, if they could, is wait.  When a
startup is only a few months old, every week that passes gives you
significantly more information about them.  But if you wait too
long, other investors might take the deal away from you.  And of
course the other investors are all subject to the same forces.  So
what tends to happen is that they all wait as long as they can,
then when some act the rest have to.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't raise money unless you want it and it wants you.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Such a high proportion of successful startups raise money that it
might seem fundraising is one of the defining qualities of a startup.
Actually it isn't.  &lt;a href="https://paulgraham.com/growth.html"&gt;Rapid growth&lt;/a&gt; is what
makes a company a startup.  Most companies in a position to grow
rapidly find that (a) taking outside money helps them grow faster,
and (b) their growth potential makes it easy to attract such money.
It's so common for both (a) and (b) to be true of a successful
startup that practically all do raise outside money.  But there may
be cases where a startup either wouldn't want to grow faster, or
outside money wouldn't help them to, and if you're one of them,
don't raise money.&lt;br/&gt;&lt;br/&gt;The other time not to raise money is when you won't be able to.  If
you try to raise money before you can &lt;a href="https://paulgraham.com/convince.html"&gt;convince&lt;/a&gt;
investors, you'll not only waste your time, but also burn your
reputation with those investors.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Be in fundraising mode or not.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;One of the things that surprises founders most about fundraising
is how distracting it is.  When you start fundraising, everything
else grinds to a halt.  The problem is not the time fundraising
consumes but that it becomes the &lt;a href="https://paulgraham.com/top.html"&gt;top idea in
your mind&lt;/a&gt;.  A startup can't endure that level of distraction
for long.  An early stage startup grows mostly because the founders
&lt;a href="https://paulgraham.com/ds.html"&gt;make&lt;/a&gt; it grow, and if the founders look away,
growth usually drops sharply.&lt;br/&gt;&lt;br/&gt;Because fundraising is so distracting, a startup should either be
in fundraising mode or not.  And when you do decide to raise money,
you should focus your whole attention on it so you can get it done
quickly and get back to work.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;You can take money from investors when you're not in fundraising
mode.  You just can't expend any attention on it.  There are two
things that take attention: convincing investors, and negotiating
with them.  So when you're not in fundraising mode, you should take
money from investors only if they require no convincing, and are
willing to invest on terms you'll take without negotiation.  For
example, if a reputable investor is willing to invest on a convertible
note, using standard paperwork, that is either uncapped or capped
at a good valuation, you can take that without having to think.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The terms will be whatever they turn out to be in your next
equity round.  And "no convincing" means just that: zero time spent
meeting with investors or preparing materials for them.  If an
investor says they're ready to invest, but they need you to come
in for one meeting to meet some of the partners, tell them no, if
you're not in fundraising mode, because that's fundraising. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Tell them politely; tell them you're focusing on the company right
now, and that you'll get back to them when you're fundraising; but
do not get sucked down the slippery slope.&lt;br/&gt;&lt;br/&gt;Investors will try to lure you into fundraising when you're not.
It's great for them if they can, because they can thereby get a
shot at you before everyone else.  They'll send you emails saying
they want to meet to learn more about you.  If you get cold-emailed
by an associate at a VC firm, you shouldn't meet even if you are
in fundraising mode.  Deals don't happen that way.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But even
if you get an email from a partner you should try to delay meeting
till you're in fundraising mode.  They may say they just want to
meet and chat, but investors never just want to meet and chat.  What
if they like you?  What if they start to talk about giving you
money?  Will you be able to resist having that conversation?  Unless
you're experienced enough at fundraising to have a casual conversation
with investors that stays casual, it's safer to tell them that you'd
be happy to later, when you're fundraising, but that right now you
need to focus on the company.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Companies that are successful at raising money in phase 2 sometimes
tack on a few investors after leaving fundraising mode.  This is
fine; if fundraising went well, you'll be able to do it without
spending time convincing them or negotiating about terms.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Get introductions to investors.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Before you can talk to investors, you have to be introduced to them.
If you're presenting at a Demo Day, you'll be introduced to a whole
bunch simultaneously.  But even if you are, you should supplement
these with intros you collect yourself.&lt;br/&gt;&lt;br/&gt;Do you have to be introduced?  In phase 2, yes.  Some investors
will let you email them a business plan, but you can tell from the
way their sites are organized that they don't really want startups
to approach them directly.&lt;br/&gt;&lt;br/&gt;Intros vary greatly in effectiveness.  The best type of intro is
from a well-known investor who has just invested in you.  So when
you get an investor to commit, ask them to introduce you to other
investors they respect.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The next best type of intro is from a
founder of a company they've funded.  You can also get intros from
other people in the startup community, like lawyers and reporters.&lt;br/&gt;&lt;br/&gt;There are now sites like AngelList, FundersClub, and WeFunder that
can introduce you to investors.  We recommend startups treat them
as auxiliary sources of money.  Raise money first from leads you
get yourself.  Those will on average be better investors.  Plus
you'll have an easier time raising money on these sites once you
can say you've already raised some from well-known investors.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Hear no till you hear yes.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Treat investors as saying no till they unequivocally say yes, in
the form of a definite offer with no contingencies.&lt;br/&gt;&lt;br/&gt;I mentioned earlier that investors prefer to wait if they can.
What's particularly dangerous for founders is the way they wait.
Essentially, they lead you on.  They seem like they're about to
invest right up till the moment they say no.  If they even say no.
Some of the worse ones never actually do say no; they just stop
replying to your emails.  They hope that way to get a free option
on investing.  If they decide later that they want to invest — usually
because they've heard you're a hot deal — they can pretend they
just got distracted and then restart the conversation as if they'd
been about to.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;That's not the worst thing investors will do.  Some will use language
that makes it sound as if they're committing, but which doesn't
actually commit them.  And wishful thinking founders are happy to
meet them half way.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Fortunately, the next rule is a tactic for neutralizing this behavior.
But to work it depends on you not being tricked by the no that
sounds like yes.  It's so common for founders to be misled/mistaken
about this that we designed a &lt;a href="http://ycombinator.com/hdp.html"&gt;protocol&lt;/a&gt; to fix the
problem.  If you believe an investor has committed, get them to
confirm it.  If you and they have different views of reality, whether
the source of the discrepancy is their sketchiness or your wishful
thinking, the prospect of confirming a commitment in writing will
flush it out.  And till they confirm, regard them as saying no.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Do breadth-first search weighted by expected value.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When you talk to investors your m.o. should be breadth-first search,
weighted by expected value.  You should always talk to investors
in parallel rather than serially.  You can't afford the time it
takes to talk to investors serially, plus if you only talk to one
investor at a time, they don't have the pressure of other investors
to make them act.  But you shouldn't pay the same attention to every
investor, because some are more promising prospects than others.
The optimal solution is to talk to all potential investors in
parallel, but give higher priority to the more promising ones. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Expected value = how likely an investor is to say yes, multiplied
by how good it would be if they did.  So for example, an eminent
investor who would invest a lot, but will be hard to convince, might
have the same expected value as an obscure angel who won't invest
much, but will be easy to convince.  Whereas an obscure angel who
will only invest a small amount, and yet needs to meet multiple
times before making up his mind, has very low expected value.  Meet
such investors last, if at all. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Doing breadth-first search weighted by expected value will save you
from investors who never explicitly say no but merely drift away,
because you'll drift away from them at the same rate.  It protects
you from investors who flake in much the same way that a distributed
algorithm protects you from processors that fail.  If some investor
isn't returning your emails, or wants to have lots of meetings but
isn't progressing toward making you an offer, you automatically
focus less on them.  But you have to be disciplined about assigning
probabilities.  You can't let how much you want an investor influence
your estimate of how much they want you.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Know where you stand.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;How do you judge how well you're doing with an investor, when
investors habitually seem more positive than they are?  By looking
at their actions rather than their words.  Every investor has some
track they need to move along from the first conversation to wiring
the money, and you should always know what that track consists of,
where you are on it, and how fast you're moving forward.&lt;br/&gt;&lt;br/&gt;Never leave a meeting with an investor without asking what happens
next.  What more do they need in order to decide?  Do they need
another meeting with you?  To talk about what?  And how soon?  Do
they need to do something internally, like talk to their partners,
or investigate some issue?  How long do they expect it to take?
Don't be too pushy, but know where you stand.  If investors are
vague or resist answering such questions, assume the worst; investors
who are seriously interested in you will usually be happy to talk
about what has to happen between now and wiring the money, because
they're already running through that in their heads. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If you're experienced at negotiations, you already know how to ask
such questions.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
If you're not, there's a trick you can use
in this situation.  Investors know you're inexperienced at raising
money.  Inexperience there doesn't make you unattractive.  Being a
noob at technology would, if you're starting a technology startup,
but not being a noob at fundraising.  Larry and Sergey were noobs
at fundraising.  So you can just confess that you're inexperienced
at this and ask how their process works and where you are in it.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f14n"&gt;&lt;font color="#999999"&gt;14&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Get the first commitment.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The biggest factor in most investors' opinions of you is the opinion
of &lt;a href="https://paulgraham.com/herd.html"&gt;other investors&lt;/a&gt;.  Once you start getting
investors to commit, it becomes increasingly easy to get more to.
But the other side of this coin is that it's often hard to get the
first commitment.&lt;br/&gt;&lt;br/&gt;Getting the first substantial offer can be half the total difficulty
of fundraising.  What counts as a substantial offer depends on who
it's from and how much it is.  Money from friends and family doesn't
usually count, no matter how much.  But if you get $50k from a well
known VC firm or angel investor, that will usually be enough to set
things rolling.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f15n"&gt;&lt;font color="#999999"&gt;15&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Close committed money.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's not a deal till the money's in the bank.  I often hear
inexperienced founders say things like "We've raised $800,000,"
only to discover that zero of it is in the bank so far.  Remember
the twin fears that torment investors?  The fear of missing out
that makes them jump early, and the fear of jumping onto a turd
that results?  This is a market where people are exceptionally prone
to buyer's remorse.  And it's also one that furnishes them plenty
of excuses to gratify it.  The public markets snap startup investing
around like a whip.  If the Chinese economy blows up tomorrow, all
bets are off.  But there are lots of surprises for individual
startups too, and they tend to be concentrated around fundraising.
Tomorrow a big competitor could appear, or you could get C&amp;amp;Ded, or
your cofounder could quit.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f16n"&gt;&lt;font color="#999999"&gt;16&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Even a day's delay can bring news that causes an investor to change
their mind.  So when someone commits, get the money.  Knowing where
you stand doesn't end when they say they'll invest.  After they say
yes, know what the timetable is for getting the money, and then
babysit that process till it happens.  Institutional investors have
people in charge of wiring money, but you may have to hunt angels
down in person to collect a check.&lt;br/&gt;&lt;br/&gt;Inexperienced investors are the ones most likely to get buyer's
remorse.  Established ones have learned to treat saying yes as like
diving off a diving board, and they also have more brand to preserve.
But I've heard of cases of even top-tier VC firms welching on deals.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Avoid investors who don't "lead."&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Since getting the first offer is most of the difficulty of fundraising,
that should be part of your calculation of expected value when you
start.  You have to estimate not just the probability that an
investor will say yes, but the probability that they'd be the &lt;i&gt;first&lt;/i&gt;
to say yes, and the latter is not simply a constant fraction of the
former.  Some investors are known for deciding quickly, and those
are extra valuable early on.&lt;br/&gt;&lt;br/&gt;Conversely, an investor who will only invest once other investors
have is worthless initially.  And while most investors are influenced
by how interested other investors are in you, there are some who
have an explicit policy of only investing after other investors
have.  You can recognize this contemptible subspecies of investor
because they often talk about "leads."  They say that they don't
lead, or that they'll invest once you have a lead.  Sometimes they
even claim to be willing to lead themselves, by which they mean
they won't invest till you get $x from other investors.  (It's great
if by "lead" they mean they'll invest unilaterally, and in addition
will help you raise more.  What's lame is when they use the term
to mean they won't invest unless you can raise more elsewhere.)
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f17n"&gt;&lt;font color="#999999"&gt;17&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Where does this term "lead" come from?  Up till a few years ago,
startups raising money in phase 2 would usually raise equity rounds
in which several investors invested at the same time using the same
paperwork.  You'd negotiate the terms with one "lead" investor, and
then all the others would sign the same documents and all the money
change hands at the closing.&lt;br/&gt;&lt;br/&gt;Series A rounds still work that way, but things now work differently
for most fundraising prior to the series A.  Now there are rarely
actual rounds before the A round, or leads for them.  Now startups
simply raise money from investors one at a time till they feel they
have enough.&lt;br/&gt;&lt;br/&gt;Since there are no longer leads, why do investors use that term?
Because it's a more legitimate-sounding way of saying what they
really mean.  All they really mean is that their interest in you
is a function of other investors' interest in you.  I.e. the spectral
signature of all mediocre investors.  But when phrased in terms of
leads, it sounds like there is something structural and therefore
legitimate about their behavior.&lt;br/&gt;&lt;br/&gt;When an investor tells you "I want to invest in you, but I don't
lead," translate that in your mind to "No, except yes if you turn
out to be a hot deal."  And since that's the default opinion of any
investor about any startup, they've essentially just told you
nothing.&lt;br/&gt;&lt;br/&gt;When you first start fundraising, the expected value of an investor
who won't "lead" is zero, so talk to such investors last if at all.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Have multiple plans.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Many investors will ask how much you're planning to raise. This
question makes founders feel they should be planning to raise a
specific amount.  But in fact you shouldn't.  It's a mistake to
have fixed plans in an undertaking as unpredictable as fundraising.&lt;br/&gt;&lt;br/&gt;So why do investors ask how much you plan to raise?  For much the
same reasons a salesperson in a store will ask "How much were you
planning to spend?" if you walk in looking for a gift for a friend.
You probably didn't have a precise amount in mind; you just want
to find something good, and if it's inexpensive, so much the better.
The salesperson asks you this not because you're supposed to have
a plan to spend a specific amount, but so they can show you only
things that cost the most you'll pay.&lt;br/&gt;&lt;br/&gt;Similarly, when investors ask how much you plan to raise, it's not
because you're supposed to have a plan.  It's to see whether you'd
be a suitable recipient for the size of investment they like to
make, and also to judge your ambition, reasonableness, and how far
you are along with fundraising.&lt;br/&gt;&lt;br/&gt;If you're a wizard at fundraising, you can say "We plan to raise
a $7 million series A round, and we'll be accepting termsheets next
tuesday."  I've known a handful of founders who could pull that off
without having VCs laugh in their faces.  But if you're in the
inexperienced but earnest majority, the solution is analogous to
the solution I recommend for &lt;a href="https://paulgraham.com/convince.html"&gt;pitching&lt;/a&gt;
your startup: do the right thing and then just tell investors what
you're doing.&lt;br/&gt;&lt;br/&gt;And the right strategy, in fundraising, is to have multiple plans
depending on how much you can raise.  Ideally you should be able
to tell investors something like: we can make it to profitability
without raising any more money, but if we raise a few hundred
thousand we can hire one or two smart friends, and if we raise a
couple million, we can hire a whole engineering team, etc.&lt;br/&gt;&lt;br/&gt;Different plans match different investors.  If you're talking to a
VC firm that only does series A rounds (though there are few of
those left), it would be a waste of time talking about any but your
most expensive plan.  Whereas if you're talking to an angel who
invests $20k at a time and you haven't raised any money yet, you
probably want to focus on your least expensive plan.&lt;br/&gt;&lt;br/&gt;If you're so fortunate as to have to think about the upper limit
on what you should raise, a good rule of thumb is to multiply the
number of people you want to hire times $15k times 18 months.  In
most startups, nearly all the costs are a function of the number
of people, and $15k per month is the conventional total cost
(including benefits and even office space) per person.  $15k per
month is high, so don't actually spend that much.  But it's ok to
use a high estimate when fundraising to add a margin for error.  If
you have additional expenses, like manufacturing, add in those at
the end.  Assuming you have none and you think you might hire 20
people, the most you'd want to raise is 20 x $15k x 18 = $5.4
million.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f18n"&gt;&lt;font color="#999999"&gt;18&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Underestimate how much you want.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Though you can focus on different plans when talking to different
types of investors, you should on the whole err on the side of
underestimating the amount you hope to raise.&lt;br/&gt;&lt;br/&gt;For example, if you'd like to raise $500k, it's better to say
initially that you're trying to raise $250k.  Then when you reach
$150k you're more than half done.  That sends two useful signals
to investors: that you're doing well, and that they have to decide
quickly because you're running out of room.  Whereas if you'd said
you were raising $500k, you'd be less than a third done at $150k.
If fundraising stalled there for an appreciable time, you'd start
to read as a failure.&lt;br/&gt;&lt;br/&gt;Saying initially that you're raising $250k doesn't limit you to
raising that much.  When you reach your initial target and you still
have investor interest, you can just decide to raise more.  Startups
do that all the time.  In fact, most startups that are very successful
at fundraising end up raising more than they originally intended.&lt;br/&gt;&lt;br/&gt;I'm not saying you should lie, but that you should lower your
expectations initially.  There is almost no downside in starting
with a low number.  It not only won't cap the amount you raise, but
will on the whole tend to increase it.&lt;br/&gt;&lt;br/&gt;A good metaphor here is angle of attack.  If you try to fly at too
steep an angle of attack, you just stall.  If you say right out of
the gate that you want to raise a $5 million series A round, unless
you're in a very strong position, you not only won't get that but
won't get anything. Better to start at a low angle of attack, build
up speed, and then gradually increase the angle if you want.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Be profitable if you can.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You will be in a much stronger position if your collection of plans
includes one for raising zero dollars — i.e. if you can make
it to profitability without raising any additional money.  Ideally
you want to be able to say to investors "We'll succeed no matter
what, but raising money will help us do it faster."&lt;br/&gt;&lt;br/&gt;There are many analogies between fundraising and dating, and this
is one of the strongest.  No one wants you if you seem desperate.
And the best way not to seem desperate is not to &lt;i&gt;be&lt;/i&gt; desperate.
That's one reason we urge startups during YC to keep expenses low
and to try to make it to &lt;a href="https://paulgraham.com/ramenprofitable.html"&gt;ramen
profitability&lt;/a&gt; before Demo Day.  Though it sounds slightly
paradoxical, if you want to raise money, the best thing you can do
is get yourself to the point where you don't need to.&lt;br/&gt;&lt;br/&gt;There are almost two distinct modes of fundraising: one in which
founders who need money knock on doors seeking it, knowing that
otherwise the company will die or at the very least people will
have to be fired, and one in which founders who don't need money
take some to grow faster than they could merely on their own revenues.
To emphasize the distinction I'm going to name them: type A fundraising
is when you don't need money, and type B fundraising is when you
do.&lt;br/&gt;&lt;br/&gt;Inexperienced founders read about famous startups doing what was
type A fundraising, and decide they should raise money too, since
that seems to be how startups work. Except when they raise money
they don't have a clear path to profitability and are thus doing
type B fundraising.  And they are then surprised how difficult and
unpleasant it is.&lt;br/&gt;&lt;br/&gt;Of course not all startups can make it to ramen profitability in a
few months.  And some that don't still manage to have the upper
hand over investors, if they have some other advantage like
extraordinary growth numbers or exceptionally formidable founders.
But as time passes it gets increasingly difficult to fundraise from
a position of strength without being profitable.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f19n"&gt;&lt;font color="#999999"&gt;19&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't optimize for valuation.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When you raise money, what should your valuation be?  The most
important thing to understand about valuation is that it's not that
important.&lt;br/&gt;&lt;br/&gt;Founders who raise money at high valuations tend to be unduly proud
of it.  Founders are often competitive people, and since valuation
is usually the only visible number attached to a startup, they end
up competing to raise money at the highest valuation.  This is
stupid, because fundraising is not the test that matters.  The real
test is revenue.  Fundraising is just a means to that end.  Being
proud of how well you did at fundraising is like being proud of
your college grades.&lt;br/&gt;&lt;br/&gt;Not only is fundraising not the test that matters, valuation is not
even the thing to optimize about fundraising.  The number one thing
you want from phase 2 fundraising is to get the money you need, so
you can get back to focusing on the real test, the success of your
company.  Number two is good investors. Valuation is at best third.&lt;br/&gt;&lt;br/&gt;The empirical evidence shows just how unimportant it is.  Dropbox
and Airbnb are the most successful companies we've funded so far,
and they raised money after Y Combinator at premoney valuations of
$4 million and $2.6 million respectively. Prices are so much higher
now that if you can raise money at all you'll probably raise it at
higher valuations than Dropbox and Airbnb.  So let that satisfy
your competitiveness.  You're doing better than Dropbox and Airbnb!
At a test that doesn't matter.&lt;br/&gt;&lt;br/&gt;When you start fundraising, your initial valuation (or valuation
cap) will be set by the deal you make with the first investor who
commits.  You can increase the price for later investors, if you
get a lot of interest, but by default the valuation you got from
the first investor becomes your asking price.&lt;br/&gt;&lt;br/&gt;So if you're raising money from multiple investors, as most companies
do in phase 2, you have to be careful to avoid raising the first
from an over-eager investor at a price you won't be able to
sustain.  You can of course lower your price if you need to (in
which case you should give the same terms to investors who invested
earlier at a higher price), but you may lose a bunch of leads in
the process of realizing you need to do this.&lt;br/&gt;&lt;br/&gt;What you can do if you have eager first investors is raise money
from them on an uncapped convertible note with an MFN clause.  This
is essentially a way of saying that the valuation cap of the note
will be determined by the next investors you raise money from.&lt;br/&gt;&lt;br/&gt;It will be easier to raise money at a lower valuation.  It shouldn't
be, but it is.  Since phase 2 prices vary at most 10x and the big
successes generate returns of at least 100x, investors should pick
startups entirely based on their estimate of the probability that
the company will be a big success and hardly at all on price.  But
although it's a mistake for investors to care about price, a
significant number do.  A startup that investors seem to like but
won't invest in at a cap of $x will have an easier time at $x/2.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f20n"&gt;&lt;font color="#999999"&gt;20&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Yes/no before valuation.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some investors want to know what your valuation is before they even
talk to you about investing.  If your valuation has already been
set by a prior investment at a specific valuation or cap, you can
tell them that number.  But if it isn't set because you haven't
closed anyone yet, and they try to push you to name a price, resist
doing so.  If this would be the first investor you've closed, then
this could be the tipping point of fundraising. That means closing
this investor is the first priority, and you need to get the
conversation onto that instead of being dragged sideways into a
discussion of price.&lt;br/&gt;&lt;br/&gt;Fortunately there is a way to avoid naming a price in this situation.
And it is not just a negotiating trick; it's how you (both) should
be operating.  Tell them that valuation is not the most important
thing to you and that you haven't thought much about it, that you
are looking for investors you want to partner with and who want to
partner with you, and that you should talk first about whether they
want to invest at all.  Then if they decide they do want to invest,
you can figure out a price. But first things first.&lt;br/&gt;&lt;br/&gt;Since valuation isn't that important and getting fundraising rolling
is, we usually tell founders to give the first investor who commits
as low a price as they need to.  This is a safe technique so long
as you combine it with the next one. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f21n"&gt;&lt;font color="#999999"&gt;21&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Beware "valuation sensitive" investors.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Occasionally you'll encounter investors who describe themselves as
"valuation sensitive."  What this means in practice is that they
are compulsive negotiators who will suck up a lot of your time
trying to push your price down.  You should therefore never approach
such investors first. While you shouldn't chase high valuations,
you also don't want your valuation to be set artificially low because
the first investor who committed happened to be a compulsive
negotiator.  Some such investors have value, but the time to approach
them is near the end of fundraising, when you're in a position to
say "this is the price everyone else has paid; take it or leave it"
and not mind if they leave it.  This way, you'll not only get market
price, but it will also take less time.&lt;br/&gt;&lt;br/&gt;Ideally you know which investors have a reputation for being
"valuation sensitive" and can postpone dealing with them till last,
but occasionally one you didn't know about will pop up early on.
The rule of doing breadth first search weighted by expected value
already tells you what to do in this case: slow down your interactions
with them.&lt;br/&gt;&lt;br/&gt;There are a handful of investors who will try to invest at a lower
valuation even when your price has already been set.  Lowering your
price is a backup plan you resort to when you discover you've let
the price get set too high to close all the money you need.  So
you'd only want to talk to this sort of investor if you were about
to do that anyway.  But since investor meetings have to be arranged
at least a few days in advance and you can't predict when you'll
need to resort to lowering your price, this means in practice that
you should approach this type of investor last if at all.&lt;br/&gt;&lt;br/&gt;If you're surprised by a lowball offer, treat it as a backup offer
and delay responding to it.  When someone makes an offer in good
faith, you have a moral obligation to respond in a reasonable time.
But lowballing you is a dick move that should be met with the
corresponding countermove.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Accept offers greedily.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'm a little leery of using the term "greedily" when writing about
fundraising lest non-programmers misunderstand me, but a greedy
algorithm is simply one that doesn't try to look into the future.
A greedy algorithm takes the best of the options in front of it
right now.  And that is how startups should approach fundraising
in phases 2 and later.  Don't try to look into the future because
(a) the future is unpredictable, and indeed in this business you're
often being deliberately misled about it and (b) your first priority
in fundraising should be to get it finished and get back to work
anyway.&lt;br/&gt;&lt;br/&gt;If someone makes you an acceptable offer, take it.  If you have
multiple incompatible offers, take the best.  Don't reject an
acceptable offer in the hope of getting a better one in the future.&lt;br/&gt;&lt;br/&gt;These simple rules cover a wide variety of cases.  If you're raising
money from many investors, roll them up as they say yes.  As you
start to feel you've raised enough, the threshold for acceptable
will start to get higher.&lt;br/&gt;&lt;br/&gt;In practice offers exist for stretches of time, not points.  So
when you get an acceptable offer that would be incompatible with
others (e.g. an offer to invest most of the money you need), you
can tell the other investors you're talking to that you have an
offer good enough to accept, and give them a few days to make their
own.  This could lose you some that might have made an offer if
they had more time.  But by definition you don't care; the initial
offer was acceptable.&lt;br/&gt;&lt;br/&gt;Some investors will try to prevent others from having time to decide
by giving you an "exploding" offer, meaning one that's only valid
for a few days.  Offers from the very best investors explode less
frequently and less rapidly — Fred Wilson never gives exploding
offers, for example — because they're confident you'll pick
them.  But lower-tier investors sometimes give offers with very
short fuses, because they believe no one who had other options would
choose them.  A deadline of three working days is acceptable.  You
shouldn't need more than that if you've been talking to investors
in parallel.  But a deadline any shorter is a sign you're dealing
with a sketchy investor.  You can usually call their bluff, and you
may need to.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f22n"&gt;&lt;font color="#999999"&gt;22&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;It might seem that instead of accepting offers greedily, your goal
should be to get the best investors as partners.  That is certainly
a good goal, but in phase 2 "get the best investors" only rarely
conflicts with "accept offers greedily," because the best investors
don't usually take any longer to decide than the others.  The only
case where the two strategies give conflicting advice is when you
have to forgo an offer from an acceptable investor to see if you'll
get an offer from a better one.  If you talk to investors in parallel
and push back on exploding offers with excessively short deadlines,
that will almost never happen.  But if it does, "get the best
investors" is in the average case bad advice.  The best investors
are also the most selective, because they get their pick of all the
startups.  They reject nearly everyone they talk to, which means
in the average case it's a bad trade to exchange a definite offer
from an acceptable investor for a potential offer from a better
one.&lt;br/&gt;&lt;br/&gt;(The situation is different in phase 1.  You can't apply to all the
incubators in parallel, because some offset their schedules to
prevent this.  In phase 1, "accept offers greedily" and "get the
best investors" do conflict, so if you want to apply to multiple
incubators, you should do it in such a way that the ones you want
most decide first.)&lt;br/&gt;&lt;br/&gt;Sometimes when you're raising money from multiple investors, a
series A will emerge out of those conversations, and these rules
even cover what to do in that case.  When an investor starts to
talk to you about a series A, keep taking smaller investments till
they actually give you a termsheet.  There's no practical difficulty.
If the smaller investments are on convertible notes, they'll just
convert into the series A round.  The series A investor won't like
having all these other random investors as bedfellows, but if it
bothers them so much they should get on with giving you a termsheet.
Till they do, you don't know for sure they will, and the greedy
algorithm tells you what to do.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f23n"&gt;&lt;font color="#999999"&gt;23&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't sell more than 25% in phase 2.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If you do well, you will probably raise a series A round eventually.
I say probably because things are changing with series A rounds.
Startups may start to skip them.  But only one company we've funded
has so far, so tentatively assume the path to huge passes through
an A round.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f24n"&gt;&lt;font color="#999999"&gt;24&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Which means you should avoid doing things in earlier rounds that
will mess up raising an A round.  For example, if you've sold more
than about 40% of your company total, it starts to get harder to
raise an A round, because VCs worry there will not be enough stock
left to keep the founders motivated.&lt;br/&gt;&lt;br/&gt;Our rule of thumb is not to sell more than 25% in phase 2, on top
of whatever you sold in phase 1, which should be less than 15%.  If
you're raising money on uncapped notes, you'll have to guess what
the eventual equity round valuation might be.  Guess conservatively.&lt;br/&gt;&lt;br/&gt;(Since the goal of this rule is to avoid messing up the series A,
there's obviously an exception if you end up raising a series A in
phase 2, as a handful of startups do.)&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Have one person handle fundraising.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If you have multiple founders, pick one to handle fundraising so
the other(s) can keep working on the company.  And since the danger
of fundraising is not the time taken up by the actual meetings but
that it becomes the top idea in your mind, the founder who handles
fundraising should make a conscious effort to insulate the other
founder(s) from the details of the process.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f25n"&gt;&lt;font color="#999999"&gt;25&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;(If the founders mistrust one another, this could cause some friction.
But if the founders mistrust one another, you have worse problems
to worry about than how to organize fundraising.)&lt;br/&gt;&lt;br/&gt;The founder who handles fundraising should be the CEO, who should
in turn be the most formidable of the founders.  Even if the CEO
is a programmer and another founder is a salesperson?  Yes.  If you
happen to be that type of founding team, you're effectively a single
founder when it comes to fundraising.&lt;br/&gt;&lt;br/&gt;It's ok to bring all the founders to meet an investor who will
invest a lot, and who needs this meeting as the final step before
deciding.  But wait till that point.  Introducing an investor to
your cofounder(s) should be like introducing a girl/boyfriend to
your parents — something you do only when things reach a certain
stage of seriousness.&lt;br/&gt;&lt;br/&gt;Even if there are still one or more founders focusing on the company
during fundraising, growth will slow.  But try to get as much growth
as you can, because fundraising is a segment of time, not a point,
and what happens to the company during that time affects the outcome.
If your numbers grow significantly between two investor meetings,
investors will be hot to close, and if your numbers are flat or
down they'll start to get cold feet.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;You'll need an executive summary and (maybe) a deck.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Traditionally phase 2 fundraising consists of presenting a slide
deck in person to investors.  Sequoia describes what such a deck
should &lt;a href="http://www.sequoiacap.com/ideas"&gt;contain&lt;/a&gt;, and
since they're the customer you can take their word for it.&lt;br/&gt;&lt;br/&gt;I say "traditionally" because I'm ambivalent about decks, and (though
perhaps this is wishful thinking) they seem to be on the way out.
A lot of the most successful startups we fund never make decks in
phase 2.  They just talk to investors and explain what they plan
to do.  Fundraising usually takes off fast for the startups that
are most successful at it, and they're thus able to excuse themselves
by saying that they haven't had time to make a deck.&lt;br/&gt;&lt;br/&gt;You'll also want an executive summary, which should be no more than
a page long and describe in the most matter of fact language what
you plan to do, why it's a good idea, and what progress you've made
so far.  The point of the summary is to remind the investor (who
may have met many startups that day) what you talked about.&lt;br/&gt;&lt;br/&gt;Assume that if you give someone a copy of your deck or executive
summary, it will be passed on to whoever you'd least like to have
it.  But don't refuse on that account to give copies to investors
you meet.  You just have to treat such leaks as a cost of doing
business.  In practice it's not that high a cost.  Though founders
are rightly indignant when their plans get leaked to competitors,
I can't think of a startup whose outcome has been affected by it.&lt;br/&gt;&lt;br/&gt;Sometimes an investor will ask you to send them your deck and/or
executive summary before they decide whether to meet with you.  I
wouldn't do that.  It's a sign they're not really interested.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Stop fundraising when it stops working.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When do you stop fundraising?  Ideally when you've raised enough.
But what if you haven't raised as much as you'd like?  When do you
give up?&lt;br/&gt;&lt;br/&gt;It's hard to give general advice about this, because there have
been cases of startups that kept trying to raise money even when
it seemed hopeless, and miraculously succeeded. But what I usually
tell founders is to stop fundraising when you start to get a lot
of air in the straw.  When you're drinking through a straw, you can
tell when you get to the end of the liquid because you start to get
a lot of air in the straw.  When your fundraising options run out,
they usually run out in the same way.  Don't keep sucking on the
straw if you're just getting air.  It's not going to get better.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't get addicted to fundraising.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Fundraising is a chore for most founders, but some find it more
interesting than working on their startup.  The work at an early
stage startup often consists of unglamorous &lt;a href="https://paulgraham.com/schlep.html"&gt;schleps&lt;/a&gt;.  Whereas fundraising, when it's
going well, can be quite the opposite.  Instead of sitting in your
grubby apartment listening to users complain about bugs in your
software, you're being offered millions of dollars by famous investors
over lunch at a nice restaurant.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f26n"&gt;&lt;font color="#999999"&gt;26&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The danger of fundraising is particularly acute for people who are
good at it.  It's always fun to work on something you're good at.
If you're one of these people, beware.  Fundraising is not what
will make your company successful.  Listening to users complain
about bugs in your software is what will make you successful.  And
the big danger of getting addicted to fundraising is not merely
that you'll spend too long on it or raise too much money.  It's
that you'll start to think of yourself as being already successful,
and lose your taste for the schleps you need to undertake to actually
be successful.  Startups can be destroyed by this.&lt;br/&gt;&lt;br/&gt;When I see a startup with young founders that is fabulously successful
at fundraising, I mentally decrease my estimate of the probability
that they'll succeed.  The press may be writing about them as if
they'd been anointed as the next Google, but I'm thinking "this is
going to end badly."&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't raise too much.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Though only a handful of startups have to worry about this, it is
possible to raise too much.  The dangers of raising too much are
subtle but insidious.  One is that it will set impossibly high
expectations.  If you raise an excessive amount of money, it will
be at a high valuation, and the danger of raising money at too high
a valuation is that you won't be able to increase it sufficiently
the next time you raise money.&lt;br/&gt;&lt;br/&gt;A company's valuation is expected to rise each time it raises money.
If not it's a sign of a company in trouble, which makes you
unattractive to investors.  So if you raise money in phase 2 at a
post-money valuation of $30 million, the pre-money valuation of
your next round, if you want to raise one, is going to have to be
at least $50 million.  And you have to be doing really, really well
to raise money at $50 million.&lt;br/&gt;&lt;br/&gt;It's very dangerous to let the competitiveness of your current round
set the performance threshold you have to meet to raise your next
one, because the two are only loosely coupled.&lt;br/&gt;&lt;br/&gt;But the money itself may be more dangerous than the valuation.  The
more you raise, the more you spend, and spending a lot of money can
be disastrous for an early stage startup.  Spending a lot makes it
harder to become profitable, and perhaps even worse, it makes you
more rigid, because the main way to spend money is people, and the
more people you have, the harder it is to change directions.  So
if you do raise a huge amount of money, don't spend it.  (You will
find that advice almost impossible to follow, so hot will be the
money burning a hole in your pocket, but I feel obliged at least
to try.)&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Be nice.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Startups raising money occasionally alienate investors by seeming
arrogant.  Sometimes because they are arrogant, and sometimes because
they're noobs clumsily attempting to mimic the toughness they've
observed in experienced founders.&lt;br/&gt;&lt;br/&gt;It's a mistake to behave arrogantly to investors.  While there are
certain situations in which certain investors like certain kinds
of arrogance, investors vary greatly in this respect, and a flick
of the whip that will bring one to heel will make another roar with
indignation.  The only safe strategy is never to seem arrogant at
all.&lt;br/&gt;&lt;br/&gt;That will require some diplomacy if you follow the advice I've given
here, because the advice I've given is essentially how to play
hardball back.  When you refuse to meet an investor because you're
not in fundraising mode, or slow down your interactions with an
investor who moves too slow, or treat a contingent offer as the no
it actually is and then, by accepting offers greedily, end up leaving
that investor out, you're going to be doing things investors don't
like.  So you must cushion the blow with soft words.  At YC we tell
startups they can blame us.  And now that I've written this, everyone
else can blame me if they want.  That plus the inexperience card
should work in most situations: sorry, we think you're great, but
PG said startups shouldn't ___, and since we're new to fundraising,
we feel like we have to play it safe.&lt;br/&gt;&lt;br/&gt;The danger of behaving arrogantly is greatest when you're doing
well.  When everyone wants you, it's hard not to let it go to your
head.  Especially if till recently no one wanted you.  But restrain
yourself.  The startup world is a small place, and startups have
lots of ups and downs.  This is a domain where it's more true than
usual that pride goeth before a fall.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fr.html#f27n"&gt;&lt;font color="#999999"&gt;27&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Be nice when investors reject you as well.  The best investors are
not wedded to their initial opinion of you.  If they reject you in
phase 2 and you end up doing well, they'll often invest in phase
3.  In fact investors who reject you are some of your warmest leads
for future fundraising.  Any investor who spent significant time
deciding probably came close to saying yes.  Often you have some
internal champion who only needs a little more evidence to convince
the skeptics.  So it's wise not merely to be nice to investors who
reject you, but (unless they behaved badly) to treat it as the
beginning of a relationship.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;The bar will be higher next time.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Assume the money you raise in phase 2 will be the last you ever
raise.  You must make it to profitability on this money if you can.&lt;br/&gt;&lt;br/&gt;Over the past several years, the investment community has evolved
from a strategy of anointing a small number of winners early and
then supporting them for years to a strategy of spraying money at
early stage startups and then ruthlessly culling them at the next
stage.  This is probably the optimal strategy for investors.  It's
too hard to pick winners early on.  Better to let the market do it
for you.  But it often comes as a surprise to startups how much
harder it is to raise money in phase 3.&lt;br/&gt;&lt;br/&gt;When your company is only a couple months old, all it has to be is
a promising experiment that's worth funding to see how it turns
out.  The next time you raise money, the experiment has to have
worked.  You have to be on a trajectory that leads to going public.
And while there are some ideas where the proof that the experiment
worked might consist of e.g. query response times, usually the proof
is profitability.  Usually phase 3 fundraising has to be type A
fundraising.&lt;br/&gt;&lt;br/&gt;In practice there are two ways startups hose themselves between
phases 2 and 3.  Some are just too slow to become profitable.  They
raise enough money to last for two years.  There doesn't seem any
particular urgency to be profitable.  So they don't make any effort
to make money for a year.  But by that time, not making money has
become habitual.  When they finally decide to try, they find they
can't.&lt;br/&gt;&lt;br/&gt;The other way companies hose themselves is by letting their expenses
grow too fast.  Which almost always means hiring too many people.
You usually shouldn't go out and hire 8 people as soon as you raise
money at phase 2.  Usually you want to wait till you have growth
(and thus usually revenues) to justify them.  A lot of VCs will
encourage you to hire aggressively.  VCs generally tell you to spend
too much, partly because as money people they err on the side of
solving problems by spending money, and partly because they want
you to sell them more of your company in subsequent rounds.  Don't
listen to them.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Don't make things complicated.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I realize it may seem odd to sum up this huge treatise by saying
that my overall advice is not to make fundraising too complicated,
but if you go back and look at this list you'll see it's basically
a simple recipe with a lot of implications and edge cases.  Avoid
investors till you decide to raise money, and then when you do,
talk to them all in parallel, prioritized by expected value, and
accept offers greedily.  That's fundraising in one sentence.  Don't
introduce complicated optimizations, and don't let investors introduce
complications either.&lt;br/&gt;&lt;br/&gt;Fundraising is not what will make you successful.  It's just a means
to an end.  Your primary goal should be to get it over with and get
back to what will make you successful — making things and talking
to users — and the path I've described will for most startups
be the surest way to that destination.&lt;br/&gt;&lt;br/&gt;Be good, take care of yourselves, and &lt;i&gt;don't leave the path&lt;/i&gt;.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
The worst explosions happen when unpromising-seeming startups
encounter mediocre investors.  Good investors don't lead startups
on; their reputations are too valuable.  And startups that seem
promising can usually get enough money from good investors that
they don't have to talk to mediocre ones.  It is the unpromising-seeming
startups that have to resort to raising money from mediocre investors.
And it's particularly damaging when these investors flake, because
unpromising-seeming startups are usually more desperate for money.&lt;br/&gt;&lt;br/&gt;(Not all unpromising-seeming startups do badly.  Some are merely
ugly ducklings in the sense that they violate current startup
fashions.)&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
One YC founder told me:
&lt;blockquote&gt;
  I think in general we've done ok at fundraising, but I managed
  to screw up twice at the exact same thing — trying to focus
  on building the company and fundraising at the same time.
&lt;/blockquote&gt;
[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
There is one subtle danger you have to watch out for here, which
I warn about later: beware of getting too high a valuation from an
eager investor, lest that set an impossibly high target when raising
additional money.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
If they really need a meeting, then they're not ready to invest,
regardless of what they say. They're still deciding, which means
you're being asked to come in and convince them. Which is fundraising.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Associates at VC firms regularly cold email startups.  Naive
founders think "Wow, a VC is interested in us!"  But an associate
is not a VC.  They have no decision-making power.  And while they
may introduce startups they like to partners at their firm, the
partners discriminate against deals that come to them this way.   I
don't know of a single VC investment that began with an associate
cold-emailing a startup.  If you want to approach a specific firm,
get an intro to a partner from someone they respect.&lt;br/&gt;&lt;br/&gt;It's ok to talk to an associate if you get an intro to a VC firm
or they see you at a Demo Day and they begin by having an associate
vet you.  That's not a promising lead and should therefore get low
priority, but it's not as completely worthless as a cold email.&lt;br/&gt;&lt;br/&gt;Because the title "associate" has gotten a bad reputation, a few
VC firms have started to give their associates the title "partner,"
which can make things very confusing.  If you're a YC startup you
can ask us who's who; otherwise you may have to do some research
online.  There may be a special title for actual partners.  If
someone speaks for the firm in the press or a blog on the firm's
site, they're probably a real partner.  If they're on boards of
directors they're probably a real partner.&lt;br/&gt;&lt;br/&gt;There are titles between "associate" and "partner," including
"principal" and "venture partner."  The meanings of these titles
vary too much to generalize.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
For similar reasons, avoid casual conversations with potential
acquirers.  They can lead to distractions even more dangerous than
fundraising.  Don't even take a meeting with a potential acquirer
unless you want to sell your company right now.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Joshua Reeves specifically suggests asking each investor to
intro you to two more investors.&lt;br/&gt;&lt;br/&gt;Don't ask investors who say no for introductions to other investors.
That will in many cases be an anti-recommendation.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
This is not always as deliberate as its sounds.  A lot of the
delays and disconnects between founders and investors are induced
by the customs of the venture business, which have evolved the way
they have because they suit investors' interests.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
One YC founder who read a draft of this essay wrote:
&lt;blockquote&gt;
  This is the most important section. I think it might bear stating
  even more clearly. "Investors will deliberately affect more
  interest than they have to preserve optionality. If an investor
  seems very interested in you, they still probably won't invest.
  The solution for this is to assume the worst — that an investor
  is just feigning interest — until you get a definite commitment."
&lt;/blockquote&gt;
[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
Though you should probably pack investor meetings as closely
as you can, Jeff Byun mentions one reason not to: if you pack
investor meetings too closely, you'll have less time for your pitch
to evolve.&lt;br/&gt;&lt;br/&gt;Some founders deliberately schedule a handful of lame investors
first, to get the bugs out of their pitch.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
There is not an efficient market in this respect.  Some of the
most useless investors are also the highest maintenance.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
Incidentally, this paragraph is sales 101.  If you want to see
it in action, go talk to a car dealer.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
I know one very smooth founder who used to end investor meetings
with "So, can I count you in?" delivered as if it were "Can you
pass the salt?"   Unless you're very smooth (if you're not sure...),
do not do this yourself.  There is nothing more unconvincing, for
an investor, than a nerdy founder trying to deliver the lines meant
for a smooth one.&lt;br/&gt;&lt;br/&gt;Investors are fine with funding nerds.  So if you're a nerd, just
try to be a good nerd, rather than doing a bad imitation of a smooth
salesman.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f14n"&gt;&lt;font color="#000000"&gt;14&lt;/font&gt;&lt;/a&gt;]
Ian Hogarth suggests a good way to tell how serious potential
investors are: the resources they expend on you after the first
meeting.  An investor who's seriously interested will already be
working to help you even before they've committed.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f15n"&gt;&lt;font color="#000000"&gt;15&lt;/font&gt;&lt;/a&gt;]
In principle you might have to think about so-called "signalling
risk."  If a prestigious VC makes a small seed investment in you,
what if they don't want to invest the next time you raise money?
Other investors might assume that the VC knows you well, since
they're an existing investor, and if they don't want to invest in
your next round, that must mean you suck.  The reason I say "in
principle" is that in practice signalling hasn't been much of a
problem so far.  It rarely arises, and in the few cases where it
does, the startup in question usually is doing badly and is doomed
anyway.&lt;br/&gt;&lt;br/&gt;If you have the luxury of choosing among seed investors, you can
play it safe by excluding VC firms.  But it isn't critical to.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f16n"&gt;&lt;font color="#000000"&gt;16&lt;/font&gt;&lt;/a&gt;]
Sometimes a competitor will deliberately threaten you with a
lawsuit just as you start fundraising, because they know you'll
have to disclose the threat to potential investors and they hope
this will make it harder for you to raise money.  If this happens
it will probably frighten you more than investors.  Experienced
investors know about this trick, and know the actual lawsuits rarely
happen. So if you're attacked in this way, be forthright with
investors.  They'll be more alarmed if you seem evasive than if you
tell them everything.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f17n"&gt;&lt;font color="#000000"&gt;17&lt;/font&gt;&lt;/a&gt;]
A related trick is to claim that they'll only invest contingently
on other investors doing so because otherwise you'd be "undercapitalized."
This is almost always bullshit.  They can't estimate your minimum
capital needs that precisely.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f18n"&gt;&lt;font color="#000000"&gt;18&lt;/font&gt;&lt;/a&gt;]
You won't hire all those 20 people at once, and you'll probably
have some revenues before 18 months are out.  But those too are
acceptable or at least accepted additions to the margin for error.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f19n"&gt;&lt;font color="#000000"&gt;19&lt;/font&gt;&lt;/a&gt;]
Type A fundraising is so much better that it might even be
worth doing something different if it gets you there sooner.  One
YC founder told me that if he were a first-time founder again he'd
"leave ideas that are up-front capital intensive to founders with
established reputations."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f20n"&gt;&lt;font color="#000000"&gt;20&lt;/font&gt;&lt;/a&gt;]
I don't know whether this happens because they're innumerate,
or because they believe they have zero ability to predict startup
outcomes (in which case this behavior at least wouldn't be irrational).
In either case the implications are similar.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f21n"&gt;&lt;font color="#000000"&gt;21&lt;/font&gt;&lt;/a&gt;]
If you're a YC startup and you have an investor who for some
reason insists that you decide the price, any YC partner can estimate
a market price for you.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f22n"&gt;&lt;font color="#000000"&gt;22&lt;/font&gt;&lt;/a&gt;]
You should respond in kind when investors behave upstandingly
too.  When an investor makes you a clean offer with no deadline,
you have a moral obligation to respond promptly.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f23n"&gt;&lt;font color="#000000"&gt;23&lt;/font&gt;&lt;/a&gt;]
Tell the investors talking to you about an A round about the
smaller investments you raise as you raise them.  You owe them such
updates on your cap table, and this is also a good way to pressure
them to act.  They won't like you raising other money and may
pressure you to stop, but they can't legitimately ask you to commit
to them till they also commit to you.  If they want you to stop
raising money, the way to do it is to give you a series A termsheet
with a no-shop clause.&lt;br/&gt;&lt;br/&gt;You can relent a little if the potential series A investor has a
great reputation and they're clearly working fast to get you a
termsheet, particularly if a third party like YC is involved to
ensure there are no misunderstandings.  But be careful.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f24n"&gt;&lt;font color="#000000"&gt;24&lt;/font&gt;&lt;/a&gt;]
The company is Weebly, which made it to profitability on a
seed investment of $650k.  They did try to raise a series A in the
fall of 2008 but (no doubt partly because it was the fall of 2008)
the terms they were offered were so bad that they decided to skip
raising an A round.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f25n"&gt;&lt;font color="#000000"&gt;25&lt;/font&gt;&lt;/a&gt;]
Another advantage of having one founder take fundraising
meetings is that you never have to negotiate in real time, which
is something inexperienced founders should avoid.  One YC founder
told me:
&lt;blockquote&gt;
  Investors are professional negotiators and can negotiate on the
  spot very easily.  If only one founder is in the room, you can
  say "I need to circle back with my co-founder" before making any
  commitments. I used to do this all the time.
&lt;/blockquote&gt;
[&lt;a name="f26n"&gt;&lt;font color="#000000"&gt;26&lt;/font&gt;&lt;/a&gt;]
You'll be lucky if fundraising feels pleasant enough to become
addictive.  More often you have to worry about the other
extreme — becoming demoralized when investors reject you.  As
one (very successful) YC founder wrote after reading a draft of
this:
&lt;blockquote&gt;
  It's hard to mentally deal with the sheer scale of rejection in
  fundraising and if you are not in the right mindset you will fail.
  Users may love you but these supposedly smart investors may not
  understand you at all. At this point for me, rejection still
  rankles but I've come to accept that investors are just not super
  thoughtful for the most part and you need to play the game according
  to certain somewhat depressing rules (many of which you are
  listing) in order to win.
&lt;/blockquote&gt;
[&lt;a name="f27n"&gt;&lt;font color="#000000"&gt;27&lt;/font&gt;&lt;/a&gt;]
The actual sentence in the King James Bible is "Pride goeth
before destruction, and an haughty spirit before a fall."&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Slava Akhmechet, Sam Altman, Nate Blecharczyk,
Adora Cheung, Bill Clerico, John Collison, Patrick Collison, Parker
Conrad, Ron Conway, Travis Deyle, Jason Freedman, Joe Gebbia, Mattan
Griffel, Kevin Hale, Jacob Heller, Ian Hogarth, Justin Kan, Professor
Moriarty, Nikhil Nirmel, David Petersen, Geoff Ralston, Joshua
Reeves, Yuri Sagalov, Emmett Shear, Rajat Suri, Garry Tan, and Nick
Tomarello for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//fr.html</guid>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Convince Investors</title>
      <link>https://paulgraham.com//convince.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2013&lt;br/&gt;&lt;br/&gt;When people hurt themselves lifting heavy things, it's usually
because&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2013&lt;br/&gt;&lt;br/&gt;When people hurt themselves lifting heavy things, it's usually
because they try to lift with their back.  The right way to lift
heavy things is to let your legs do the work.  Inexperienced founders
make the same mistake when trying to convince investors.  They try
to convince with their pitch.  Most would be better off if they let
their startup do the work — if they started by understanding why
their startup is worth investing in, then simply explained this
well to investors.&lt;br&gt;&lt;br/&gt;Investors are looking for startups that will be very successful.
But that test is not as simple as it sounds.  In startups, as in a
lot of other domains, the distribution of outcomes follows a power
law, but in startups the curve is startlingly steep.  The big
successes are so big they 
&lt;a href="https://paulgraham.com/swan.html"&gt;dwarf&lt;/a&gt; the rest.  And since there are only
a handful each year (the conventional wisdom is 15), investors treat
"big success" as if it were binary.  Most are interested in you if
you seem like you have a chance, however small, of being one of the
15 big successes, and otherwise not.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;(There are a handful of angels who'd be interested in a company
with a high probability of being moderately successful.  But angel
investors like big successes too.)&lt;br/&gt;&lt;br/&gt;How do you seem like you'll be one of the big successes?  You need
three things: formidable founders, a promising market, and (usually)
some evidence of success so far.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Formidable&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The most important ingredient is formidable founders.  Most investors
decide in the first few minutes whether you seem like a winner or
a loser, and once their opinion is set it's hard to change. &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Every startup has reasons both to invest and not to invest.  If
investors think you're a winner they focus on the former, and if
not they focus on the latter.  For example, it might be a rich
market, but with a slow sales cycle.  If investors are impressed
with you as founders, they say they want to invest because it's a
rich market, and if not, they say they can't invest because of the
slow sales cycle.&lt;br/&gt;&lt;br/&gt;They're not necessarily trying to mislead you.  Most investors are
genuinely unclear in their own minds why they like or dislike
startups.  If you seem like a winner, they'll like your idea more.
But don't be too smug about this weakness of theirs, because you
have it too; almost everyone does.&lt;br/&gt;&lt;br/&gt;There is a role for ideas of course.  They're fuel for the fire
that starts with liking the founders.  Once investors like you,
you'll see them reaching for ideas: they'll be saying "yes, and you
could also do x."  (Whereas when they don't like you, they'll be
saying "but what about y?")&lt;br/&gt;&lt;br/&gt;But the foundation of convincing investors is to seem formidable,
and since this isn't a word most people use in conversation much,
I should explain what it means.  A formidable person is one who
seems like they'll get what they want, regardless of whatever
obstacles are in the way.  Formidable is close to confident, except
that someone could be confident and mistaken.  Formidable is roughly
justifiably confident.&lt;br/&gt;&lt;br/&gt;There are a handful of people who are really good at seeming
formidable — some because they actually are very formidable and
just let it show, and others because they are more or less con
artists.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But most founders, including many who will go on
to start very successful companies, are not that good at seeming
formidable the first time they try fundraising.  What should they
do?
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;What they should not do is try to imitate the swagger of more
experienced founders.  Investors are not always that good at judging
technology, but they're good at judging confidence.  If you try to
act like something you're not, you'll just end up in an uncanny
valley.  You'll depart from sincere, but never arrive at convincing.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Truth&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The way to seem most formidable as an inexperienced founder is to
stick to the truth.   How formidable you seem isn't a constant.  It
varies depending on what you're saying.  Most people can seem
confident when they're saying "one plus one is two," because they
know it's true.  The most diffident person would be puzzled and
even slightly contemptuous if they told a VC "one plus one is two"
and the VC reacted with skepticism.  The magic ability of people
who are good at seeming formidable is that they can do this with
the sentence "we're going to make a billion dollars a year."  But
you can do the same, if not with that sentence with some fairly
impressive ones, so long as you convince yourself first.&lt;br/&gt;&lt;br/&gt;That's the secret.  Convince yourself that your startup is worth
investing in, and then when you explain this to investors they'll
believe you.  And by convince yourself, I don't mean play mind games
with yourself to boost your confidence.  I mean truly evaluate
whether your startup is worth investing in.  If it isn't, don't try
to raise money.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But if it is, you'll be telling the truth
when you tell investors it's worth investing in, and they'll sense
that.  You don't have to be a smooth presenter if you understand
something well and tell the truth about it.&lt;br/&gt;&lt;br/&gt;To evaluate whether your startup is worth investing in, you have
to be a domain expert.  If you're not a domain expert, you can be
as convinced as you like about your idea, and it will seem to
investors no more than an instance of the Dunning-Kruger effect.
Which in fact it will usually be.  And investors can tell fairly
quickly whether you're a domain expert by how well you answer their
questions.  Know everything about your market.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Why do founders persist in trying to convince investors of things
they're not convinced of themselves?  Partly because we've all been
trained to.&lt;br/&gt;&lt;br/&gt;When my friends Robert Morris and Trevor Blackwell were in grad
school, one of their fellow students was on the receiving end of a
question from their faculty advisor that we still quote today.  When
the unfortunate fellow got to his last slide, the professor burst
out:
&lt;blockquote&gt;
  Which one of these conclusions do you actually believe?
&lt;/blockquote&gt;
One of the artifacts of the way schools are organized is that we
all get trained to talk even when we have nothing to say.  If you
have a ten page paper due, then ten pages you must write, even if
you only have one page of ideas.  Even if you have no ideas.  You
have to produce something.  And all too many startups go into
fundraising in the same spirit.  When they think it's time to raise
money, they try gamely to make the best case they can for their
startup.  Most never think of pausing beforehand to ask whether
what they're saying is actually convincing, because they've all
been trained to treat the need to present as a given — as an area
of fixed size, over which however much truth they have must needs
be spread, however thinly.&lt;br/&gt;&lt;br/&gt;The time to raise money is not when you need it, or when you reach
some artificial deadline like a Demo Day.  It's when you can convince
investors, and not before. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;And unless you're a good con artist, you'll never convince investors
if you're not convinced yourself.  They're far better at detecting
bullshit than you are at producing it, even if you're producing it
unknowingly.  If you try to convince investors before you've convinced
yourself, you'll be wasting both your time.&lt;br/&gt;&lt;br/&gt;But pausing first to convince yourself will do more than save you
from wasting your time.  It will force you to organize your thoughts.
To convince yourself that your startup is worth investing in, you'll
have to figure out why it's worth investing in.   And if you can
do that you'll end up with more than added confidence.  You'll also
have a provisional roadmap of how to succeed.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Market&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Notice I've been careful to talk about whether a startup is worth
investing in, rather than whether it's going to succeed.  No one
knows whether a startup is going to succeed.  And it's a good thing
for investors that this is so, because if you could know in advance
whether a startup would succeed, the stock price would already be
the future price, and there would be no room for investors to make
money.  Startup investors know that every investment is a bet, and
against pretty long odds.&lt;br/&gt;&lt;br/&gt;So to prove you're worth investing in, you don't have to prove
you're going to succeed, just that you're a sufficiently good bet.
What makes a startup a sufficiently good bet?  In addition to
formidable founders, you need a plausible path to owning a big piece
of a big market.  Founders think of startups as ideas, but investors
think of them as markets.  If there are x number of customers who'd
pay an average of $y per year for what you're making, then the total
addressable market, or TAM, of your company is $xy.  Investors don't
expect you to collect all that money, but it's an upper bound on
how big you can get.&lt;br/&gt;&lt;br/&gt;Your target market has to be big, and it also has to be capturable
by you.  But the market doesn't have to be big yet, nor do you
necessarily have to be in it yet.  Indeed, it's often better to
start in a &lt;a href="https://paulgraham.com/ds.html"&gt;small&lt;/a&gt; market that will either turn into a big one or
from which you can move into a big one.  There just has to be some
plausible sequence of hops that leads to dominating a big market a
few years down the line.&lt;br/&gt;&lt;br/&gt;The standard of plausibility varies dramatically depending on the
age of the startup.  A three month old company at Demo Day only
needs to be a promising experiment that's worth funding to see how
it turns out.  Whereas a two year old company raising a series A
round needs to be able to show the experiment worked. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But every company that gets really big is "lucky" in the sense that
their growth is due mostly to some external wave they're riding,
so to make a convincing case for becoming huge, you have to identify
some specific trend you'll benefit from.  Usually you can find this
by asking "why now?"  If this is such a great idea, why hasn't
someone else already done it?  Ideally the answer is that it only
recently became a good idea, because something changed, and no one
else has noticed yet.&lt;br/&gt;&lt;br/&gt;Microsoft for example was not going to grow huge selling Basic
interpreters.  But by starting there they were perfectly poised to
expand up the stack of microcomputer software as microcomputers
grew powerful enough to support one. And microcomputers turned out
to be a really huge wave, bigger than even the most optimistic
observers would have predicted in 1975.&lt;br/&gt;&lt;br/&gt;But while Microsoft did really well and there is thus a temptation
to think they would have seemed a great bet a few months in, they
probably didn't.  Good, but not great.  No company, however successful,
ever looks more than a pretty good bet a few months in. Microcomputers
turned out to be a big deal, and Microsoft both executed well and
got lucky.  But it was by no means obvious that this was how things
would play out.  Plenty of companies seem as good a bet a few months
in.  I don't know about startups in general, but at least half the
startups we fund could make as good a case as Microsoft could have
for being on a path to dominating a large market.  And who can
reasonably expect more of a startup than that?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Rejection&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;If you can make as good a case as Microsoft could have, will you
convince investors?  Not always.  A lot of VCs would have rejected
Microsoft.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Certainly some rejected Google.  And getting
rejected will put you in a slightly awkward position, because as
you'll see when you start fundraising, the most common question
you'll get from investors will be "who else is investing?" What do
you say if you've been fundraising for a while and no one has
committed yet? 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The people who are really good at acting formidable often solve
this problem by giving investors the impression that while no
investors have committed yet, several are about to.  This is arguably
a permissible tactic.  It's slightly dickish of investors to care
more about who else is investing than any other aspect of your
startup, and misleading them about how far along you are with other
investors seems the complementary countermove.  It's arguably an
instance of scamming a scammer. But I don't recommend this approach
to most founders, because most founders wouldn't be able to carry
it off.  This is the single most common lie told to investors, and
you have to be really good at lying to tell members of some profession
the most common lie they're told.&lt;br/&gt;&lt;br/&gt;If you're not a master of negotiation (and perhaps even if you are)
the best solution is to tackle the problem head-on, and to explain
why investors have turned you down and why they're mistaken.  If
you know you're on the right track, then you also know why investors
were wrong to reject you. Experienced investors are well aware that
the best ideas are also the scariest.  They all know about the VCs
who rejected Google.  If instead of seeming evasive and ashamed
about having been turned down (and thereby implicitly agreeing with
the verdict) you talk candidly about what scared investors about
you, you'll seem more confident, which they like, and you'll probably
also do a better job of presenting that aspect of your startup.  At
the very least, that worry will now be out in the open instead of
being a gotcha left to be discovered by the investors you're currently
talking to, who will be proud of and thus attached to their discovery.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;This strategy will work best with the best investors, who are both
hard to bluff and who already believe most other investors are
conventional-minded drones doomed always to miss the big outliers.
Raising money is not like applying to college, where you can assume
that if you can get into MIT, you can also get into Foobar State.
Because the best investors are much smarter than the rest, and the
best startup ideas look initially like 
&lt;a href="https://paulgraham.com/startupideas.html"&gt;bad ideas&lt;/a&gt;, it's not uncommon
for a startup to be rejected by all the VCs except the best ones.
That's what happened to Dropbox.  Y Combinator started in Boston,
and for the first 3 years we ran alternating batches in Boston and
Silicon Valley.  Because Boston investors were so few and so timid,
we used to ship Boston batches out for a second Demo Day in Silicon
Valley.  Dropbox was part of a Boston batch, which means all those
Boston investors got the first look at Dropbox, and none of them
closed the deal.  Yet another backup and syncing thing, they all
thought.  A couple weeks later, Dropbox raised a series A round
from Sequoia.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Different&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Not understanding that investors view investments as bets combines
with the ten page paper mentality to prevent founders from even
considering the possibility of being certain of what they're saying.
They think they're trying to convince investors of something very
uncertain — that their startup will be huge — and convincing anyone
of something like that must obviously entail some wild feat of
salesmanship.  But in fact when you raise money you're trying to
convince investors of something so much less speculative — whether
the company has all the elements of a good bet — that you can
approach the problem in a qualitatively different way.  You can
convince yourself, then convince them.&lt;br/&gt;&lt;br/&gt;And when you convince them, use the same matter-of-fact language
you used to convince yourself.  You wouldn't use vague, grandiose
marketing-speak among yourselves.  Don't use it with investors
either.  It not only doesn't work on them, but seems a mark of
incompetence.  Just be concise.  Many investors explicitly use that
as a test, reasoning (correctly) that if you can't explain your
plans concisely, you don't really understand them.  But even investors
who don't have a rule about this will be bored and frustrated by
unclear explanations.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convince.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;So here's the recipe for impressing investors when you're not already
good at seeming formidable:
&lt;ol&gt;
&lt;li&gt; Make something worth investing in.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; Understand why it's worth investing in.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; Explain that clearly to investors.
&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
If you're saying something you know is true, you'll seem confident
when you're saying it.  Conversely, never let pitching draw you
into bullshitting.  As long as you stay on the territory of truth,
you're strong.  Make the truth good, then just tell it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
There's no reason to believe this number is a constant.  In
fact it's our explicit goal at Y Combinator to increase it, by
encouraging people to start startups who otherwise wouldn't have.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Or more precisely, investors decide whether you're a loser
or possibly a winner.  If you seem like a winner, they may then,
depending on how much you're raising, have several more meetings
with you to test whether that initial impression holds up.&lt;br/&gt;&lt;br/&gt;But if you seem like a loser they're done, at least for the next
year or so.  And when they decide you're a loser they usually decide
in way less than the 50 minutes they may have allotted for the first
meeting.  Which explains the astonished stories one always hears
about VC inattentiveness.  How could these people make investment
decisions well when they're checking their messages during startups'
presentations?  The solution to that mystery is that they've already
made the decision.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
The two are not mutually exclusive.  There are people who are
both genuinely formidable, and also really good at acting that way.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
How can people who will go on to create giant companies not
seem formidable early on?  I think the main reason is that their
experience so far has trained them to keep their wings folded, as
it were.  Family, school, and jobs encourage cooperation, not
conquest.  And it's just as well they do, because even being Genghis
Khan is probably 99% cooperation.  But the result is that most
people emerge from the tube of their upbringing in their early
twenties compressed into the shape of the tube.  Some find they
have wings and start to spread them.  But this takes a few years.
In the beginning even they don't know yet what they're capable of.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
In fact, change what you're doing.  You're investing your own
time in your startup.  If you're not convinced that what you're
working on is a sufficiently good bet, why are you even working on
that?&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
When investors ask you a question you don't know the answer
to, the best response is neither to bluff nor give up, but instead
to explain how you'd figure out the answer.  If you can work out a
preliminary answer on the spot, so much the better, but explain
that's what you're doing.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
At YC we try to ensure startups are ready to raise money on
Demo Day by encouraging them to ignore investors and instead focus
on their companies till about a week before.  That way most reach
the stage where they're sufficiently convincing well before Demo
Day.  But not all do, so we also give any startup that wants to the
option of deferring to a later Demo Day.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
Founders are often surprised by how much harder it is to raise
the next round.  There is a qualitative difference in investors'
attitudes.  It's like the difference between being judged as a kid
and as an adult.  The next time you raise money, it's not enough
to be promising.  You have to be delivering results.&lt;br/&gt;&lt;br/&gt;So although it works well to show growth graphs at either stage,
investors treat them differently.  At three months, a growth graph
is mostly evidence that the founders are effective.  At two years,
it has to be evidence of a promising market and a company tuned to
exploit it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
By this I mean that if the present day equivalent of the 3
month old Microsoft presented at a Demo Day, there would be investors
who turned them down.  Microsoft itself didn't raise outside money,
and indeed the venture business barely existed when they got started
in 1975.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
The best investors rarely care who else is investing, but
mediocre investors almost all do.  So you can use this question as
a test of investor quality.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
To use this technique, you'll have to find out why investors
who rejected you did so, or at least what they claim was the reason.
That may require asking, because investors don't always volunteer
a lot of detail.  Make it clear when you ask that you're not trying
to dispute their decision — just that if there is some weakness in
your plans, you need to know about it.  You won't always get a real
reason out of them, but you should at least try.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
Dropbox wasn't rejected by all the East Coast VCs.  There was
one firm that wanted to invest but tried to lowball them.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
Alfred Lin points out that it's doubly important for the
explanation of a startup to be clear and concise, because it has
to convince at one remove: it has to work not just on the partner
you talk to, but when that partner re-tells it to colleagues.&lt;br/&gt;&lt;br/&gt;We consciously optimize for this at YC.  When we work with founders
create a Demo Day pitch, the last step is to imagine how an investor
would sell it to colleagues.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Marc Andreessen, Sam Altman, Patrick Collison, Ron Conway,
Chris Dixon, Alfred Lin, Ben Horowitz, Steve Huffman, Jessica
Livingston, Greg Mcadoo, Andrew Mason, Geoff Ralston, Yuri Sagalov,
Emmett Shear, Rajat Suri, Garry Tan, Albert Wenger, Fred Wilson,
and Qasar Younis for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//convince.html</guid>
      <pubDate>Thu, 01 Aug 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Investor Herd Dynamics</title>
      <link>https://paulgraham.com//herd.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2013&lt;br/&gt;&lt;br/&gt;The biggest component in most investors' opinion of you is the
opinion&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2013&lt;br/&gt;&lt;br/&gt;The biggest component in most investors' opinion of you is the
opinion of other investors.  Which is of course a recipe for
exponential growth.  When one investor wants to invest in you, that
makes other investors want to, which makes others want to, and so
on.&lt;br&gt;&lt;br/&gt;Sometimes inexperienced founders mistakenly conclude that manipulating
these forces is the essence of fundraising.  They hear stories about
stampedes to invest in successful startups, and think it's therefore
the mark of a successful startup to have this happen.  But actually
the two are not that highly correlated.  Lots of startups that cause
stampedes end up flaming out (in extreme cases, partly as a result
of the stampede), and lots of very successful startups were only
moderately popular with investors the first time they raised money.&lt;br/&gt;&lt;br/&gt;So the point of this essay is not to explain how to create a stampede,
but merely to explain the forces that generate them.  These forces
are always at work to some degree in fundraising, and they can cause
surprising situations.  If you understand them, you can at least
avoid being surprised.&lt;br/&gt;&lt;br/&gt;One reason investors like you more when other investors like you
is that you actually become a better investment.  Raising money
decreases the risk of failure.  Indeed, although investors hate it,
you are for this reason justified in raising your valuation for
later investors.  The investors who invested when you had no money
were taking more risk, and are entitled to higher returns.  Plus a
company that has raised money is literally more valuable.  After
you raise the first million dollars, the company is at least a
million dollars more valuable, because it's the same company as
before, plus it has a million dollars in the bank.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/herd.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Beware, though, because later investors so hate to have the price
raised on them that they resist even this self-evident reasoning.
Only raise the price on an investor you're comfortable with losing,
because some will angrily refuse.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/herd.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The second reason investors like you more when you've had some
success at fundraising is that it makes you more confident, and an
investors' opinion of &lt;a href="https://paulgraham.com/convince.html"&gt;you&lt;/a&gt; is the foundation
of their opinion of your company.  Founders are often surprised how
quickly investors seem to know when they start to succeed at raising
money.  And while there are in fact lots of ways for such information
to spread among investors, the main vector is probably the founders
themselves.  Though they're often clueless about technology, most
investors are pretty good at reading people.  When fundraising is
going well, investors are quick to sense it in your increased
confidence.  (This is one case where the average founder's inability
to remain poker-faced works to your advantage.)&lt;br/&gt;&lt;br/&gt;But frankly the most important reason investors like you more when
you've started to raise money is that they're bad at judging startups.
Judging startups is hard even for the best investors.  The mediocre
ones might as well be flipping coins.  So when mediocre investors
see that lots of other people want to invest in you, they assume
there must be a reason.  This leads to the phenomenon known in the
Valley as the "hot deal," where you have more interest from investors
than you can handle.&lt;br/&gt;&lt;br/&gt;The best investors aren't influenced much by the opinion of other
investors.  It would only dilute their own judgment to average it
together with other people's.  But they are indirectly influenced
in the practical sense that interest from other investors imposes
a deadline.  This is the fourth way in which offers beget offers.
If you start to get far along the track toward an offer with one
firm, it will sometimes provoke other firms, even good ones, to
make up their minds, lest they lose the deal.&lt;br/&gt;&lt;br/&gt;Unless you're a wizard at negotiation (and if you're not sure,
you're not) be very careful about exaggerating this to push a good
investor to decide.  Founders try this sort of thing all the time,
and investors are very sensitive to it.  If anything oversensitive.
But you're safe so long as you're telling the truth.  If you're
getting far along with investor B, but you'd rather raise money
from investor A, you can tell investor A that this is happening.
There's no manipulation in that.  You're genuinely in a bind, because
you really would rather raise money from A, but you can't safely
reject an offer from B when it's still uncertain what A will decide.&lt;br/&gt;&lt;br/&gt;Do not, however, tell A who B is.  VCs will sometimes ask which
other VCs you're talking to, but you should never tell them.  Angels
you can sometimes tell about other angels, because angels cooperate
more with one another. But if VCs ask, just point out that they
wouldn't want you telling other firms about your conversations, and
you feel obliged to do the same for any firm you talk to.  If they
push you, point out that you're inexperienced at fundraising — which
is always a safe card to play — and you feel you have to be
extra cautious. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/herd.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;While few startups will experience a stampede of interest, almost
all will at least initially experience the other side of this
phenomenon, where the herd remains clumped together at a distance.
The fact that investors are so much influenced by other investors'
opinions means you always start out in something of a hole.  So
don't be demoralized by how hard it is to get the first commitment,
because much of the difficulty comes from this external force.  The
second will be easier.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
An accountant might say that a company that has raised a million
dollars is no richer if it's convertible debt, but in practice money
raised as convertible debt is little different from money raised
in an equity round.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Founders are often surprised by this, but investors can get
very emotional.  Or rather indignant; that's the main emotion I've
observed; but it is very common, to the point where it sometimes
causes investors to act against their own interests.  I know of one
investor who invested in a startup at a $15 million valuation cap.
Earlier he'd had an opportunity to invest at a $5 million cap, but
he refused because a friend who invested earlier had been able to
invest at a $3 million cap.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
If an investor pushes you hard to tell them about your conversations
with other investors, is this someone you want as an investor?&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Paul Buchheit, Jessica Livingston, Geoff Ralston, and Garry Tan
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//herd.html</guid>
      <pubDate>Thu, 01 Aug 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Do Things that Don't Scale</title>
      <link>https://paulgraham.com//ds.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
July 2013&lt;br/&gt;&lt;br/&gt;One of the most common types of advice we give at Y Combinator is
to do &lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
July 2013&lt;br/&gt;&lt;br/&gt;One of the most common types of advice we give at Y Combinator is
to do things that don't scale.  A lot of would-be founders believe
that startups either take off or don't.  You build something, make
it available, and if you've made a better mousetrap, people beat a
path to your door as promised.  Or they don't, in which case the
market must not exist.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br&gt;&lt;br/&gt;Actually startups take off because the founders make them take off.
There may be a handful that just grew by themselves, but usually
it takes some sort of push to get them going.  A good metaphor would
be the cranks that car engines had before they got electric starters.
Once the engine was going, it would keep going, but there was a
separate and laborious process to get it going.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Recruit&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The most common unscalable thing founders have to do at the start
is to recruit users manually.  Nearly all startups have to.  You
can't wait for users to come to you.  You have to go out and get
them.&lt;br/&gt;&lt;br/&gt;Stripe is one of the most successful startups we've funded, and the
problem they solved was an urgent one.   If anyone could have sat
back and waited for users, it was Stripe.  But in fact they're
famous within YC for aggressive early user acquisition.&lt;br/&gt;&lt;br/&gt;Startups building things for other startups have a big pool of
potential users in the other companies we've funded, and none took
better advantage of it than Stripe.  At YC we use the term "Collison
installation" for the technique they invented.  More diffident
founders ask "Will you try our beta?" and if the answer is yes,
they say "Great, we'll send you a link."  But the Collison brothers
weren't going to wait. When anyone agreed to try Stripe they'd say
"Right then, give me your laptop" and set them up on the spot.&lt;br/&gt;&lt;br/&gt;There are two reasons founders resist going out and recruiting users
individually.  One is a combination of shyness and laziness.  They'd
rather sit at home writing code than go out and talk to a bunch of
strangers and probably be rejected by most of them.  But for a
startup to succeed, at least one founder (usually the CEO) will
have to spend a lot of time on sales and marketing.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The other reason founders ignore this path is that the absolute
numbers seem so small at first.  This can't be how the big, famous
startups got started, they think. The mistake they make is to
underestimate the power of compound growth.  We encourage every
startup to measure their progress by weekly &lt;a href="https://paulgraham.com/growth.html"&gt;growth
rate&lt;/a&gt;.  If you have 100 users, you need to get 10 more next week
to grow 10% a week.  And while 110 may not seem much better than
100, if you keep growing at 10% a week you'll be surprised how big
the numbers get.  After a year you'll have 14,000 users, and after
2 years you'll have 2 million.&lt;br/&gt;&lt;br/&gt;You'll be doing different things when you're acquiring users a
thousand at a time, and growth has to slow down eventually.  But
if the market exists you can usually start by recruiting users
manually and then gradually switch to less manual methods. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Airbnb is a classic example of this technique.  Marketplaces are
so hard to get rolling that you should expect to take heroic measures
at first. In Airbnb's case, these consisted of going door to door
in New York, recruiting new users and helping existing ones improve
their listings.  When I remember the Airbnbs during YC, I picture
them with rolly bags, because when they showed up for tuesday dinners
they'd always just flown back from somewhere.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Fragile&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Airbnb now seems like an unstoppable juggernaut, but early on it
was so fragile that about 30 days of going out and engaging in
person with users made the difference between success and failure.&lt;br/&gt;&lt;br/&gt;That initial fragility was not a unique feature of Airbnb.  Almost
all startups are fragile initially.  And that's one of the biggest
things inexperienced founders and investors (and reporters and
know-it-alls on forums) get wrong about them.  They unconsciously
judge larval startups by the standards of established ones.  They're
like someone looking at a newborn baby and concluding "there's no
way this tiny creature could ever accomplish anything."&lt;br/&gt;&lt;br/&gt;It's harmless if reporters and know-it-alls dismiss your startup.
They always get things wrong.   It's even ok if investors dismiss
your startup; they'll change their minds when they see growth.  The
big danger is that you'll dismiss your startup yourself.  I've seen
it happen.  I often have to encourage founders who don't see the
full potential of what they're building.  Even Bill Gates made that
mistake.  He returned to Harvard for the fall semester after starting
Microsoft.  He didn't stay long, but he wouldn't have returned at
all if he'd realized Microsoft was going to be even a fraction of
the size it turned out to be. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The question to ask about an early stage startup is not "is this
company taking over the world?"  but "how big could this company
get if the founders did the right things?"  And the right things
often seem both laborious and inconsequential at the time. Microsoft
can't have seemed very impressive when it was just a couple guys
in Albuquerque writing Basic interpreters for a market of a few
thousand hobbyists (as they were then called), but in retrospect
that was the optimal path to dominating microcomputer software.
And I know Brian Chesky and Joe Gebbia didn't feel like they were
en route to the big time as they were taking "professional" photos
of their first hosts' apartments.  They were just trying to survive.
But in retrospect that too was the optimal path to dominating a big
market.&lt;br/&gt;&lt;br/&gt;How do you find users to recruit manually?  If you build something
to solve &lt;a href="https://paulgraham.com/startupideas.html"&gt;your own problems&lt;/a&gt;, then
you only have to find your peers, which is usually straightforward.
Otherwise you'll have to make a more deliberate effort to locate
the most promising vein of users.  The usual way to do that is to
get some initial set of users by doing a comparatively untargeted
launch, and then to observe which kind seem most enthusiastic, and
seek out more like them.  For example, Ben Silbermann noticed that
a lot of the earliest Pinterest users were interested in design,
so he went to a conference of design bloggers to recruit users, and
that worked well. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Delight&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You should take extraordinary measures not just to acquire users,
but also to make them happy.  For as long as they could (which
turned out to be surprisingly long), Wufoo sent each new user a
hand-written thank you note.  Your first users should feel that
signing up with you was one of the best choices they ever made.
And you in turn should be racking your brains to think of new ways
to delight them.&lt;br/&gt;&lt;br/&gt;Why do we have to teach startups this?  Why is it counterintuitive
for founders?  Three reasons, I think.&lt;br/&gt;&lt;br/&gt;One is that a lot of startup founders are trained as engineers,
and customer service is not part of the training of engineers.
You're supposed to build things that are robust and elegant, not
be slavishly attentive to individual users like some kind of
salesperson.  Ironically, part of the reason engineering is
traditionally averse to handholding is that its traditions date
from a time when engineers were less powerful — when they were
only in charge of their narrow domain of building things, rather
than running the whole show.  You can be ornery when you're Scotty,
but not when you're Kirk.&lt;br/&gt;&lt;br/&gt;Another reason founders don't focus enough on individual customers
is that they worry it won't scale.  But when founders of larval
startups worry about this, I point out that in their current state
they have nothing to lose.  Maybe if they go out of their way to
make existing users super happy, they'll one day have too many to
do so much for.  That would be a great problem to have.  See if you
can make it happen.  And incidentally, when it does, you'll find
that delighting customers scales better than you expected.  Partly
because you can usually find ways to make anything scale more than
you would have predicted, and partly because delighting customers
will by then have permeated your culture.&lt;br/&gt;&lt;br/&gt;I have never once seen a startup lured down a blind alley by trying
too hard to make their initial users happy.&lt;br/&gt;&lt;br/&gt;But perhaps the biggest thing preventing founders from realizing
how attentive they could be to their users is that they've never
experienced such attention themselves.  Their standards for customer
service have been set by the companies they've been customers of,
which are mostly big ones.  Tim Cook doesn't send you a hand-written
note after you buy a laptop.  He can't.  But you can.  That's one
advantage of being small: you can provide a level of service no big
company can. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Once you realize that existing conventions are not the upper bound
on user experience, it's interesting in a very pleasant way to think
about how far you could go to delight your users.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Experience&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I was trying to think of a phrase to convey how extreme your attention
to users should be, and I realized Steve Jobs had already done it:
insanely great.  Steve wasn't just using "insanely" as a synonym
for "very."  He meant it more literally — that one should focus
on quality of execution to a degree that in everyday life would be
considered pathological.&lt;br/&gt;&lt;br/&gt;All the most successful startups we've funded have, and that probably
doesn't surprise would-be founders.  What novice founders don't get
is what insanely great translates to in a larval startup.  When
Steve Jobs started using that phrase, Apple was already an established
company.  He meant the Mac (and its documentation and even
packaging — such is the nature of obsession) should be insanely
well designed and manufactured.  That's not hard for engineers to
grasp.  It's just a more extreme version of designing a robust and
elegant product.&lt;br/&gt;&lt;br/&gt;What founders have a hard time grasping (and Steve himself might
have had a hard time grasping) is what insanely great morphs into
as you roll the time slider back to the first couple months of a
startup's life.  It's not the product that should be insanely great,
but the experience of being your user.  The product is just one
component of that.  For a big company it's necessarily the dominant
one.  But you can and should give users an insanely great experience
with an early, incomplete, buggy product, if you make up the
difference with attentiveness.&lt;br/&gt;&lt;br/&gt;Can, perhaps, but should?  Yes.  Over-engaging with early users is
not just a permissible technique for getting growth rolling.  For
most successful startups it's a necessary part of the feedback loop
that makes the product good.  Making a better mousetrap is not an
atomic operation.  Even if you start the way most successful startups
have, by building something you yourself need, the first thing you
build is never quite right.  And except in domains with big penalties
for making mistakes, it's often better not to aim for perfection
initially.  In software, especially, it usually works best to get
something in front of users as soon as it has a quantum of utility,
and then see what they do with it.  Perfectionism is often an excuse
for procrastination, and in any case your initial model of users
is always inaccurate, even if you're one of them. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The feedback you get from engaging directly with your earliest users
will be the best you ever get.  When you're so big you have to
resort to focus groups, you'll wish you could go over to your users'
homes and offices and watch them use your stuff like you did when
there were only a handful of them.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Fire&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Sometimes the right unscalable trick is to focus on a deliberately
narrow market.  It's like keeping a fire contained at first to get
it really hot before adding more logs.&lt;br/&gt;&lt;br/&gt;That's what Facebook did.  At first it was just for Harvard students.
In that form it only had a potential market of a few thousand people,
but because they felt it was really for them, a critical mass of
them signed up.  After Facebook stopped being for Harvard students,
it remained for students at specific colleges for quite a while.
When I interviewed Mark Zuckerberg at Startup School, he said that
while it was a lot of work creating course lists for each school,
doing that made students feel the site was their natural home.&lt;br/&gt;&lt;br/&gt;Any startup that could be described as a marketplace usually has
to start in a subset of the market, but this can work for other
startups as well.  It's always worth asking if there's a subset of
the market in which you can get a critical mass of users quickly.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Most startups that use the contained fire strategy do it unconsciously.
They build something for themselves and their friends, who happen
to be the early adopters, and only realize later that they could
offer it to a broader market.  The strategy works just as well if
you do it unconsciously.  The biggest danger of not being consciously
aware of this pattern is for those who naively discard part of it.
E.g. if you don't build something for yourself and your friends,
or even if you do, but you come from the corporate world and your
friends are not early adopters, you'll no longer have a perfect
initial market handed to you on a platter.&lt;br/&gt;&lt;br/&gt;Among companies, the best early adopters are usually other startups.
They're more open to new things both by nature and because, having
just been started, they haven't made all their choices yet.  Plus
when they succeed they grow fast, and you with them.  It was one
of many unforeseen advantages of the YC model (and specifically of
making YC big) that B2B startups now have an instant market of
hundreds of other startups ready at hand.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Meraki&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;For &lt;a href="https://paulgraham.com/hw.html"&gt;hardware startups&lt;/a&gt; there's a variant of
doing things that don't scale that we call "pulling a Meraki."
Although we didn't fund Meraki, the founders were Robert Morris's
grad students, so we know their history.  They got started by doing
something that really doesn't scale: assembling their routers
themselves.&lt;br/&gt;&lt;br/&gt;Hardware startups face an obstacle that software startups don't.
The minimum order for a factory production run is usually several
hundred thousand dollars.  Which can put you in a catch-22: without
a product you can't generate the growth you need to raise the money
to manufacture your product.  Back when hardware startups had to
rely on investors for money, you had to be pretty convincing to
overcome this.  The arrival of crowdfunding (or more precisely,
preorders) has helped a lot.  But even so I'd advise startups to
pull a Meraki initially if they can.  That's what Pebble did.  The
Pebbles 
&lt;a href="https://sep.turbifycdn.com/ty/cdn/paulgraham/eric.jpg?t=1730199416&amp;amp;"&gt;assembled&lt;/a&gt;
 the first several hundred watches themselves. If
they hadn't gone through that phase, they probably wouldn't have
sold $10 million worth of watches when they did go on Kickstarter.&lt;br/&gt;&lt;br/&gt;Like paying excessive attention to early customers, fabricating
things yourself turns out to be valuable for hardware startups.
You can tweak the design faster when you're the factory, and you
learn things you'd never have known otherwise.  Eric Migicovsky of
Pebble said one of the things he learned was "how valuable it was to
source good screws."   Who knew?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Consult&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Sometimes we advise founders of B2B startups to take over-engagement
to an extreme, and to pick a single user and act as if they were
consultants building something just for that one user.   The initial
user serves as the form for your mold; keep tweaking till you fit
their needs perfectly, and you'll usually find you've made something
other users want too.  Even if there aren't many of them, there are
probably adjacent territories that have more.  As long as you can
find just one user who really needs something and can act on that
need, you've got a toehold in making something people want, and
that's as much as any startup needs initially. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Consulting is the canonical example of work that doesn't scale.
But (like other ways of bestowing one's favors liberally) it's safe
to do it so long as you're not being paid to.  That's where companies
cross the line.  So long as you're a product company that's merely
being extra attentive to a customer, they're very grateful even if
you don't solve all their problems.  But when they start paying you
specifically for that attentiveness — when they start paying
you by the hour — they expect you to do everything.&lt;br/&gt;&lt;br/&gt;Another consulting-like technique for recruiting initially lukewarm
users is to use your software yourselves on their behalf.  We
did that at Viaweb.  When we approached merchants asking if they
wanted to use our software to make online stores, some said no, but
they'd let us make one for them.  Since we would do anything to get
users, we did.  We felt pretty lame at the time.  Instead of
organizing big strategic e-commerce partnerships, we were trying
to sell luggage and pens and men's shirts.  But in retrospect it
was exactly the right thing to do, because it taught us how it would
feel to merchants to use our software.  Sometimes the feedback loop
was near instantaneous: in the middle of building some merchant's
site I'd find I needed a feature we didn't have, so I'd spend a
couple hours implementing it and then resume building the site.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Manual&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There's a more extreme variant where you don't just use your software,
but are your software.  When you only have a small number of users,
you can sometimes get away with doing by hand things that you plan
to automate later.  This lets you launch faster, and when you do
finally automate yourself out of the loop, you'll know exactly what
to build because you'll have muscle memory from doing it yourself.&lt;br/&gt;&lt;br/&gt;When manual components look to the user like software, this technique
starts to have aspects of a practical joke.  For example, the way
Stripe delivered "instant" merchant accounts to its first users was
that the founders manually signed them up for traditional merchant
accounts behind the scenes.&lt;br/&gt;&lt;br/&gt;Some startups could be entirely manual at first. If you can find
someone with a problem that needs solving and you can solve it
manually, go ahead and do that for as long as you can, and then
gradually automate the bottlenecks.  It would be a little frightening
to be solving users' problems in a way that wasn't yet automatic,
but less frightening than the far more common case of having something
automatic that doesn't yet solve anyone's problems.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Big&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I should mention one sort of initial tactic that usually doesn't
work: the Big Launch.  I occasionally meet founders who seem to
believe startups are projectiles rather than powered aircraft, and
that they'll make it big if and only if they're launched with
sufficient initial velocity.  They want to launch simultaneously
in 8 different publications, with embargoes.  And on a tuesday, of
course, since they read somewhere that's the optimum day to launch
something.&lt;br/&gt;&lt;br/&gt;It's easy to see how little launches matter.  Think of some successful
startups.  How many of their launches do you remember?
All you need from a launch is some initial core of users.  How well
you're doing a few months later will depend more on how happy you
made those users than how many there were of them.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;So why do founders think launches matter?  A combination of solipsism
and laziness.  They think what they're building is so great that
everyone who hears about it will immediately sign up.  Plus it would
be so much less work if you could get users merely by broadcasting
your existence, rather than recruiting them one at a time.  But
even if what you're building really is great, getting users will
always be a gradual process — partly because great things
are usually also novel, but mainly because users have other things
to think about.&lt;br/&gt;&lt;br/&gt;Partnerships too usually don't work.  They don't work for startups
in general, but they especially don't work as a way to get growth
started.  It's a common mistake among inexperienced founders to
believe that a partnership with a big company will be their big
break.  Six months later they're all saying the same thing: that
was way more work than we expected, and we ended up getting practically
nothing out of it. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;It's not enough just to do something extraordinary initially.  You
have to make an extraordinary &lt;i&gt;effort&lt;/i&gt; initially.  Any strategy
that omits the effort — whether it's expecting a big launch to
get you users, or a big partner — is ipso facto suspect.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Vector&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The need to do something unscalably laborious to get started is so
nearly universal that it might be a good idea to stop thinking of
startup ideas as scalars.  Instead we should try thinking of them
as pairs of what you're going to build, plus the unscalable thing(s)
you're going to do initially to get the company going.&lt;br/&gt;&lt;br/&gt;It could be interesting to start viewing startup ideas this way,
because now that there are two components you can try to be imaginative
about the second as well as the first.  But in most cases the second
component will be what it usually is — recruit users manually
and give them an overwhelmingly good experience — and the main
benefit of treating startups as vectors will be to remind founders
they need to work hard in two dimensions.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ds.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In the best case, both components of the vector contribute to your
company's DNA: the unscalable things you have to do to get started
are not merely a necessary evil, but change the company permanently
for the better.  If you have to be aggressive about user acquisition
when you're small, you'll probably still be aggressive when you're
big.  If you have to manufacture your own hardware, or use your
software on users's behalf, you'll learn things you couldn't have
learned otherwise.  And most importantly, if you have to work hard
to delight users when you only have a handful of them, you'll keep
doing it when you have a lot.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Actually Emerson never mentioned mousetraps specifically.  He
wrote "If a man has good corn or wood, or boards, or pigs, to sell,
or can make better chairs or knives, crucibles or church organs,
than anybody else, you will find a broad hard-beaten road to his
house, though it be in the woods."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Thanks to Sam Altman for suggesting I make this explicit.
And no, you can't avoid doing sales by hiring someone to do it for
you.  You have to do sales yourself initially.  Later you can hire
a real salesperson to replace you.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
The reason this works is that as you get bigger, your size
helps you grow.  Patrick Collison wrote "At some point, there was
a very noticeable change in how Stripe felt. It tipped from being
this boulder we had to push to being a train car that in fact had
its own momentum."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
One of the more subtle ways in which YC can help founders
is by calibrating their ambitions, because we know exactly how a
lot of successful startups looked when they were just getting
started.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
If you're building something for which you can't easily get
a small set of users to observe — e.g. enterprise software — and
in a domain where you have no connections, you'll have to rely on
cold calls and introductions.  But should you even be working on
such an idea?&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Garry Tan pointed out an interesting trap founders fall into
in the beginning.  They want so much to seem big that they imitate
even the flaws of big companies, like indifference to individual
users.  This seems to them more "professional."  Actually it's
better to embrace the fact that you're small and use whatever
advantages that brings.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Your user model almost couldn't be perfectly accurate, because
users' needs often change in response to what you build for them.
Build them a microcomputer, and suddenly they need to run spreadsheets
on it, because the arrival of your new microcomputer causes someone
to invent the spreadsheet.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
If you have to choose between the subset that will sign up
quickest and those that will pay the most, it's usually best to
pick the former, because those are probably the early adopters.
They'll have a better influence on your product, and they won't
make you expend as much effort on sales.  And though they have less
money, you don't need that much to maintain your target growth rate
early on.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Yes, I can imagine cases where you could end up making
something that was really only useful for one user.  But those are
usually obvious, even to inexperienced founders.  So if it's not
obvious you'd be making something for a market of one, don't worry
about that danger.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
There may even be an inverse correlation between launch
magnitude and success.  The only launches I remember are famous
flops like the Segway and Google Wave.  Wave is a particularly
alarming example, because I think it was actually a great idea that
was killed partly by its overdone launch.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
Google grew big on the back of Yahoo, but that wasn't a
partnership.  Yahoo was their customer.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
It will also remind founders that an idea where the second
component is empty — an idea where there is nothing you can do
to get going, e.g. because you have no way to find users to recruit
manually — is probably a bad idea, at least for those founders.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Patrick Collison, Kevin
Hale, Steven Levy, Jessica Livingston, Geoff Ralston, and Garry Tan for reading
drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//ds.html</guid>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Startup Investing Trends</title>
      <link>https://paulgraham.com//invtrend.html</link>
      <description>&lt;font face="verdana" size="2"&gt;June 2013&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This talk was written for an audience of investors.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;Y Combinator has now funded 564 startups including the current
batch, which has 53.  The total valuation of the 287 that have
valuations (either by raising an equity round, getting acquired,
or dying) is about $11.7 billion, and the 511 prior to the current
batch have collectively raised about $1.7 billion.
&lt;font color="#999999"&gt;[&amp;lt;a href="https://paulgraham.com/invtrend.html#f1n&lt;/font&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;June 2013&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This talk was written for an audience of investors.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;Y Combinator has now funded 564 startups including the current
batch, which has 53.  The total valuation of the 287 that have
valuations (either by raising an equity round, getting acquired,
or dying) is about $11.7 billion, and the 511 prior to the current
batch have collectively raised about $1.7 billion.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;As usual those numbers are dominated by a few big winners.  The top
10 startups account for 8.6 of that 11.7 billion.  But there is a
peloton of younger startups behind them.  There are about 40 more
that have a shot at being really big.&lt;br/&gt;&lt;br/&gt;Things got a little out of hand last summer when we had 84 companies
in the batch, so we tightened up our filter to decrease the batch
size. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Several journalists have tried to interpret that as
evidence for some macro story they were telling, but the reason had
nothing to do with any external trend.  The reason was that we
discovered we were using an n² algorithm, and we needed to buy
time to fix it.  Fortunately we've come up with several techniques
for sharding YC, and the problem now seems to be fixed.  With a new
more scaleable model and only 53 companies, the current batch feels
like a walk in the park.  I'd guess we can grow another 2 or 3x
before hitting the next bottleneck. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One consequence of funding such a large number of startups is that
we see trends early.  And since fundraising is one of the main
things we help startups with, we're in a good position to notice
trends in investing.&lt;br/&gt;&lt;br/&gt;I'm going to take a shot at describing where these trends are
leading.  Let's start with the most basic question: will the future
be better or worse than the past?  Will investors, in the aggregate,
make more money or less?&lt;br/&gt;&lt;br/&gt;I think more.  There are multiple forces at work, some of which
will decrease returns, and some of which will increase them.  I
can't predict for sure which forces will prevail, but I'll describe
them and you can decide for yourself.&lt;br/&gt;&lt;br/&gt;There are two big forces driving change in startup funding: it's
becoming cheaper to start a startup, and startups are becoming a
more normal thing to do.&lt;br/&gt;&lt;br/&gt;When I graduated from college in 1986, there were essentially two
options: get a job or go to grad school.  Now there's a third: start
your own company.
That's a big change.  In principle it was possible to start your
own company in 1986 too, but it didn't seem like a real possibility.
It seemed possible to start a consulting company, or a niche product
company, but it didn't seem possible to start a company that would
become big.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;That kind of change, from 2 paths to 3, is the sort of big social
shift that only happens once every few generations.  I think we're
still at the beginning of this one.  It's hard to predict how big
a deal it will be.  As big a deal as the Industrial Revolution?
Maybe.  Probably not.  But it will be a big enough deal that it
takes almost everyone by surprise, because those big social shifts
always do.&lt;br/&gt;&lt;br/&gt;One thing we can say for sure is that there will be a lot more
startups.  The monolithic, hierarchical companies of the mid 20th
century are being &lt;a href="https://paulgraham.com/highres.html"&gt;replaced&lt;/a&gt; by networks
of smaller companies.  This process is not just something happening
now in Silicon Valley.  It started decades ago, and it's happening
as far afield as the car industry.  It has a long way to run. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
The other big driver of change is that startups are becoming cheaper
to start.  And in fact the two forces are related: the decreasing
cost of starting a startup is one of the reasons startups are
becoming a more normal thing to do.&lt;br/&gt;&lt;br/&gt;The fact that startups need less money means founders will increasingly
have the upper hand over investors.  You still need just as much
of their energy and imagination, but they don't need as much of
your money.  Because founders have the upper hand, they'll retain
an increasingly large share of the stock in, and &lt;a href="https://paulgraham.com/control.html"&gt;control of&lt;/a&gt;, their
companies.  Which means investors will get less stock and less
control.&lt;br/&gt;&lt;br/&gt;Does that mean investors will make less money?  Not necessarily,
because there will be more good startups.  The total amount of
desirable startup stock available to investors will probably increase,
because the number of desirable startups will probably grow faster
than the percentage they sell to investors shrinks.&lt;br/&gt;&lt;br/&gt;There's a rule of thumb in the VC business that there are about 15
companies a year that will be really successful.  Although a lot
of investors unconsciously treat this number as if it were some
sort of cosmological constant, I'm certain it isn't.   There are
probably limits on the rate at which technology can develop, but
that's not the limiting factor now.  If it were, each successful
startup would be founded the month it became possible, and that is
not the case. Right now the limiting factor on the number of big
hits is the number of sufficiently good founders starting companies,
and that number can and will increase.  There are still a lot of
people who'd make great founders who never end up starting a company.
You can see that from how randomly some of the most successful
startups got started.  So many of the biggest startups almost didn't
happen that there must be a lot of equally good startups that
actually didn't happen.&lt;br/&gt;&lt;br/&gt;There might be 10x or even 50x more good founders out there.  As
more of them go ahead and start startups, those 15 big hits a year
could easily become 50 or even 100.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;What about returns, though?  Are we heading for a world in which
returns will be pinched by increasingly high valuations?  I think
the top firms will actually make more money than they have in the
past.  High returns don't come from investing at low valuations.
They come from investing in the companies that do really well.  So
if there are more of those to be had each year, the best pickers
should have more hits.&lt;br/&gt;&lt;br/&gt;This means there should be more variability in the VC business.
The firms that can recognize and attract the best startups will do
even better, because there will be more of them to recognize and
attract.  Whereas the bad firms will get the leftovers, as they do
now, and yet pay a higher price for them.&lt;br/&gt;&lt;br/&gt;Nor do I think it will be a problem that founders keep control of
their companies for longer.  The empirical evidence on that is
already clear: investors make more money as founders' bitches than
their bosses.  Though somewhat humiliating, this is actually good
news for investors, because it takes less time to serve founders
than to micromanage them.&lt;br/&gt;&lt;br/&gt;What about angels?  I think there is a lot of opportunity there.
It used to suck to be an angel investor.  You couldn't get access
to the best deals, unless you got lucky like Andy Bechtolsheim, and
when you did invest in a startup, VCs might try to strip you of
your stock when they arrived later.  Now an angel can go to something
like Demo Day or AngelList and have access to the same deals VCs
do.  And the days when VCs could wash angels out of the cap table
are long gone.&lt;br/&gt;&lt;br/&gt;I think one of the biggest unexploited opportunities in startup
investing right now is angel-sized investments made quickly.  Few
investors understand the cost that raising money from them imposes
on startups.  When the company consists only of the founders,
everything grinds to a halt during fundraising, which can easily
take 6 weeks.  The current high cost of fundraising means there is
room for low-cost investors to undercut the rest.  And in this
context, low-cost means deciding quickly.  If there were a reputable
investor who invested $100k on good terms and promised to decide
yes or no within 24 hours, they'd get access to almost all the best
deals, because every good startup would approach them first.  It
would be up to them to pick, because every bad startup would approach
them first too, but at least they'd see everything.  Whereas if an
investor is notorious for taking a long time to make up their mind
or negotiating a lot about valuation, founders will save them for
last.  And in the case of the most promising startups, which tend
to have an easy time raising money, last can easily become never.&lt;br/&gt;&lt;br/&gt;Will the number of big hits grow linearly with the total number of
new startups?  Probably not, for two reasons.  One is that the
scariness of starting a startup in the old days was a pretty effective
filter.  Now that the cost of failing is becoming lower, we should
expect founders to do it more.  That's not a bad thing.  It's common
in technology for an innovation that decreases the cost of failure
to increase the number of failures and yet leave you net ahead.&lt;br/&gt;&lt;br/&gt;The other reason the number of big hits won't grow proportionately
to the number of startups is that there will start to be an increasing
number of idea clashes.  Although the finiteness of the number of
good ideas is not the reason there are only 15 big hits a year, the
number has to be finite, and the more startups there are, the more
we'll see multiple companies doing the same thing at the same time.
It will be interesting, in a bad way, if idea clashes become a lot
more common. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/invtrend.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Mostly because of the increasing number of early failures, the startup
business of the future won't simply be the same shape, scaled up.
What used to be an obelisk will become a pyramid.  It will be a
little wider at the top, but a lot wider at the bottom.&lt;br/&gt;&lt;br/&gt;What does that mean for investors?  One thing it means is that there
will be more opportunities for investors at the earliest stage,
because that's where the volume of our imaginary solid is growing
fastest.  Imagine the obelisk of investors that corresponds to
the obelisk of startups.  As it widens out into a pyramid to match
the startup pyramid, all the contents are adhering to the top,
leaving a vacuum at the bottom.&lt;br/&gt;&lt;br/&gt;That opportunity for investors mostly means an opportunity for new
investors, because the degree of risk an existing investor or firm
is comfortable taking is one of the hardest things for them to
change.  Different types of investors are adapted to different
degrees of risk, but each has its specific degree of risk deeply
imprinted on it, not just in the procedures they follow but in the
personalities of the people who work there.&lt;br/&gt;&lt;br/&gt;I think the biggest danger for VCs, and also the biggest opportunity,
is at the series A stage.  Or rather, what used to be the series A
stage before series As turned into de facto series B rounds.&lt;br/&gt;&lt;br/&gt;Right now, VCs often knowingly invest too much money at the series
A stage.  They do it because they feel they need to get a big chunk
of each series A company to compensate for the opportunity cost of
the board seat it consumes.  Which means when there is a lot of
competition for a deal, the number that moves is the valuation (and
thus amount invested) rather than the percentage of the company
being sold.  Which means, especially in the case of more promising
startups, that series A investors often make companies take more
money than they want.&lt;br/&gt;&lt;br/&gt;Some VCs lie and claim the company really needs that much.  Others
are more candid, and admit their financial models require them to
own a certain percentage of each company.  But we all know the
amounts being raised in series A rounds are not determined by asking
what would be best for the companies.  They're determined by VCs
starting from the amount of the company they want to own, and the
market setting the valuation and thus the amount invested.&lt;br/&gt;&lt;br/&gt;Like a lot of bad things, this didn't happen intentionally.  The
VC business backed into it as their initial assumptions gradually
became obsolete.  The traditions and financial models of the VC
business were established when founders needed investors more.  In
those days it was natural for founders to sell VCs a big chunk of
their company in the series A round.  Now founders would prefer to
sell less, and VCs are digging in their heels because they're not
sure if they can make money buying less than 20% of each series A
company.&lt;br/&gt;&lt;br/&gt;The reason I describe this as a danger is that series A investors
are increasingly at odds with the startups they supposedly serve,
and that tends to come back to bite you eventually.  The reason I
describe it as an opportunity is that there is now a lot of potential
energy built up, as the market has moved away from VCs' traditional
business model.  Which means the first VC to break ranks and start
to do series A rounds for as much equity as founders want to sell
(and with no "option pool" that comes only from the founders' shares)
stands to reap huge benefits.&lt;br/&gt;&lt;br/&gt;What will happen to the VC business when that happens?  Hell if I
know.  But I bet that particular firm will end up ahead.  If one
top-tier VC firm started to do series A rounds that started from
the amount the company needed to raise and let the percentage
acquired vary with the market, instead of the other way around,
they'd instantly get almost all the best startups.  And that's where
the money is.&lt;br/&gt;&lt;br/&gt;You can't fight market forces forever.  Over the last decade we've
seen the percentage of the company sold in series A rounds creep
inexorably downward.  40% used to be common.  Now VCs are fighting
to hold the line at 20%.  But I am daily waiting for the line to
collapse.  It's going to happen.  You may as well anticipate it,
and look bold.&lt;br/&gt;&lt;br/&gt;Who knows, maybe VCs will make more money by doing the right thing.
It wouldn't be the first time that happened.  Venture capital is a
business where occasional big successes generate hundredfold returns.
How much confidence can you really have in financial models for
something like that anyway?  The
big successes only have to get a tiny bit less occasional to
compensate for a 2x decrease in the stock sold in series A rounds.&lt;br/&gt;&lt;br/&gt;If you want to find new opportunities for investing, look for things
founders complain about.  Founders are your customers, and the
things they complain about are unsatisfied demand.  I've given two
examples of things founders complain about most—investors who
take too long to make up their minds, and excessive dilution in
series A rounds—so those are good places to look now.  But
the more general recipe is: do something founders want.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I realize revenue and not fundraising is the proper test of
success for a startup.  The reason we quote statistics about
fundraising is because those are the numbers we have.  We couldn't
talk meaningfully about revenues without including the numbers from
the most successful startups, and we don't have those.  We often
discuss revenue growth with the earlier stage startups, because
that's how we gauge their progress, but when companies reach a
certain size it gets presumptuous for a seed investor to do that.&lt;br/&gt;&lt;br/&gt;In any case, companies' market caps do eventually become a function
of revenues, and post-money valuations of funding rounds are at
least guesses by pros about where those market caps will end up.&lt;br/&gt;&lt;br/&gt;The reason only 287 have valuations is that the rest have mostly
raised money on convertible notes, and although convertible notes
often have valuation caps, a valuation cap is merely an upper bound
on a valuation.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
We didn't try to accept a particular number.  We have no way
of doing that even if we wanted to.  We just tried to be significantly
pickier.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Though you never know with bottlenecks, I'm guessing the next
one will be coordinating efforts among partners.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
I realize starting a company doesn't have to mean starting a
&lt;a href="https://paulgraham.com/growth.html"&gt;startup&lt;/a&gt;.  There will be lots of people starting normal companies
too.  But that's not relevant to an audience of investors.&lt;br/&gt;&lt;br/&gt;Geoff Ralston reports that in Silicon Valley it seemed thinkable
to start a startup in the mid 1980s.  It would have started there.
But I know it didn't to undergraduates on the East Coast.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
This trend is one of the main causes of the increase in
economic inequality in the US since the mid twentieth century.  The
person who would in 1950 have been the general manager of the x
division of Megacorp is now the founder of the x company, and owns
significant equity in it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
If Congress passes the &lt;a href="https://paulgraham.com/foundervisa.html"&gt;founder
visa&lt;/a&gt; in a non-broken form, that alone could in principle get
us up to 20x, since 95% of the world's population lives outside the
US.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
If idea clashes got bad enough, it could change what it means
to be a startup.  We currently advise startups mostly to ignore
competitors.  We tell them startups are competitive like running,
not like soccer; you don't have to go and steal the ball away from
the other team.  But if idea clashes became common enough, maybe
you'd start to have to.  That would be unfortunate.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Dalton Caldwell,
Patrick Collison, Jessica
Livingston, Andrew Mason, Geoff Ralston, and Garry Tan for reading
drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//invtrend.html</guid>
      <pubDate>Sat, 01 Jun 2013 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Get Startup Ideas</title>
      <link>https://paulgraham.com//startupideas.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
November 2012&lt;br/&gt;&lt;br/&gt;The way to get startup ideas is not to try to think of startup
ideas&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
November 2012&lt;br/&gt;&lt;br/&gt;The way to get startup ideas is not to try to think of startup
ideas.  It's to look for problems, preferably problems you have
yourself.&lt;br&gt;&lt;br/&gt;The very best startup ideas tend to have three things in common:
they're something the founders themselves want, that they themselves
can build, and that few others realize are worth doing.  Microsoft,
Apple, Yahoo, Google, and Facebook all began this way.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Problems&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Why is it so important to work on a problem you have?  Among other
things, it ensures the problem really exists.  It sounds obvious
to say you should only work on problems that exist.  And yet by far
the most common mistake startups make is to solve problems no one
has.&lt;br/&gt;&lt;br/&gt;I made it myself.  In 1995 I started a company to put art galleries
online.  But galleries didn't want to be online.  It's not how the
art business works.  So why did I spend 6 months working on this
stupid idea?  Because I didn't pay attention to users.  I invented
a model of the world that didn't correspond to reality, and worked
from that.  I didn't notice my model was wrong until I tried
to convince users to pay for what we'd built.  Even then I took
embarrassingly long to catch on.  I was attached to my model of the
world, and I'd spent a lot of time on the software.  They had to
want it!&lt;br/&gt;&lt;br/&gt;Why do so many founders build things no one wants?  Because they
begin by trying to think of startup ideas.  That m.o. is doubly
dangerous: it doesn't merely yield few good ideas; it yields bad
ideas that sound plausible enough to fool you into working on them.&lt;br/&gt;&lt;br/&gt;At YC we call these "made-up" or "sitcom" startup ideas.  Imagine
one of the characters on a TV show was starting a startup.  The
writers would have to invent something for it to do.  But coming
up with good startup ideas is hard.  It's not something you can do
for the asking.  So (unless they got amazingly lucky) the writers
would come up with an idea that sounded plausible, but was actually
bad.&lt;br/&gt;&lt;br/&gt;For example, a social network for pet owners.  It doesn't sound
obviously mistaken.  Millions of people have pets.  Often they care
a lot about their pets and spend a lot of money on them.  Surely
many of these people would like a site where they could talk to
other pet owners.  Not all of them perhaps, but if just 2 or 3
percent were regular visitors, you could have millions of users.
You could serve them targeted offers, and maybe charge for premium
features. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The danger of an idea like this is that when you run it by your
friends with pets, they don't say "I would &lt;i&gt;never&lt;/i&gt; use this." They
say "Yeah, maybe I could see using something like that." Even when
the startup launches, it will sound plausible to a lot of people.
They don't want to use it themselves, at least not right now, but
they could imagine other people wanting it.  Sum that reaction
across the entire population, and you have zero users. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Well&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When a startup launches, there have to be at least some users who
really need what they're making — not just people who could see
themselves using it one day, but who want it urgently.  Usually
this initial group of users is small, for the simple reason that
if there were something that large numbers of people urgently needed
and that could be built with the amount of effort a startup usually
puts into a version one, it would probably already exist.  Which
means you have to compromise on one dimension: you can either build
something a large number of people want a small amount, or something
a small number of people want a large amount.  Choose the latter.
Not all ideas of that type are good startup ideas, but nearly all
good startup ideas are of that type.&lt;br/&gt;&lt;br/&gt;Imagine a graph whose x axis represents all the people who might
want what you're making and whose y axis represents how much they
want it.  If you invert the scale on the y axis, you can envision
companies as holes.  Google is an immense crater: hundreds of
millions of people use it, and they need it a lot.  A startup just
starting out can't expect to excavate that much volume.  So you
have two choices about the shape of hole you start with.  You can
either dig a hole that's broad but shallow, or one that's narrow
and deep, like a well.&lt;br/&gt;&lt;br/&gt;Made-up startup ideas are usually of the first type.  Lots of people
are mildly interested in a social network for pet owners.&lt;br/&gt;&lt;br/&gt;Nearly all good startup ideas are of the second type.  Microsoft
was a well when they made Altair Basic.  There were only a couple
thousand Altair owners, but without this software they were programming
in machine language.  Thirty years later Facebook had the same
shape.  Their first site was exclusively for Harvard students, of
which there are only a few thousand, but those few thousand users
wanted it a lot.&lt;br/&gt;&lt;br/&gt;When you have an idea for a startup, ask yourself: who wants this
right now?  Who wants this so much that they'll use it even when
it's a crappy version one made by a two-person startup they've never
heard of?  If you can't answer that, the idea is probably bad. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;You don't need the narrowness of the well per se.  It's depth you
need; you get narrowness as a byproduct of optimizing for depth
(and speed).  But you almost always do get it.  In practice the
link between depth and narrowness is so strong that it's a good
sign when you know that an idea will appeal strongly to a specific
group or type of user.&lt;br/&gt;&lt;br/&gt;But while demand shaped like a well is almost a necessary condition
for a good startup idea, it's not a sufficient one.  If Mark
Zuckerberg had built something that could only ever have appealed
to Harvard students, it would not have been a good startup idea.
Facebook was a good idea because it started with a small market
there was a fast path out of.  Colleges are similar enough that if
you build a facebook that works at Harvard, it will work at any
college. So you spread rapidly through all the colleges.  Once you
have all the college students, you get everyone else simply by
letting them in.&lt;br/&gt;&lt;br/&gt;Similarly for Microsoft: Basic for the Altair; Basic for other
machines; other languages besides Basic; operating systems;
applications; IPO.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Self&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;How do you tell whether there's a path out of an idea?  How do you
tell whether something is the germ of a giant company, or just a
niche product?  Often you can't. The founders of Airbnb didn't
realize at first how big a market they were tapping.  Initially
they had a much narrower idea.  They were going to let hosts rent
out space on their floors during conventions.  They didn't foresee
the expansion of this idea; it forced itself upon them gradually.
All they knew at first is that they were onto something.  That's
probably as much as Bill Gates or Mark Zuckerberg knew at first.&lt;br/&gt;&lt;br/&gt;Occasionally it's obvious from the beginning when there's a path
out of the initial niche.  And sometimes I can see a path that's
not immediately obvious; that's one of our specialties at YC.  But
there are limits to how well this can be done, no matter how much
experience you have.  The most important thing to understand about
paths out of the initial idea is the meta-fact that these are hard
to see.&lt;br/&gt;&lt;br/&gt;So if you can't predict whether there's a path out of an idea, how
do you choose between ideas?  The truth is disappointing but
interesting: if you're the right sort of person, you have the right
sort of hunches.  If you're at the leading edge of a field that's
changing fast, when you have a hunch that something is worth doing,
you're more likely to be right.&lt;br/&gt;&lt;br/&gt;In &lt;i&gt;Zen and the Art of Motorcycle Maintenance&lt;/i&gt;, Robert Pirsig says:
&lt;blockquote&gt;
  You want to know how to paint a perfect painting? It's easy.  Make
  yourself perfect and then just paint naturally.
&lt;/blockquote&gt;
I've wondered about that passage since I read it in high school.
I'm not sure how useful his advice is for painting specifically,
but it fits this situation well.  Empirically, the way to have good
startup ideas is to become the sort of person who has them.&lt;br/&gt;&lt;br/&gt;Being at the leading edge of a field doesn't mean you have to be
one of the people pushing it forward.  You can also be at the leading
edge as a user.  It was not so much because he was a programmer
that Facebook seemed a good idea to Mark Zuckerberg as because he
used computers so much.  If you'd asked most 40 year olds in 2004
whether they'd like to publish their lives semi-publicly on the
Internet, they'd have been horrified at the idea.  But Mark already
lived online; to him it seemed natural.&lt;br/&gt;&lt;br/&gt;Paul Buchheit says that people at the leading edge of a rapidly
changing field "live in the future."  Combine that with Pirsig and
you get:
&lt;blockquote&gt;
  Live in the future, then build what's missing.
&lt;/blockquote&gt;
That describes the way many if not most of the biggest startups got
started.  Neither Apple nor Yahoo nor Google nor Facebook were even
supposed to be companies at first.  They grew out of things their
founders built because there seemed a gap in the world.&lt;br/&gt;&lt;br/&gt;If you look at the way successful founders have had their ideas,
it's generally the result of some external stimulus hitting a
prepared mind.  Bill Gates and Paul Allen hear about the Altair and
think "I bet we could write a Basic interpreter for it." Drew Houston
realizes he's forgotten his USB stick and thinks "I really need to
make my files live online." Lots of people heard about the Altair.
Lots forgot USB sticks.  The reason those stimuli caused those
founders to start companies was that their experiences had prepared
them to notice the opportunities they represented.&lt;br/&gt;&lt;br/&gt;The verb you want to be using with respect to startup ideas is not
"think up" but "notice." At YC we call ideas that grow naturally
out of the founders' own experiences "organic" startup ideas.  The
most successful startups almost all begin this way.&lt;br/&gt;&lt;br/&gt;That may not have been what you wanted to hear.  You may have
expected recipes for coming up with startup ideas, and instead I'm
telling you that the key is to have a mind that's prepared in the
right way.  But disappointing though it may be, this is the truth.
And it is a recipe of a sort, just one that in the worst case takes
a year rather than a weekend.&lt;br/&gt;&lt;br/&gt;If you're not at the leading edge of some rapidly changing field,
you can get to one.  For example, anyone reasonably smart can
probably get to an edge of programming (e.g. building mobile apps)
in a year.  Since a successful startup will consume at least 3-5
years of your life, a year's preparation would be a reasonable
investment.  Especially if you're also looking for a cofounder.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;You don't have to learn programming to be at the leading edge of a
domain that's changing fast.  Other domains change fast.  But while
learning to hack is not necessary, it is for the forseeable future
sufficient. As Marc Andreessen put it, software is eating the world,
and this trend has decades left to run.&lt;br/&gt;&lt;br/&gt;Knowing how to hack also means that when you have ideas, you'll be
able to implement them.  That's not absolutely necessary (Jeff Bezos
couldn't) but it's an advantage.  It's a big advantage, when you're
considering an idea like putting a college facebook online, if
instead of merely thinking "That's an interesting idea," you can
think instead "That's an interesting idea.  I'll try building an
initial version tonight."  It's even better when you're both a
programmer and the target user, because then the cycle of generating
new versions and testing them on users can happen inside one head.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Noticing&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Once you're living in the future in some respect, the way to notice
startup ideas is to look for things that seem to be missing.  If
you're really at the leading edge of a rapidly changing field, there
will be things that are obviously missing.  What won't be obvious
is that they're startup ideas.  So if you want to find startup
ideas, don't merely turn on the filter "What's missing?" Also turn
off every other filter, particularly "Could this be a big company?"
There's plenty of time to apply that test later.  But if you're
thinking about that initially, it may not only filter out lots
of good ideas, but also cause you to focus on bad ones.&lt;br/&gt;&lt;br/&gt;Most things that are missing will take some time to see.  You almost
have to trick yourself into seeing the ideas around you.&lt;br/&gt;&lt;br/&gt;But you &lt;i&gt;know&lt;/i&gt; the ideas are out there.  This is not one of those
problems where there might not be an answer.  It's impossibly
unlikely that this is the exact moment when technological progress
stops.  You can be sure people are going to build things in the
next few years that will make you think "What did I do before x?"&lt;br/&gt;&lt;br/&gt;And when these problems get solved, they will probably seem flamingly
obvious in retrospect.  What you need to do is turn off the filters
that usually prevent you from seeing them.  The most powerful is
simply taking the current state of the world for granted.  Even the
most radically open-minded of us mostly do that.  You couldn't get
from your bed to the front door if you stopped to question everything.&lt;br/&gt;&lt;br/&gt;But if you're looking for startup ideas you can sacrifice some of
the efficiency of taking the status quo for granted and start to
question things.  Why is your inbox overflowing?  Because you get
a lot of email, or because it's hard to get email out of your inbox?
Why do you get so much email?  What problems are people trying to
solve by sending you email?  Are there better ways to solve them?
And why is it hard to get emails out of your inbox?  Why do you
keep emails around after you've read them?  Is an inbox the optimal
tool for that?&lt;br/&gt;&lt;br/&gt;Pay particular attention to things that chafe you.  The advantage
of taking the status quo for granted is not just that it makes life
(locally) more efficient, but also that it makes life more tolerable.
If you knew about all the things we'll get in the next 50 years but
don't have yet, you'd find present day life pretty constraining,
just as someone from the present would if they were sent back 50
years in a time machine.  When something annoys you, it could be
because you're living in the future.&lt;br/&gt;&lt;br/&gt;When you find the right sort of problem, you should probably be
able to describe it as &lt;i&gt;obvious&lt;/i&gt;, at least to you.  When we started
Viaweb, all the online stores were built by hand, by web designers
making individual HTML pages.  It was obvious to us as programmers
that these sites would have to be generated by software.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Which means, strangely enough, that coming up with startup ideas
is a question of seeing the obvious.  That suggests how weird this
process is: you're trying to see things that are obvious, and yet
that you hadn't seen.&lt;br/&gt;&lt;br/&gt;Since what you need to do here is loosen up your own mind, it may
be best not to make too much of a direct frontal attack on the
problem — i.e. to sit down and try to think of ideas.  The best
plan may be just to keep a background process running, looking for
things that seem to be missing.  Work on hard problems, driven
mainly by curiosity, but have a second self watching over your
shoulder, taking note of gaps and anomalies.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Give yourself some time.  You have a lot of control over the rate
at which you turn yours into a prepared mind, but you have less
control over the stimuli that spark ideas when they hit it.  If
Bill Gates and Paul Allen had constrained themselves to come up
with a startup idea in one month, what if they'd chosen a month
before the Altair appeared?  They probably would have worked on a
less promising idea.  Drew Houston did work on a less promising
idea before Dropbox: an SAT prep startup.  But Dropbox was a much
better idea, both in the absolute sense and also as a match for his
skills.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A good way to trick yourself into noticing ideas is to work on
projects that seem like they'd be cool.  If you do that, you'll
naturally tend to build things that are missing.  It wouldn't seem
as interesting to build something that already existed.&lt;br/&gt;&lt;br/&gt;Just as trying to think up startup ideas tends to produce bad ones,
working on things that could be dismissed as "toys" often produces
good ones.  When something is described as a toy, that means it has
everything an idea needs except being important.  It's cool; users
love it; it just doesn't matter.  But if you're living in the future
and you build something cool that users love, it may matter more
than outsiders think.  Microcomputers seemed like toys when Apple
and Microsoft started working on them.  I'm old enough to remember
that era; the usual term for people with their own microcomputers
was "hobbyists."  BackRub seemed like an inconsequential science
project.  The Facebook was just a way for undergrads to stalk one
another.&lt;br/&gt;&lt;br/&gt;At YC we're excited when we meet startups working on things that
we could imagine know-it-alls on forums dismissing as toys.  To us
that's positive evidence an idea is good.&lt;br/&gt;&lt;br/&gt;If you can afford to take a long view (and arguably you can't afford
not to), you can turn "Live in the future and build what's missing"
into something even better:
&lt;blockquote&gt;
  Live in the future and build what seems interesting.
&lt;/blockquote&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;School&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;That's what I'd advise college students to do, rather than trying
to learn about "entrepreneurship."  "Entrepreneurship" is something
you learn best by doing it.  The examples of the most successful
founders make that clear.  What you should be spending your time
on in college is ratcheting yourself into the future.  College is
an incomparable opportunity to do that.  What a waste to sacrifice
an opportunity to solve the hard part of starting a startup — becoming 
the sort of person who can have organic startup ideas — by 
spending time learning about the easy part.  Especially since
you won't even really learn about it, any more than you'd learn
about sex in a class.  All you'll learn is the words for things.&lt;br/&gt;&lt;br/&gt;The clash of domains is a particularly fruitful source of ideas.
If you know a lot about programming and you start learning about
some other field, you'll probably see problems that software could
solve.  In fact, you're doubly likely to find good problems in
another domain: (a) the inhabitants of that domain are not as likely
as software people to have already solved their problems with
software, and (b) since you come into the new domain totally ignorant,
you don't even know what the status quo is to take it for granted.&lt;br/&gt;&lt;br/&gt;So if you're a CS major and you want to start a startup, instead
of taking a class on entrepreneurship you're better off taking a
class on, say, genetics.  Or better still, go work for a biotech
company.  CS majors normally get summer jobs at computer hardware
or software companies.  But if you want to find startup ideas, you
might do better to get a summer job in some unrelated field. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Or don't take any extra classes, and just build things.  It's no
coincidence that Microsoft and Facebook both got started in January.
At Harvard that is (or was) Reading Period, when students have no
classes to attend because they're supposed to be studying for finals.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But don't feel like you have to build things that will become startups.  That's
premature optimization. Just build things.  Preferably with other
students.  It's not just the classes that make a university such a
good place to crank oneself into the future.  You're also surrounded
by other people trying to do the same thing.  If you work together
with them on projects, you'll end up producing not just organic
ideas, but organic ideas with organic founding teams — and that,
empirically, is the best combination.&lt;br/&gt;&lt;br/&gt;Beware of research.  If an undergrad writes something all his friends
start using, it's quite likely to represent a good startup idea.
Whereas a PhD dissertation is extremely unlikely to.  For some
reason, the more a project has to count as research, the less likely
it is to be something that could be turned into a startup.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
I think the reason is that the subset of ideas that count as research
is so narrow that it's unlikely that a project that satisfied that
constraint would also satisfy the orthogonal constraint of solving
users' problems.  Whereas when students (or professors) build
something as a side-project, they automatically gravitate toward
solving users' problems — perhaps even with an additional energy
that comes from being freed from the constraints of research.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Competition&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Because a good idea should seem obvious, when you have one you'll
tend to feel that you're late.  Don't let that deter you.  Worrying
that you're late is one of the signs of a good idea.  Ten minutes
of searching the web will usually settle the question.  Even if you
find someone else working on the same thing, you're probably not
too late.  It's exceptionally rare for startups to be killed by
competitors — so rare that you can almost discount the possibility.
So unless you discover a competitor with the sort of lock-in that
would prevent users from choosing you, don't discard the idea.&lt;br/&gt;&lt;br/&gt;If you're uncertain, ask users.  The question of whether you're too
late is subsumed by the question of whether anyone urgently needs
what you plan to make.  If you have something that no competitor
does and that some subset of users urgently need, you have a
beachhead.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The question then is whether that beachhead is big enough. Or more
importantly, who's in it: if the beachhead consists of people doing
something lots more people will be doing in the future, then it's
probably big enough no matter how small it is.  For example, if
you're building something differentiated from competitors by the
fact that it works on phones, but it only works on the newest phones,
that's probably a big enough beachhead.&lt;br/&gt;&lt;br/&gt;Err on the side of doing things where you'll face competitors.
Inexperienced founders usually give competitors more credit than
they deserve.  Whether you succeed depends far more on you than on
your competitors.  So better a good idea with competitors than a
bad one without.&lt;br/&gt;&lt;br/&gt;You don't need to worry about entering a "crowded market" so long
as you have a thesis about what everyone else in it is overlooking.
In fact that's a very promising starting point.  Google was that
type of idea.  Your thesis has to be more precise than "we're going
to make an x that doesn't suck" though. You have to be able to
phrase it in terms of something the incumbents are overlooking.
Best of all is when you can say that they didn't have the courage
of their convictions, and that your plan is what they'd have done
if they'd followed through on their own insights.  Google was that
type of idea too.  The search engines that preceded them shied away
from the most radical implications of what they were doing — particularly 
that the better a job they did, the faster users would
leave.&lt;br/&gt;&lt;br/&gt;A crowded market is actually a good sign, because it means both
that there's demand and that none of the existing solutions are
good enough.  A startup can't hope to enter a market that's obviously
big and yet in which they have no competitors.  So any startup that
succeeds is either going to be entering a market with existing
competitors, but armed with some secret weapon that will get them
all the users (like Google), or entering a market that looks small
but which will turn out to be big (like Microsoft).  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Filters&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There are two more filters you'll need to turn off if you want to
notice startup ideas: the unsexy filter and the schlep filter.&lt;br/&gt;&lt;br/&gt;Most programmers wish they could start a startup by just writing
some brilliant code, pushing it to a server, and having users pay
them lots of money.  They'd prefer not to deal with tedious problems
or get involved in messy ways with the real world.  Which is a
reasonable preference, because such things slow you down.  But this
preference is so widespread that the space of convenient startup
ideas has been stripped pretty clean.  If you let your mind wander
a few blocks down the street to the messy, tedious ideas, you'll
find valuable ones just sitting there waiting to be implemented.&lt;br/&gt;&lt;br/&gt;The schlep filter is so dangerous that I wrote a separate essay
about the condition it induces, which I called 
&lt;a href="https://paulgraham.com/schlep.html"&gt;schlep blindness&lt;/a&gt;.
I gave Stripe as an example of a startup that benefited from turning
off this filter, and a pretty striking example it is.  Thousands
of programmers were in a position to see this idea; thousands of
programmers knew how painful it was to process payments before
Stripe.  But when they looked for startup ideas they didn't see
this one, because unconsciously they shrank from having to deal
with payments.  And dealing with payments is a schlep for Stripe,
but not an intolerable one.  In fact they might have had net less
pain; because the fear of dealing with payments kept most people
away from this idea, Stripe has had comparatively smooth sailing
in other areas that are sometimes painful, like user acquisition.
They didn't have to try very hard to make themselves heard by users,
because users were desperately waiting for what they were building.&lt;br/&gt;&lt;br/&gt;The unsexy filter is similar to the schlep filter, except it keeps
you from working on problems you despise rather than ones you fear.
We overcame this one to work on Viaweb. There were interesting
things about the architecture of our software, but we weren't
interested in ecommerce per se.  We could see the problem was one
that needed to be solved though.&lt;br/&gt;&lt;br/&gt;Turning off the schlep filter is more important than turning off
the unsexy filter, because the schlep filter is more likely to be
an illusion.  And even to the degree it isn't, it's a worse form
of self-indulgence.  Starting a successful startup is going to be
fairly laborious no matter what.  Even if the product doesn't entail
a lot of schleps, you'll still have plenty dealing with investors,
hiring and firing people, and so on.  So if there's some idea you
think would be cool but you're kept away from by fear of the schleps
involved, don't worry: any sufficiently good idea will have as many.&lt;br/&gt;&lt;br/&gt;The unsexy filter, while still a source of error, is not as entirely
useless as the schlep filter.  If you're at the leading edge of a
field that's changing rapidly, your ideas about what's sexy will
be somewhat correlated with what's valuable in practice.  Particularly
as you get older and more experienced.  Plus if you find an idea
sexy, you'll work on it more enthusiastically. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Recipes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;While the best way to discover startup ideas is to become the sort
of person who has them and then build whatever interests you,
sometimes you don't have that luxury.  Sometimes you need an idea
now.  For example, if you're working on a startup and your initial
idea turns out to be bad.&lt;br/&gt;&lt;br/&gt;For the rest of this essay I'll talk about tricks for coming up
with startup ideas on demand.  Although empirically you're better
off using the organic strategy, you could succeed this way. You
just have to be more disciplined.  When you use the organic method,
you don't even notice an idea unless it's evidence that something
is truly missing.  But when you make a conscious effort to think
of startup ideas, you have to replace this natural constraint with
self-discipline.  You'll see a lot more ideas, most of them bad,
so you need to be able to filter them.&lt;br/&gt;&lt;br/&gt;One of the biggest dangers of not using the organic method is the
example of the organic method.  Organic ideas feel like inspirations.
There are a lot of stories about successful startups that began
when the founders had what seemed a crazy idea but "just knew" it
was promising.  When you feel that about an idea you've had while
trying to come up with startup ideas, you're probably mistaken.&lt;br/&gt;&lt;br/&gt;When searching for ideas, look in areas where you have some expertise.
If you're a database expert, don't build a chat app for teenagers
(unless you're also a teenager).  Maybe it's a good idea, but you
can't trust your judgment about that, so ignore it.  There have to
be other ideas that involve databases, and whose quality you can
judge.  Do you find it hard to come up with good ideas involving
databases?  That's because your expertise raises your standards.
Your ideas about chat apps are just as bad, but you're giving
yourself a Dunning-Kruger pass in that domain.&lt;br/&gt;&lt;br/&gt;The place to start looking for ideas is things you need.  There
&lt;i&gt;must&lt;/i&gt; be things you need.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f14n"&gt;&lt;font color="#999999"&gt;14&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One good trick is to ask yourself whether in your previous job you
ever found yourself saying "Why doesn't someone make x?  If someone
made x we'd buy it in a second." If you can think of any x people
said that about, you probably have an idea.  You know there's demand,
and people don't say that about things that are impossible to build.&lt;br/&gt;&lt;br/&gt;More generally, try asking yourself whether there's something unusual
about you that makes your needs different from most other people's.
You're probably not the only one.  It's especially good if you're
different in a way people will increasingly be.&lt;br/&gt;&lt;br/&gt;If you're changing ideas, one unusual thing about you is the idea
you'd previously been working on.  Did you discover any needs while
working on it?  Several well-known startups began this way.  Hotmail
began as something its founders wrote to talk about their previous
startup idea while they were working at their day jobs. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f15n"&gt;&lt;font color="#999999"&gt;15&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A particularly promising way to be unusual is to be young.  Some
of the most valuable new ideas take root first among people in their
teens and early twenties.  And while young founders are at a
disadvantage in some respects, they're the only ones who really
understand their peers.  It would have been very hard for someone
who wasn't a college student to start Facebook.  So if you're a
young founder (under 23 say), are there things you and your friends
would like to do that current technology won't let you?&lt;br/&gt;&lt;br/&gt;The next best thing to an unmet need of your own is an unmet need
of someone else.  Try talking to everyone you can about the gaps
they find in the world.  What's missing?  What would they like to
do that they can't?  What's tedious or annoying, particularly in
their work?  Let the conversation get general; don't be trying too
hard to find startup ideas.  You're just looking for something to
spark a thought.  Maybe you'll notice a problem they didn't consciously
realize they had, because you know how to solve it.&lt;br/&gt;&lt;br/&gt;When you find an unmet need that isn't your own, it may be somewhat
blurry at first.  The person who needs something may not know exactly
what they need.  In that case I often recommend that founders act
like consultants — that they do what they'd do if they'd been
retained to solve the problems of this one user.  People's problems
are similar enough that nearly all the code you write this way will
be reusable, and whatever isn't will be a small price to start out
certain that you've reached the bottom of the well.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f16n"&gt;&lt;font color="#999999"&gt;16&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One way to ensure you do a good job solving other people's problems
is to make them your own.  When Rajat Suri of E la Carte decided
to write software for restaurants, he got a job as a waiter to learn
how restaurants worked.  That may seem like taking things to extremes,
but startups are extreme.  We love it when founders do such things.&lt;br/&gt;&lt;br/&gt;In fact, one strategy I recommend to people who need a new idea is
not merely to turn off their schlep and unsexy filters, but to seek
out ideas that are unsexy or involve schleps.  Don't try to start
Twitter.  Those ideas are so rare that you can't find them by looking
for them.  Make something unsexy that people will pay you for.&lt;br/&gt;&lt;br/&gt;A good trick for bypassing the schlep and to some extent the unsexy
filter is to ask what you wish someone else would build, so that
you could use it.  What would you pay for right now?&lt;br/&gt;&lt;br/&gt;Since startups often garbage-collect broken companies and industries,
it can be a good trick to look for those that are dying, or deserve
to, and try to imagine what kind of company would profit from their
demise.  For example, journalism is in free fall at the moment.
But there may still be money to be made from something like journalism.
What sort of company might cause people in the future to say "this
replaced journalism" on some axis?&lt;br/&gt;&lt;br/&gt;But imagine asking that in the future, not now.  When one company
or industry replaces another, it usually comes in from the side.
So don't look for a replacement for x; look for something that
people will later say turned out to be a replacement for x.  And
be imaginative about the axis along which the replacement occurs.
Traditional journalism, for example, is a way for readers to get
information and to kill time, a way for writers to make money and
to get attention, and a vehicle for several different types of
advertising.  It could be replaced on any of these axes (it has
already started to be on most).&lt;br/&gt;&lt;br/&gt;When startups consume incumbents, they usually start by serving
some small but important market that the big players ignore.  It's
particularly good if there's an admixture of disdain in the big
players' attitude, because that often misleads them.  For example,
after Steve Wozniak built the computer that became the Apple I, he
felt obliged to give his then-employer Hewlett-Packard the option
to produce it.  Fortunately for him, they turned it down, and one
of the reasons they did was that it used a TV for a monitor, which
seemed intolerably déclassé to a high-end hardware company like HP
was at the time. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/startupideas.html#f17n"&gt;&lt;font color="#999999"&gt;17&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Are there groups of 
&lt;a href="https://paulgraham.com/marginal.html"&gt;scruffy&lt;/a&gt; 
but sophisticated users like the early
microcomputer "hobbyists" that are currently being ignored by the
big players?  A startup with its sights set on bigger things can
often capture a small market easily by expending an effort that
wouldn't be justified by that market alone.&lt;br/&gt;&lt;br/&gt;Similarly, since the most successful startups generally ride some
wave bigger than themselves, it could be a good trick to look for
waves and ask how one could benefit from them.  The prices of gene
sequencing and 3D printing are both experiencing Moore's Law-like
declines.  What new things will we be able to do in the new world
we'll have in a few years?  What are we unconsciously ruling out
as impossible that will soon be possible?&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Organic&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;But talking about looking explicitly for waves makes it clear that
such recipes are plan B for getting startup ideas.  Looking for
waves is essentially a way to simulate the organic method.  If
you're at the leading edge of some rapidly changing field, you don't
have to look for waves; you are the wave.&lt;br/&gt;&lt;br/&gt;Finding startup ideas is a subtle business, and that's why most
people who try fail so miserably.  It doesn't work well simply to
try to think of startup ideas.  If you do that, you get bad ones
that sound dangerously plausible.  The best approach is more indirect:
if you have the right sort of background, good startup ideas will
seem obvious to you.  But even then, not immediately.  It takes
time to come across situations where you notice something missing.
And often these gaps won't seem to be ideas for companies, just
things that would be interesting to build.  Which is why it's good
to have the time and the inclination to build things just because
they're interesting.&lt;br/&gt;&lt;br/&gt;Live in the future and build what seems interesting.  Strange as
it sounds, that's the real recipe.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
This form of bad idea has been around as long as the web.  It
was common in the 1990s, except then people who had it used to say
they were going to create a portal for x instead of a social network
for x.  Structurally the idea is stone soup: you post a sign saying
"this is the place for people interested in x," and all those people
show up and you make money from them.  What lures founders into
this sort of idea are statistics about the millions of people who
might be interested in each type of x.  What they forget is that
any given person might have 20 affinities by this standard, and no
one is going to visit 20 different communities regularly.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
I'm not saying, incidentally, that I know for sure a social
network for pet owners is a bad idea.  I know it's a bad idea the
way I know randomly generated DNA would not produce a viable organism.
The set of plausible sounding startup ideas is many times larger
than the set of good ones, and many of the good ones don't even
sound that plausible.  So if all you know about a startup idea is
that it sounds plausible, you have to assume it's bad.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
More precisely, the users' need has to give them sufficient
activation energy to start using whatever you make, which can vary
a lot.  For example, the activation energy for enterprise software
sold through traditional channels is very high, so you'd have to
be a &lt;i&gt;lot&lt;/i&gt; better to get users to switch.  Whereas the activation
energy required to switch to a new search engine is low.  Which in
turn is why search engines are so much better than enterprise
software.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
This gets harder as you get older.  While the space of ideas
doesn't have dangerous local maxima, the space of careers does.
There are fairly high walls between most of the paths people take
through life, and the older you get, the higher the walls become.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
It was also obvious to us that the web was going to be a big
deal.  Few non-programmers grasped that in 1995, but the programmers
had seen what GUIs had done for desktop computers.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Maybe it would work to have this second self keep a journal,
and each night to make a brief entry listing the gaps and anomalies
you'd noticed that day.  Not startup ideas, just the raw gaps and
anomalies.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Sam Altman points out that taking time to come up with an
idea is not merely a better strategy in an absolute sense, but also
like an undervalued stock in that so few founders do it.&lt;br/&gt;&lt;br/&gt;There's comparatively little competition for the best ideas, because
few founders are willing to put in the time required to notice them.
Whereas there is a great deal of competition for mediocre ideas,
because when people make up startup ideas, they tend to make up the
same ones.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
For the computer hardware and software companies, summer jobs
are the first phase of the recruiting funnel.  But if you're good
you can skip the first phase.  If you're good you'll have no trouble
getting hired by these companies when you graduate, regardless of
how you spent your summers.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
The empirical evidence suggests that if colleges want to help
their students start startups, the best thing they can do is leave
them alone in the right way.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
I'm speaking here of IT startups; in biotech things are different.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
This is an instance of a more general rule: focus on users,
not competitors.  The most important information about competitors
is what you learn via users anyway.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
In practice most successful startups have elements of both.
And you can describe each strategy in terms of the other by adjusting
the boundaries of what you call the market.  But it's useful to
consider these two ideas separately.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
I almost hesitate to raise that point though.  Startups are
businesses; the point of a business is to make money; and with that
additional constraint, you can't expect you'll be able to spend all
your time working on what interests you most.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f14n"&gt;&lt;font color="#000000"&gt;14&lt;/font&gt;&lt;/a&gt;]
The need has to be a strong one.  You can retroactively
describe any made-up idea as something you need.  But do you really
need that recipe site or local event aggregator as much as Drew
Houston needed Dropbox, or Brian Chesky and Joe Gebbia needed Airbnb?&lt;br/&gt;&lt;br/&gt;Quite often at YC I find myself asking founders "Would you use this
thing yourself, if you hadn't written it?" and you'd be surprised
how often the answer is no.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f15n"&gt;&lt;font color="#000000"&gt;15&lt;/font&gt;&lt;/a&gt;]
Paul Buchheit points out that trying to sell something bad
can be a source of better ideas:&lt;br/&gt;&lt;br/&gt;"The best technique I've found for dealing with YC companies that
have bad ideas is to tell them to go sell the product ASAP (before
wasting time building it). Not only do they learn that nobody
wants what they are building, they very often come back with a
real idea that they discovered in the process of trying to sell
the bad idea."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f16n"&gt;&lt;font color="#000000"&gt;16&lt;/font&gt;&lt;/a&gt;]
Here's a recipe that might produce the next Facebook, if
you're college students.  If you have a connection to one of the
more powerful sororities at your school, approach the queen bees
thereof and offer to be their personal IT consultants, building
anything they could imagine needing in their social lives that
didn't already exist.  Anything that got built this way would be
very promising, because such users are not just the most demanding
but also the perfect point to spread from.&lt;br/&gt;&lt;br/&gt;I have no idea whether this would work.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f17n"&gt;&lt;font color="#000000"&gt;17&lt;/font&gt;&lt;/a&gt;]
And the reason it used a TV for a monitor is that Steve Wozniak
started out by solving his own problems.  He, like most of his
peers, couldn't afford a monitor.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Mike Arrington, Paul Buchheit, John Collison,
Patrick Collison, Garry Tan, and Harj Taggar for reading drafts of
this, and Marc Andreessen, Joe Gebbia, Reid Hoffman, Shel Kaphan,
Mike Moritz and Kevin Systrom for answering my questions about
startup history.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//startupideas.html</guid>
      <pubDate>Thu, 01 Nov 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Hardware Renaissance</title>
      <link>https://paulgraham.com//hw.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2012&lt;br/&gt;&lt;br/&gt;One advantage of Y Combinator's early, broad focus is that we
see tre&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2012&lt;br/&gt;&lt;br/&gt;One advantage of Y Combinator's early, broad focus is that we
see trends before most other people.  And one of the most conspicuous
trends in the last batch was the large number of hardware startups.
Out of 84 companies, 7 were making hardware.  On the whole
they've done better than the companies that weren't.&lt;br&gt;&lt;br/&gt;They've faced resistance from investors of course.  Investors have
a deep-seated bias against hardware.  But investors' opinions are
a trailing indicator.  The best founders are better at seeing the
future than the best investors, because the best founders are making
it.&lt;br/&gt;&lt;br/&gt;There is no one single force driving this trend.  Hardware &lt;a href="http://bits.blogs.nytimes.com/2012/05/11/pebble-smartwatch-tops-out-at-10-million-on-kickstarter/"&gt;does
well&lt;/a&gt; on crowdfunding sites.  The spread of &lt;a href="http://paulgraham.com/tablets.html"&gt;tablets&lt;/a&gt; makes it
possible to build new things &lt;a href="http://lockitron.com"&gt;controlled
by&lt;/a&gt; and even &lt;a href="http://doublerobotics.com"&gt;incorporating&lt;/a&gt;
them.  &lt;a href="http://www.boostedboards.com/"&gt;Electric motors&lt;/a&gt;
 have improved.
Wireless connectivity of various types can now be taken for granted.
It's getting more straightforward to get things manufactured.
Arduinos, 3D printing, laser cutters, and more accessible CNC milling are making hardware easier to prototype.
Retailers are less of a bottleneck as customers increasingly buy
online.&lt;br/&gt;&lt;br/&gt;One question I can answer is why hardware is suddenly cool.
It always was cool.
Physical things are great.  They just haven't
been as great a way to start a &lt;a href="https://paulgraham.com/growth.html"&gt;rapidly growing&lt;/a&gt; business
as software.  But that rule may not be permanent.  It's not even
that old; it only dates from about 1990.  Maybe the advantage
of software will turn out to have been temporary.  Hackers love to
build hardware, and customers love to buy it.  So if the ease of
shipping hardware even approached the ease of shipping software,
we'd see a lot more hardware startups.&lt;br/&gt;&lt;br/&gt;It wouldn't be the first time something was a bad idea till it
wasn't.  And it wouldn't be the first time investors learned that
lesson from founders.&lt;br/&gt;&lt;br/&gt;So if you want to work on hardware, don't be deterred from doing
it because you worry investors will discriminate against you.  And
in particular, don't be deterred from &lt;a href="http://ycombinator.com/apply.html"&gt;applying&lt;/a&gt; to Y Combinator
with a hardware idea, because we're especially interested in hardware
startups.&lt;br/&gt;&lt;br/&gt;We know there's room for the &lt;a href="https://paulgraham.com/ambitious.html"&gt;next Steve Jobs&lt;/a&gt;.
But there's almost certainly also room for the first 
&amp;lt;Your Name Here&amp;gt;.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, David Cann, Sanjay Dastoor, 
Paul Gerhardt, Cameron Robertson, Harj Taggar, and Garry Tan for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//hw.html</guid>
      <pubDate>Mon, 01 Oct 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Black Swan Farming</title>
      <link>https://paulgraham.com//swan.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2012&lt;br/&gt;&lt;br/&gt;I've done several types of work over the years but I don't know
ano&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2012&lt;br/&gt;&lt;br/&gt;I've done several types of work over the years but I don't know
another as counterintuitive as startup investing.&lt;br&gt;&lt;br/&gt;The two most important things to understand about startup investing,
as a business, are (1) that effectively all the returns are
concentrated in a few big winners, and (2) that the best ideas look
initially like bad ideas.&lt;br/&gt;&lt;br/&gt;The first rule I knew intellectually, but didn't really grasp till
it happened to us.  The total value of the companies we've funded
is around 10 billion, give or take a few.  But just two companies,
Dropbox and Airbnb, account for about three quarters of it.&lt;br/&gt;&lt;br/&gt;In startups, the big winners are big to a degree that violates our
expectations about variation.  I don't know whether these expectations
are innate or learned, but whatever the cause, we are just not
prepared for the 1000x variation in outcomes that one finds in
startup investing.&lt;br/&gt;&lt;br/&gt;That yields all sorts of strange consequences.  For example, in
purely financial terms, there is probably at most one company in
each YC batch that will have a significant effect on our returns,
and the rest are just a cost of doing business.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/swan.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
I haven't
really assimilated that fact, partly because it's so counterintuitive,
and partly because we're not doing this just for financial reasons;
YC would be a pretty lonely place if we only had one company per
batch.  And yet it's true.&lt;br/&gt;&lt;br/&gt;To succeed in a domain that violates your intuitions, you need to
be able to turn them off the way a pilot does when flying through
clouds. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/swan.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
  You need to do what you know intellectually to be
right, even though it feels wrong.&lt;br/&gt;&lt;br/&gt;It's a constant battle for us.  It's hard to make ourselves take
enough risks. When you interview a startup and think "they seem
likely to succeed," it's hard not to fund them.  And yet, financially
at least, there is only one kind of success: they're either going
to be one of the really big winners or not, and if not it doesn't
matter whether you fund them, because even if they succeed the
effect on your returns will be insignificant.  In the same day of
interviews you might meet some smart 19 year olds who aren't even
sure what they want to work on. Their chances of succeeding seem
small.  But again, it's not their chances of succeeding that matter
but their chances of succeeding really big.  The probability that
any group will succeed really big is microscopically small, but the
probability that those 19 year olds will might be higher than that
of the other, safer group.&lt;br/&gt;&lt;br/&gt;The probability that a startup will make it big is not simply a
constant fraction of the probability that they will succeed at all.
If it were, you could fund everyone who seemed likely to succeed
at all, and you'd get that fraction of big hits.  Unfortunately
picking winners is harder than that.  You have to ignore the elephant
in front of you, the likelihood they'll succeed, and focus instead
on the separate and almost invisibly intangible question of whether
they'll succeed really big.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Harder&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;That's made harder by the fact that the best startup ideas seem at
first like bad ideas.  I've written about this before: if a good
idea were obviously good, someone else would already have done it.
So the most successful founders tend to work on ideas that few
beside them realize are good.  Which is not that far from a description
of insanity, till you reach the point where you see results.&lt;br/&gt;&lt;br/&gt;The first time Peter Thiel spoke at YC he drew a Venn diagram that
illustrates the situation perfectly.  He drew two intersecting
circles, one labelled "seems like a bad idea" and the other "is a
good idea."  The intersection is the sweet spot for startups.&lt;br/&gt;&lt;br/&gt;This concept is a simple one and yet seeing it as a Venn diagram
is illuminating.  It reminds you that there is an intersection—that
there are good ideas that seem bad.  It also reminds you that the
vast majority of ideas that seem bad are bad.&lt;br/&gt;&lt;br/&gt;The fact that the best ideas seem like bad ideas makes it even
harder to recognize the big winners.  It means the probability of
a startup making it really big is not merely not a constant fraction
of the probability that it will succeed, but that the startups with
a high probability of the former will seem to have a disproportionately
low probability of the latter.&lt;br/&gt;&lt;br/&gt;History tends to get rewritten by big successes, so that in retrospect
it seems obvious they were going to make it big.  For that reason
one of my most valuable memories is how lame Facebook sounded to
me when I first heard about it.  A site for college students to
waste time?  It seemed the perfect bad idea: a site (1) for a niche
market (2) with no money (3) to do something that didn't matter.&lt;br/&gt;&lt;br/&gt;One could have described Microsoft and Apple in exactly the same
terms.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/swan.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Harder Still&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Wait, it gets worse.  You not only have to solve this hard problem,
but you have to do it with no indication of whether you're succeeding.
When you pick a big winner, you won't know it for two years.&lt;br/&gt;&lt;br/&gt;Meanwhile, the one thing you &lt;i&gt;can&lt;/i&gt; measure is dangerously
misleading.  The one thing we can track precisely is how well the
startups in each batch do at fundraising after Demo Day.  But we
know that's the wrong metric.  There's no correlation between the
percentage of startups that raise money and the metric that does
matter financially, whether that batch of startups contains a big
winner or not.&lt;br/&gt;&lt;br/&gt;Except an inverse one.  That's the scary thing: fundraising is not
merely a useless metric, but positively misleading.  We're in a
business where we need to pick unpromising-looking outliers, and
the huge scale of the successes means we can afford to spread our
net very widely.  The big winners could generate 10,000x returns.
That means for each big winner we could pick a thousand companies
that returned nothing and still end up 10x ahead.&lt;br/&gt;&lt;br/&gt;If we ever got to the point where 100% of the startups we funded
were able to raise money after Demo Day, it would almost certainly
mean we were being too conservative.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/swan.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;It takes a conscious effort not to do that too.  After 15 cycles
of preparing startups for investors and then watching how they do,
I can now look at a group we're interviewing through Demo Day
investors' eyes.  But those are the wrong eyes to look through!&lt;br/&gt;&lt;br/&gt;We can afford to take at least 10x as much risk as Demo Day investors.
And since risk is usually proportionate to reward, if you can afford
to take more risk you should.  What would it mean to take 10x more
risk than Demo Day investors?  We'd have to be willing to fund 10x
more startups than they would.  Which means that even if we're
generous to ourselves and assume that YC can on average triple a
startup's expected value, we'd be taking the right amount of risk
if only 30% of the startups were able to raise significant funding
after Demo Day.&lt;br/&gt;&lt;br/&gt;I don't know what fraction of them currently raise more after Demo
Day.  I deliberately avoid calculating that number, because if you
start measuring something you start optimizing it, and I know it's
the wrong thing to optimize.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/swan.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But the percentage is certainly
way over 30%.  And frankly the thought of a 30% success rate at
fundraising makes my stomach clench.  A Demo Day where only 30% of
the startups were fundable would be a shambles.  Everyone would
agree that YC had jumped the shark. We ourselves would feel that
YC had jumped the shark.  And yet we'd all be wrong.&lt;br/&gt;&lt;br/&gt;For better or worse that's never going to be more than a thought
experiment.  We could never stand it.  How about that for
counterintuitive?  I can lay out what I know to be the right thing
to do, and still not do it.  I can make up all sorts of plausible
justifications.  It would hurt YC's brand (at least among the
innumerate) if we invested in huge numbers of risky startups that
flamed out.  It might dilute the value of the alumni network.
Perhaps most convincingly, it would be demoralizing for us to be
up to our chins in failure all the time.  But I know the real reason
we're so conservative is that we just haven't assimilated the fact
of 1000x variation in returns.&lt;br/&gt;&lt;br/&gt;We'll probably never be able to bring ourselves to take risks
proportionate to the returns in this business.  The best we can
hope for is that when we interview a group and find ourselves
thinking "they seem like good founders, but what are investors going
to think of this crazy idea?" we'll continue to be able to say "who
cares what investors think?"  That's what we thought about Airbnb,
and if we want to fund more Airbnbs we have to stay good at thinking
it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I'm not saying that the big winners are all that matters, just
that they're all that matters financially for investors.  Since
we're not doing YC mainly for financial reasons, the big winners
aren't all that matters to us.  We're delighted to have funded
Reddit, for example. Even though we made comparatively little from
it, Reddit has had a big effect on the world, and it introduced us
to Steve Huffman and Alexis Ohanian, both of whom have become good
friends.&lt;br/&gt;&lt;br/&gt;Nor do we push founders to try to become one of the big winners if
they don't want to. We didn't "swing for the fences" in our own
startup (Viaweb, which was acquired for $50 million), and it would
feel pretty bogus to press founders to do something we didn't do.
Our rule is that it's up to the founders.  Some want to take over
the world, and some just want that first few million.  But we invest
in so many companies that we don't have to sweat any one outcome.
In fact, we don't have to sweat whether startups have exits at all.
The biggest exits are the only ones that matter financially, and
those are guaranteed in the sense that if a company becomes big
enough, a market for its shares will inevitably arise.  Since the
remaining outcomes don't have a significant effect on returns, it's
cool with us if the founders want to sell early for a small amount,
or grow slowly and never sell (i.e. become a so-called lifestyle
business), or even shut the company down.  We're sometimes disappointed
when a startup we had high hopes for doesn't do well, but this
disappointment is mostly the ordinary variety that anyone feels
when that happens.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Without visual cues (e.g. the horizon) you can't distinguish
between gravity and acceleration.  Which means if you're flying
through clouds you can't tell what the attitude of
the aircraft is.  You could feel like you're flying straight and
level while in fact you're descending in a spiral.  The solution
is to ignore what your body is telling you and listen only to your
instruments.  But it turns out to be very hard to ignore what your
body is telling you.  Every pilot knows about this 
&lt;a href="http://en.wikipedia.org/wiki/Spatial_disorientation"&gt;problem&lt;/a&gt; and yet
it is still a leading cause of accidents.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Not all big hits follow this pattern though. The reason Google
seemed a bad idea was that there were already lots of search engines
and there didn't seem to be room for another.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
A startup's success at fundraising is a function of two things:
what they're selling and how good they are at selling it.  And while
we can teach startups a lot about how to appeal to investors, even
the most convincing pitch can't sell an idea that investors don't
like.  I was genuinely worried that Airbnb, for example, would not
be able to raise money after Demo Day.  I couldn't convince &lt;a href="https://paulgraham.com/airbnb.html"&gt;Fred Wilson&lt;/a&gt; to fund them.  They might not
have raised money at all but for the coincidence that Greg McAdoo,
our contact at Sequoia, was one of a handful of VCs who understood
the vacation rental business, having spent much of the previous two
years investigating it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
I calculated it once for the last batch before a consortium of
investors started offering investment automatically to every startup
we funded, summer 2010.  At the time it was 94% (33 of 35 companies
that tried to raise money succeeded, and one didn't try because
they were already profitable).  Presumably it's lower now because
of that investment; in the old days it was raise after Demo Day or
die.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Patrick Collison, Jessica
Livingston, Geoff Ralston, and Harj Taggar for reading drafts of
this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//swan.html</guid>
      <pubDate>Sat, 01 Sep 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Startup = Growth</title>
      <link>https://paulgraham.com//growth.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2012&lt;br/&gt;&lt;br/&gt;A startup is a company designed to grow fast.  Being newly founded
&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2012&lt;br/&gt;&lt;br/&gt;A startup is a company designed to grow fast.  Being newly founded
does not in itself make a company a startup.  Nor is it necessary
for a startup to work on technology, or take venture funding, or
have some sort of "exit."  The only essential thing is growth.
Everything else we associate with startups follows from growth.&lt;br&gt;&lt;br/&gt;If you want to start one it's important to understand that. Startups
are so hard that you can't be pointed off to the side and hope to
succeed.  You have to know that growth is what you're after.  The
good news is, if you get growth, everything else tends to fall into
place.  Which means you can use growth like a compass to make almost
every decision you face.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Redwoods&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Let's start with a distinction that should be obvious but is often
overlooked: not every newly founded company is a startup.  Millions
of companies are started every year in the US.  Only a tiny fraction
are startups.  Most are service businesses — restaurants, barbershops,
plumbers, and so on.  These are not startups, except in a few unusual
cases.  A barbershop isn't designed to grow fast.  Whereas a search
engine, for example, is.&lt;br/&gt;&lt;br/&gt;When I say startups are designed to grow fast, I mean it in two
senses.  Partly I mean designed in the sense of intended, because
most startups fail.  But I also mean startups are different by
nature, in the same way a redwood seedling has a different destiny
from a bean sprout.&lt;br/&gt;&lt;br/&gt;That difference is why there's a distinct word, "startup," for
companies designed to grow fast.  If all companies were essentially
similar, but some through luck or the efforts of their founders
ended up growing very fast, we wouldn't need a separate word.  We
could just talk about super-successful companies and less successful
ones.  But in fact startups do have a different sort of DNA from
other businesses.  Google is not just a barbershop whose founders
were unusually lucky and hard-working.  Google was different from
the beginning.&lt;br/&gt;&lt;br/&gt;To grow rapidly, you need to make something you can sell to a big
market.  That's the difference between Google and a barbershop.  A
barbershop doesn't scale.&lt;br/&gt;&lt;br/&gt;For a company to grow really big, it must (a) make something lots
of people want, and (b) reach and serve all those people.  Barbershops
are doing fine in the (a) department.  Almost everyone needs their
hair cut.  The problem for a barbershop, as for any retail
establishment, is (b).  A barbershop serves customers in person,
and few will travel far for a haircut.  And even if they did, the
barbershop couldn't accomodate them. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Writing software is a great way to solve (b), but you can still end
up constrained in (a).  If you write software to teach Tibetan to
Hungarian speakers, you'll be able to reach most of the people who
want it, but there won't be many of them.   If you make software
to teach English to Chinese speakers, however, you're in startup
territory.&lt;br/&gt;&lt;br/&gt;Most businesses are tightly constrained in (a) or (b).  The distinctive
feature of successful startups is that they're not.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Ideas&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It might seem that it would always be better to start a startup
than an ordinary business.  If you're going to start a company, why
not start the type with the most potential?  The catch is that this
is a (fairly) efficient market.   If you write software to teach
Tibetan to Hungarians, you won't have much competition.  If you
write software to teach English to Chinese speakers, you'll face
ferocious competition, precisely because that's such a larger prize.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The constraints that limit ordinary companies also protect them.
That's the tradeoff.  If you start a barbershop, you only have to
compete with other local barbers.  If you start a search engine you
have to compete with the whole world.&lt;br/&gt;&lt;br/&gt;The most important thing that the constraints on a normal business
protect it from is not competition, however, but the difficulty of
coming up with new ideas.  If you open a bar in a particular
neighborhood, as well as limiting your potential and protecting you
from competitors, that geographic constraint also helps define your
company.  Bar + neighborhood is a sufficient idea for a small
business.  Similarly for companies constrained in (a).  Your niche
both protects and defines you.&lt;br/&gt;&lt;br/&gt;Whereas if you want to start a startup, you're probably going to
have to think of something fairly novel.  A startup has to make
something it can deliver to a large market, and ideas of that type
are so valuable that all the obvious ones are already taken.&lt;br/&gt;&lt;br/&gt;That space of ideas has been so thoroughly picked over that a startup
generally has to work on something everyone else has overlooked.
I was going to write that one has to make a conscious effort to
find ideas everyone else has overlooked.  But that's not how most
startups get started.  Usually successful startups happen because
the founders are sufficiently different from other people that ideas
few others can see seem obvious to them.  Perhaps later they step
back and notice they've found an idea in everyone else's blind spot,
and from that point make a deliberate effort to stay there. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But at the moment when successful startups get started, much of the
innovation is unconscious.&lt;br/&gt;&lt;br/&gt;What's different about successful founders is that they can see
different problems.  It's a particularly good combination both to
be good at technology and to face problems that can be solved by
it, because technology changes so rapidly that formerly bad ideas
often become good without anyone noticing.  Steve Wozniak's problem
was that he wanted his own computer.  That was an unusual problem
to have in 1975.  But technological change was about to make it a
much more common one.  Because he not only wanted a computer but
knew how to build them, Wozniak was able to make himself one.  And
the problem he solved for himself became one that Apple solved for
millions of people in the coming years.  But by the time it was
obvious to ordinary people that this was a big market, Apple was
already established.&lt;br/&gt;&lt;br/&gt;Google has similar origins.  Larry Page and Sergey Brin wanted to
search the web.  But unlike most people they had the technical
expertise both to notice that existing search engines were not as
good as they could be, and to know how to improve them.  Over the
next few years their problem became everyone's problem, as the web
grew to a size where you didn't have to be a picky search expert
to notice the old algorithms weren't good enough.  But as happened
with Apple, by the time everyone else realized how important search
was, Google was entrenched.&lt;br/&gt;&lt;br/&gt;That's one connection between startup ideas and technology.  Rapid
change in one area uncovers big, soluble problems in other areas.
Sometimes the changes are advances, and what they change is solubility.
That was the kind of change that yielded Apple; advances in chip
technology finally let Steve Wozniak design a computer he could
afford.  But in Google's case the most important change was the
growth of the web. What changed there was not solubility but bigness.&lt;br/&gt;&lt;br/&gt;The other connection between startups and technology is that startups
create new ways of doing things, and new ways of doing things are,
in the broader sense of the word, new technology.  
When a startup both begins with an
idea exposed by technological change and makes a product consisting
of technology in the narrower sense (what used to be called "high
technology"), it's easy to conflate the two.  But the two connections
are distinct and in principle one could start a startup that was
neither driven by technological change, nor whose product consisted
of technology except in the broader sense. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Rate&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;How fast does a company have to grow to be considered a startup?
There's no precise answer to that.  "Startup" is a pole, not a
threshold.  Starting one is at first no more than a declaration of
one's ambitions.  You're committing not just to starting a company,
but to starting a fast growing one, and you're thus committing to
search for one of the rare ideas of that type.  But at first you
have no more than commitment.  Starting a startup is like being an
actor in that respect.  "Actor" too is a pole rather than a threshold.
At the beginning of his career, an actor is a waiter who goes to
auditions.  Getting work makes him a successful actor, but he doesn't
only become an actor when he's successful.&lt;br/&gt;&lt;br/&gt;So the real question is not what growth rate makes a company a
startup, but what growth rate successful startups tend to have.
For founders that's more than a theoretical question, because it's
equivalent to asking if they're on the right path.&lt;br/&gt;&lt;br/&gt;The growth of a successful startup usually has three phases:
&lt;ol&gt;
&lt;li&gt; There's an initial period of slow or no growth while the startup
  tries to figure out what it's doing.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; As the startup figures out how to make something lots of people
  want and how to reach those people, there's a period of rapid
  growth.&lt;br/&gt;&lt;br/&gt;&lt;li&gt; Eventually a successful startup will grow into a big company.
  Growth will slow, partly due to internal limits and partly because
  the company is starting to bump up against the limits of the
  markets it serves.  
  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ol&gt;
Together these three phases produce an S-curve.  The phase whose
growth defines the startup is the second one, the ascent.  Its
length and slope determine how big the company will be.&lt;br/&gt;&lt;br/&gt;The slope is the company's growth rate.  If there's one number every
founder should always know, it's the company's growth rate.  That's
the measure of a startup.  If you don't know that number, you don't
even know if you're doing well or badly.&lt;br/&gt;&lt;br/&gt;When I first meet founders and ask what their growth rate is,
sometimes they tell me "we get about a hundred new customers a
month."  That's not a rate.  What matters is not the absolute number
of new customers, but the ratio of new customers to existing ones.
If you're really getting a constant number of new customers every
month, you're in trouble, because that means your growth rate is
decreasing.&lt;br/&gt;&lt;br/&gt;During Y Combinator we measure growth rate per week, partly because
there is so little time before Demo Day, and partly because startups
early on need frequent feedback from their users to tweak what
they're doing. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A good growth rate during YC is 5-7% a week.  If you can hit 10% a
week you're doing exceptionally well.  If you can only manage 1%,
it's a sign you haven't yet figured out what you're doing.&lt;br/&gt;&lt;br/&gt;The best thing to measure the growth rate of is revenue.  The next
best, for startups that aren't charging initially, is active users.
That's a reasonable proxy for revenue growth because whenever the
startup does start trying to make money, their revenues will probably
be a constant multiple of active users. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Compass&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;We usually advise startups to pick a growth rate they think they
can hit, and then just try to hit it every week.  The key word here
is "just." If they decide to grow at 7% a week and they hit that
number, they're successful for that week.  There's nothing more
they need to do.  But if they don't hit it, they've failed in the
only thing that mattered, and should be correspondingly alarmed.&lt;br/&gt;&lt;br/&gt;Programmers will recognize what we're doing here.  We're turning
starting a startup into an optimization problem.  And anyone who
has tried optimizing code knows how wonderfully effective that sort
of narrow focus can be.  Optimizing code means taking an existing
program and changing it to use less of something, usually time or
memory.  You don't have to think about what the program should do,
just make it faster.  For most programmers this is very satisfying
work.  The narrow focus makes it a sort of puzzle, and you're
generally surprised how fast you can solve it.&lt;br/&gt;&lt;br/&gt;Focusing on hitting a growth rate reduces the otherwise bewilderingly
multifarious problem of starting a startup to a single problem.
You can use that target growth rate to make all your decisions for
you; anything that gets you the growth you need is ipso facto right.
Should you spend two days at a conference?  Should you hire another
programmer?  Should you focus more on marketing?  Should you spend
time courting some big customer?  Should you add x feature? Whatever
gets you your target growth rate. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Judging yourself by weekly growth doesn't mean you can look no more
than a week ahead.  Once you experience the pain of missing your
target one week (it was the only thing that mattered, and you failed
at it), you become interested in anything that could spare you such
pain in the future.  So you'll be willing for example to hire another
programmer, who won't contribute to this week's growth but perhaps
in a month will have implemented some new feature that will get you
more users.   But only if (a) the distraction of hiring someone
won't make you miss your numbers in the short term, and (b) you're
sufficiently worried about whether you can keep hitting your numbers
without hiring someone new.&lt;br/&gt;&lt;br/&gt;It's not that you don't think about the future, just that you think
about it no more than necessary.&lt;br/&gt;&lt;br/&gt;In theory this sort of hill-climbing could get a startup into
trouble.  They could end up on a local maximum.  But in practice
that never happens.  Having to hit a growth number every week forces
founders to act, and acting versus not acting is the high bit of
succeeding.  Nine times out of ten, sitting around strategizing is
just a form of procrastination.  Whereas founders' intuitions about
which hill to climb are usually better than they realize.  Plus the
maxima in the space of startup ideas are not spiky and isolated.
Most fairly good ideas are adjacent to even better ones.&lt;br/&gt;&lt;br/&gt;The fascinating thing about optimizing for growth is that it can
actually discover startup ideas.  You can use the need for growth
as a form of evolutionary pressure.  If you start out with some
initial plan and modify it as necessary to keep hitting, say, 10%
weekly growth, you may end up with a quite different company than
you meant to start.  But anything that grows consistently at 10% a
week is almost certainly a better idea than you started with.&lt;br/&gt;&lt;br/&gt;There's a parallel here to small businesses.  Just as the constraint
of being located in a particular neighborhood helps define a bar,
the constraint of growing at a certain rate can help define a
startup.&lt;br/&gt;&lt;br/&gt;You'll generally do best to follow that constraint wherever it leads
rather than being influenced by some initial vision, just as a
scientist is better off following the truth wherever it leads rather
than being influenced by what he wishes were the case.  When Richard
Feynman said that the imagination of nature was greater than the
imagination of man, he meant that if you just keep following the
truth you'll discover cooler things than you could ever have made
up. For startups, growth is a constraint much like truth. Every
successful startup is at least partly a product of the imagination
of growth.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Value&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's hard to find something that grows consistently at several
percent a week, but if you do you may have found something surprisingly
valuable.  If we project forward we see why.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;
&lt;table border="1" cellpadding="4" cellspacing="0"&gt;
&lt;tr&gt;&lt;td align="center"&gt;&lt;font size="2"&gt;weekly&lt;td align="center"&gt;&lt;font size="2"&gt;yearly&lt;/font&gt;&lt;/td&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;1%&lt;/font&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;1.7x&lt;/font&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;2%&lt;/font&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;2.8x&lt;/font&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;5%&lt;/font&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;12.6x&lt;/font&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;7%&lt;/font&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;33.7x&lt;/font&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;10%&lt;/font&gt;&lt;td align="right"&gt;&lt;font size="2"&gt;142.0x&lt;/font&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/center&gt;
&lt;p&gt;
A company that grows at 1% a week will grow 1.7x a year, whereas a
company that grows at 5% a week will grow 12.6x.  A company making
$1000 a month (a typical number early in YC) and growing at 1% a
week will 4 years later be making $7900 a month, which is less than
a good programmer makes in salary in Silicon Valley.  A startup
that grows at 5% a week will in 4 years be making $25 million a
month. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Our ancestors must rarely have encountered cases of exponential
growth, because our intuitions are no guide here.  What happens
to fast growing startups tends to surprise even the founders.&lt;br/&gt;&lt;br/&gt;Small variations in growth rate produce qualitatively different
outcomes.  That's why there's a separate word for startups, and why
startups do things that ordinary companies don't, like raising money
and getting acquired.  And, strangely enough, it's also why they
fail so frequently.&lt;br/&gt;&lt;br/&gt;Considering how valuable a successful startup can become, anyone
familiar with the concept of expected value would be surprised if
the failure rate weren't high.  If a successful startup could make
a founder $100 million, then even if the chance of succeeding were
only 1%, the expected value of starting one would be $1 million.
And the probability of a group of sufficiently smart and determined
founders succeeding on that scale might be significantly over 1%.
For the right people — e.g. the young Bill Gates — the probability
might be 20% or even 50%.  So it's not surprising that so many want
to take a shot at it.  In an efficient market, the number of failed
startups should be proportionate to the size of the successes.  And
since the latter is huge the former should be too. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;What this means is that at any given time, the great majority of
startups will be working on something that's never going to go
anywhere, and yet glorifying their doomed efforts with the grandiose
title of "startup."&lt;br/&gt;&lt;br/&gt;This doesn't bother me.  It's the same with other high-beta vocations,
like being an actor or a novelist.  I've long since gotten used to
it.  But it seems to bother a lot of people, particularly those
who've started ordinary businesses.  Many are annoyed that these
so-called startups get all the attention, when hardly any of them
will amount to anything.&lt;br/&gt;&lt;br/&gt;If they stepped back and looked at the whole picture they might be
less indignant.  The mistake they're making is that by basing their
opinions on anecdotal evidence they're implicitly judging by the
median rather than the average.  If you judge by the median startup,
the whole concept of a startup seems like a fraud.  You have to
invent a bubble to explain why founders want to start them or
investors want to fund them.  But it's a mistake to use the median
in a domain with so much variation.  If you look at the average
outcome rather than the median, you can understand why investors
like them, and why, if they aren't median people, it's a rational
choice for founders to start them.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Deals&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Why do investors like startups so much?  Why are they so hot to
invest in photo-sharing apps, rather than solid money-making
businesses?  Not only for the obvious reason.&lt;br/&gt;&lt;br/&gt;The test of any investment is the ratio of return to risk.  Startups
pass that test because although they're appallingly risky, the
returns when they do succeed are so high.  But that's not the only
reason investors like startups.  An ordinary slower-growing business
might have just as good a ratio of return to risk, if both were
lower.  So why are VCs interested only in high-growth companies?
The reason is that they get paid by getting their capital back,
ideally after the startup IPOs, or failing that when it's acquired.&lt;br/&gt;&lt;br/&gt;The other way to get returns from an investment is in the form of
dividends.  Why isn't there a parallel VC industry that invests in
ordinary companies in return for a percentage of their profits?
Because it's too easy for people who control a private company to
funnel its revenues to themselves (e.g. by buying overpriced
components from a supplier they control) while making it look like
the company is making little profit.  Anyone who invested in private
companies in return for dividends would have to pay close attention
to their books.&lt;br/&gt;&lt;br/&gt;The reason VCs like to invest in startups is not simply the returns,
but also because such investments are so easy to oversee.  The
founders can't enrich themselves without also enriching the investors.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Why do founders want to take the VCs' money?  Growth, again.  The
constraint between good ideas and growth operates in both directions.
It's not merely that you need a scalable idea to grow.  If you have
such an idea and don't grow fast enough, competitors will.  Growing
too slowly is particularly dangerous in a business with network
effects, which the best startups usually have to some degree.&lt;br/&gt;&lt;br/&gt;Almost every company needs some amount of funding to get started.
But startups often raise money even when they are or could be
profitable.  It might seem foolish to sell stock in a profitable
company for less than you think it will later be worth, but it's
no more foolish than buying insurance.  Fundamentally that's how
the most successful startups view fundraising.  They could grow the
company on its own revenues, but the extra money and help supplied
by VCs will let them grow even faster.  Raising money lets you
&lt;i&gt;choose&lt;/i&gt; your growth rate.&lt;br/&gt;&lt;br/&gt;Money to grow faster is always at the command of the most successful
startups, because the VCs need them more than they need the VCs.
A profitable startup could if it wanted just grow on its own revenues.
Growing slower might be slightly dangerous, but chances are it
wouldn't kill them.  Whereas VCs need to invest in startups, and
in particular the most successful startups, or they'll be out of
business.  Which means that any sufficiently promising startup will
be offered money on terms they'd be crazy to refuse.  And yet because
of the scale of the successes in the startup business, VCs can still
make money from such investments.  You'd have to be crazy to believe
your company was going to become as valuable as a high growth rate
can make it, but some do.&lt;br/&gt;&lt;br/&gt;Pretty much every successful startup will get acquisition offers
too.  Why?  What is it about startups that makes other companies
want to buy them? 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Fundamentally the same thing that makes everyone else want the stock
of successful startups: a rapidly growing company is valuable.  It's
a good thing eBay bought Paypal, for example, because Paypal is now
responsible for 43% of their sales and probably more of their growth.&lt;br/&gt;&lt;br/&gt;But acquirers have an additional reason to want startups.  A rapidly
growing company is not merely valuable, but dangerous.  If it keeps
expanding, it might expand into the acquirer's own territory.  Most
product acquisitions have some component of fear.  Even if an
acquirer isn't threatened by the startup itself, they might be
alarmed at the thought of what a competitor could do with it.  And
because startups are in this sense doubly valuable to acquirers,
acquirers will often pay more than an ordinary investor would. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/growth.html#f14n"&gt;&lt;font color="#999999"&gt;14&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Understand&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The combination of founders, investors, and acquirers forms a natural
ecosystem.  It works so well that those who don't understand it are
driven to invent conspiracy theories to explain how neatly things
sometimes turn out.  Just as our ancestors did to explain the
apparently too neat workings of the natural world.  But there is
no secret cabal making it all work.&lt;br/&gt;&lt;br/&gt;If you start from the mistaken assumption that Instagram was
worthless, you have to invent a secret boss to force Mark Zuckerberg
to buy it.  To anyone who knows Mark Zuckerberg, that is the reductio
ad absurdum of the initial assumption.  The reason he bought Instagram
was that it was valuable and dangerous, and what made it so was
growth.&lt;br/&gt;&lt;br/&gt;If you want to understand startups, understand growth.  Growth
drives everything in this world.  Growth is why startups usually
work on technology — because ideas for fast growing companies are
so rare that the best way to find new ones is to discover those
recently made viable by change, and technology is the best source
of rapid change.  Growth is why it's a rational choice economically
for so many founders to try starting a startup: growth makes the
successful companies so valuable that the expected value is high
even though the risk is too.  Growth is why VCs want to invest in
startups: not just because the returns are high but also because
generating returns from capital gains is easier to manage than
generating returns from dividends.  Growth explains why the most
successful startups take VC money even if they don't need to: it
lets them choose their growth rate.  And growth explains why
successful startups almost invariably get acquisition offers.  To
acquirers a fast-growing company is not merely valuable but dangerous
too.&lt;br/&gt;&lt;br/&gt;It's not just that if you want to succeed in some domain, you have
to understand the forces driving it.  Understanding growth is what
starting a startup &lt;i&gt;consists&lt;/i&gt; of.  What you're really doing (and
to the dismay of some observers, all you're really doing) when you
start a startup is committing to solve a harder type of problem
than ordinary businesses do.  You're committing to search for one
of the rare ideas that generates rapid growth.  Because these ideas
are so valuable, finding one is hard.  The startup is the embodiment
of your discoveries so far.  Starting a startup is thus very much
like deciding to be a research scientist: you're not committing to
solve any specific problem; you don't know for sure which problems
are soluble; but you're committing to try to discover something no
one knew before.  A startup founder is in effect an economic research
scientist.  Most don't discover anything that remarkable, but some
discover relativity.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Strictly speaking it's not lots of customers you need but a big
market, meaning a high product of number of customers times how
much they'll pay.  But it's dangerous to have too few customers
even if they pay a lot, or the power that individual customers have
over you could turn you into a de facto consulting firm.  So whatever
market you're in, you'll usually do best to err on the side of
making the broadest type of product for it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
One year at Startup School David Heinemeier Hansson encouraged
programmers who wanted to start businesses to use a restaurant as
a model.  What he meant, I believe, is that it's fine to start
software companies constrained in (a) in the same way a restaurant
is constrained in (b).  I agree.  Most people should not try to
start startups.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
That sort of stepping back is one of the things we focus on at
Y Combinator.  It's common for founders to have discovered something
intuitively without understanding all its implications.  That's
probably true of the biggest discoveries in any field.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
I got it wrong in &lt;a href="https://paulgraham.com/wealth.html"&gt;"How to Make Wealth"&lt;/a&gt; when I said that a
startup was a small company that takes on a hard technical
problem.  That is the most common recipe but not the only one.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
In principle companies aren't limited by the size of the markets
they serve, because they could just expand into new markets.  But
there seem to be limits on the ability of big companies to do that.
Which means the slowdown that comes from bumping up against the
limits of one's markets is ultimately just another way in which
internal limits are expressed.&lt;br/&gt;&lt;br/&gt;It may be that some of these limits could be overcome by changing
the shape of the organization — specifically by sharding it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
This is, obviously, only for startups that have already launched
or can launch during YC.  A startup building a new database will
probably not do that.  On the other hand, launching something small
and then using growth rate as evolutionary pressure is such a
valuable technique that any company that could start this way
probably should.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
If the startup is taking the Facebook/Twitter route and building
something they hope will be very popular but from which they don't
yet have a definite plan to make money, the growth rate has to be
higher, even though it's a proxy for revenue growth, because such
companies need huge numbers of users to succeed at all.&lt;br/&gt;&lt;br/&gt;Beware too of the edge case where something spreads rapidly but the
churn is high as well, so that you have good net growth till you run
through all the potential users, at which point it suddenly stops.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
Within YC when we say it's ipso facto right to do whatever gets
you growth, it's implicit that this excludes trickery like buying
users for more than their lifetime value, counting users as active
when they're really not, bleeding out invites at a regularly
increasing rate to manufacture a perfect growth curve, etc.  Even
if you were able to fool investors with such tricks, you'd ultimately
be hurting yourself, because you're throwing off your own compass.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Which is why it's such a dangerous mistake to believe that
successful startups are simply the embodiment of some brilliant
initial idea.  What you're looking for initially is not so much a
great idea as an idea that could evolve into a great one.   The
danger is that promising ideas are not merely blurry versions of
great ones.  They're often different in kind, because the early
adopters you evolve the idea upon have different needs from the
rest of the market.  For example, the idea that evolves into Facebook
isn't merely a subset of Facebook; the idea that evolves into
Facebook is a site for Harvard undergrads.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
What if a company grew at 1.7x a year for a really long time?
Could it not grow just as big as any successful startup?  In principle
yes, of course. If our hypothetical company making $1000 a month
grew at 1% a week for 19 years, it would grow as big as a company
growing at 5% a week for 4 years.  But while such trajectories may
be common in, say, real estate development, you don't see them much
in the technology business.  In technology, companies that grow
slowly tend not to grow as big.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
Any expected value calculation varies from person to person
depending on their utility function for money.  I.e. the first
million is worth more to most people than subsequent millions.  How
much more depends on the person.  For founders who are younger or
more ambitious the utility function is flatter.  Which is probably
part of the reason the founders of the most successful startups of
all tend to be on the young side.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
More precisely, this is the case in the biggest winners, which
is where all the returns come from.  A startup founder could pull
the same trick of enriching himself at the company's expense by
selling them overpriced components.  But it wouldn't be worth it
for the founders of Google to do that.  Only founders of failing
startups would even be tempted, but those are writeoffs from the
VCs' point of view anyway.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
Acquisitions fall into two categories: those where the acquirer
wants the business, and those where the acquirer just wants the
employees.  The latter type is sometimes called an HR acquisition.
Though nominally acquisitions and sometimes on a scale that has a
significant effect on the expected value calculation for potential
founders, HR acquisitions are viewed by acquirers as more akin to
hiring bonuses.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f14n"&gt;&lt;font color="#000000"&gt;14&lt;/font&gt;&lt;/a&gt;]
I once explained this to some founders who had recently arrived
from Russia.  They found it novel that if you threatened a company
they'd pay a premium for you.  "In Russia they just kill you," they
said, and they were only partly joking.  Economically, the fact
that established companies can't simply eliminate new competitors
may be one of the most valuable aspects of the rule of law.  And
so to the extent we see incumbents suppressing competitors via
regulations or patent suits, we should worry, not because it's a
departure from the rule of law per se but from what the rule of law
is aiming at.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Marc Andreessen, Paul Buchheit, Patrick
Collison, Jessica Livingston, Geoff Ralston, and Harj Taggar for
reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//growth.html</guid>
      <pubDate>Sat, 01 Sep 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Top of My Todo List</title>
      <link>https://paulgraham.com//todo.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2012&lt;br/&gt;&lt;br/&gt;A palliative care nurse called Bronnie Ware made a list of the
biggest &lt;a href="http://bronnieware.com/regrets-of-the-dying/"&gt;regrets
of the dying&lt;/a&gt;.  Her list seems plausible.  I could see
myself — &lt;i&gt;can&lt;/i&gt; see myself — making at least 4 of these
5 mistakes.&lt;br/&gt;&lt;br/&gt;If you had to compress them into a single piece of advice, it might
be: don't be a cog.  The 5 regrets paint a portrait of post-industrial
man, who shrinks himself into a shape &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2012&lt;br/&gt;&lt;br/&gt;A palliative care nurse called Bronnie Ware made a list of the
biggest &lt;a href="http://bronnieware.com/regrets-of-the-dying/"&gt;regrets
of the dying&lt;/a&gt;.  Her list seems plausible.  I could see
myself — &lt;i&gt;can&lt;/i&gt; see myself — making at least 4 of these
5 mistakes.&lt;br/&gt;&lt;br/&gt;If you had to compress them into a single piece of advice, it might
be: don't be a cog.  The 5 regrets paint a portrait of post-industrial
man, who shrinks himself into a shape that fits his circumstances,
then turns dutifully till he stops.&lt;br/&gt;&lt;br/&gt;The alarming thing is, the mistakes that produce these regrets are
all errors of omission.  You forget your dreams, ignore your family,
suppress your feelings, neglect your friends, and forget to be
happy.  Errors of omission are a particularly dangerous type of
mistake, because you make them by default.&lt;br/&gt;&lt;br/&gt;I would like to avoid making these mistakes.  But how do you avoid
mistakes you make by default?  Ideally you transform your life so
it has other defaults.  But it may not be possible to do that
completely. As long as these mistakes happen by default, you probably
have to be reminded not to make them.  So I inverted the 5 regrets,
yielding a list of 5 commands
&lt;blockquote&gt;
   Don't ignore your dreams; don't work too much; say what you
   think; cultivate friendships; be happy.
&lt;/blockquote&gt;
which I then put at the top of the file I use as a todo list.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//todo.html</guid>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Frighteningly Ambitious Startup Ideas</title>
      <link>https://paulgraham.com//ambitious.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2012&lt;br/&gt;&lt;br/&gt;One of the more surprising things I've noticed while working
on Y Combi&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
March 2012&lt;br/&gt;&lt;br/&gt;One of the more surprising things I've noticed while working
on Y Combinator is how frightening the most ambitious startup
ideas are.  In this essay I'm going to demonstrate
this phenomenon by describing some.  Any one of them
could make you a billionaire.  That might sound like an attractive
prospect, and yet when I describe these ideas you may
notice you find yourself shrinking away from them.&lt;br&gt;&lt;br/&gt;Don't worry, it's not a sign of weakness.  Arguably it's a sign of
sanity.  The biggest startup ideas are terrifying.  And not just
because they'd be a lot of work.  The biggest ideas seem to threaten
your identity: you wonder if you'd have enough ambition to carry
them through.&lt;br/&gt;&lt;br/&gt;There's a scene in &lt;i&gt;Being John Malkovich&lt;/i&gt; where the nerdy hero
encounters a very attractive, sophisticated woman.  She says to
him:
&lt;blockquote&gt;
  Here's the thing: If you ever got me, you wouldn't have a clue
  what to do with me.
&lt;/blockquote&gt;
That's what these ideas say to us.&lt;br/&gt;&lt;br/&gt;This phenomenon is one of the most important things you can understand
about startups.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ambitious.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
You'd expect big startup ideas to be
attractive, but actually they tend to repel you.  And that has a
bunch of consequences.  It means these ideas are invisible to most
people who try to think of startup ideas, because their subconscious
filters them out.  Even the most ambitious people are probably best
off approaching them obliquely.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. A New Search Engine&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The best ideas are just on the right side of impossible.  I don't
know if this one is possible, but there are signs it might be.
Making a new search engine means competing with Google, and recently
I've noticed some cracks in their fortress.&lt;br/&gt;&lt;br/&gt;The point when it became clear to me that Microsoft had lost their
way was when they decided to get into the search business.  That
was not a natural move for Microsoft.  They did it because they
were afraid of Google, and Google was in the search business.  But
this meant (a) Google was now setting Microsoft's agenda, and (b)
Microsoft's agenda consisted of stuff they weren't good at.&lt;br/&gt;&lt;br/&gt;Microsoft : Google :: Google : Facebook.&lt;br/&gt;&lt;br/&gt;That does not by itself mean
there's room for a new search engine, but lately when using Google
search I've found myself nostalgic for the old days, when
Google was true to its own slightly aspy self.  Google used to give
me a page of the right answers, fast, with no clutter.  Now the
results seem inspired by the Scientologist principle that what's
true is what's true for you.  And the pages don't have the
clean, sparse feel they used to.  Google search results used to
look like the output of a Unix utility.  Now if I accidentally put
the cursor in the wrong place, anything might happen.&lt;br/&gt;&lt;br/&gt;The way to win here is to build the search engine all the hackers
use.  A search engine whose users consisted of the top 10,000 hackers
and no one else would be in a very powerful position despite its
small size, just as Google was when it was that search engine.  And
for the first time in over a decade the idea of switching seems
thinkable to me.&lt;br/&gt;&lt;br/&gt;Since anyone capable of starting this company is one of those 10,000
hackers, the route is at least straightforward: make the search
engine you yourself want.  Feel free to make it excessively hackerish.
Make it really good for code search, for example.  Would you like
search queries to be Turing complete?  Anything that gets you those
10,000 users is ipso facto good.&lt;br/&gt;&lt;br/&gt;Don't worry if something you want to do will constrain you in the
long term, because if you don't get that initial core of users,
there won't be a long term.  If you can just build something that
you and your friends genuinely prefer to Google, you're already
about 10% of the way to an IPO, just as Facebook was (though they
probably didn't realize it) when they got all the Harvard undergrads.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Replace Email&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Email was not designed to be used the way we use it now.  Email is
not a messaging protocol.  It's a todo list.  Or rather, my inbox
is a todo list, and email is the way things get onto it.  But it
is a disastrously bad todo list.&lt;br/&gt;&lt;br/&gt;I'm open to different types of solutions to this problem, but I
suspect that tweaking the inbox is not enough, and that email has
to be replaced with a new protocol. 
This new protocol should be a todo list protocol, not
a messaging protocol, although there is a degenerate case where
what someone wants you to do is: read the following text.&lt;br/&gt;&lt;br/&gt;As a todo list protocol, the new protocol should give more power
to the recipient than email does.  I want there to be more restrictions
on what someone can put on my todo list.  And when someone can put
something on my todo list, I want them to tell me more about what
they want from me.  Do they want me to do something beyond just
reading some text?  How important is it?  (There obviously has to
be some mechanism to prevent people from saying everything is
important.)  When does it have to be done?&lt;br/&gt;&lt;br/&gt;This is one of those ideas that's like an irresistible force meeting
an immovable object.  On one hand, entrenched protocols are impossible
to replace.  On the other, it seems unlikely that people in
100 years will still be living in the same email hell we do now.
And if email is going to get replaced eventually, why not now?&lt;br/&gt;&lt;br/&gt;If you do it right, you may be able to avoid the usual chicken 
and egg problem new protocols face, because some of the most powerful
people in the world will be among the first to switch to it.  
They're all at the mercy of email too.&lt;br/&gt;&lt;br/&gt;Whatever you build, make it fast.  GMail has become painfully slow.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ambitious.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
If you made something no better than GMail, but fast, that
alone would let you start to pull users away from GMail.&lt;br/&gt;&lt;br/&gt;GMail is slow because Google can't afford to spend a lot on it.
But people will pay for this.  I'd have no problem paying $50 a month.
Considering how much time I spend in email, it's kind of scary to
think how much I'd be justified in paying.  At least $1000 a month.
If I spend several hours a day reading and writing email, that would
be a cheap way to make my life better.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Replace Universities&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;People are all over this idea lately, and I think they're onto
something.  I'm reluctant to suggest that an institution that's
been around for a millennium is finished just because of some mistakes
they made in the last few decades, but certainly in the last few
decades US universities seem to have been headed down the wrong
path.  One could do a lot better for a lot less money.&lt;br/&gt;&lt;br/&gt;I don't think universities will disappear.  They won't be replaced
wholesale.  They'll just lose the de facto monopoly on certain types
of learning that they once had.  There will be many different ways
to learn different things, and some may look quite different from
universities.   Y Combinator itself is arguably one of them.&lt;br/&gt;&lt;br/&gt;Learning is such a big problem that changing the way people do it
will have a wave of secondary effects.  For example, the name of
the university one went to is treated by a lot of people (correctly
or not) as a credential in its own right.  If learning breaks up
into many little pieces, credentialling may separate from it.  There
may even need to be replacements for campus social life (and oddly
enough, YC even has aspects of that).&lt;br/&gt;&lt;br/&gt;You could replace high schools too, but there you face bureaucratic
obstacles that would slow down a startup.  Universities seem the
place to start.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Internet Drama&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Hollywood has been slow to embrace the Internet.  That was a 
mistake, because I think we can now call a winner in the race between
delivery mechanisms, and it is the Internet, not cable.&lt;br/&gt;&lt;br/&gt;A lot of the reason is the horribleness of cable clients, also known
as TVs.  Our family didn't wait for Apple TV.  We hated our last
TV so much that a few months ago we replaced it with an iMac bolted
to the wall.  It's a little inconvenient to control it with a
wireless mouse, but the overall experience is much better than the
nightmare UI we had to deal with before.&lt;br/&gt;&lt;br/&gt;Some of the attention people currently devote to watching
movies and TV can be stolen by things that seem completely unrelated,
like social networking apps.  More can be stolen by things that are
a little more closely related, like games.  But there will probably
always remain some residual demand for conventional drama, where
you sit passively and watch as a plot happens.  So how do you deliver
drama via the Internet?  Whatever you make will have to be on a
larger scale than Youtube clips.  When people sit down to watch a
show, they want to know what they're going to get: either part
of a series with familiar characters, or a single longer "movie"
whose basic premise they know in advance.&lt;br/&gt;&lt;br/&gt;There are two ways delivery and payment could play out.  Either
some company like Netflix or Apple will be the app store for
entertainment, and you'll reach audiences through them.  Or the
would-be app stores will be too overreaching, or too technically
inflexible, and companies will arise to supply payment and streaming
a la carte to the producers of drama.  If that's the way things
play out, there will also be a need for such infrastructure companies.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. The Next Steve Jobs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I was talking recently to someone who knew Apple well, and I asked
him if the people now running the company would be able to keep
creating new things the way Apple had under Steve Jobs.  His answer
was simply "no."  I already feared that would be the answer.  I
asked more to see how he'd qualify it.  But he didn't qualify it
at all.  No, there will be no more great new stuff beyond whatever's
currently in the pipeline.  Apple's
revenues may continue to rise for a long time, but as Microsoft
shows, revenue is a lagging indicator in the technology business.&lt;br/&gt;&lt;br/&gt;So if Apple's not going to make the next iPad, who is?  None of the
existing players.  None of them are run by product visionaries, and
empirically you can't seem to get those by hiring them.  Empirically
the way you get a product visionary as CEO is for him to found the
company and not get fired.  So the company that creates the next
wave of hardware is probably going to have to be a startup.&lt;br/&gt;&lt;br/&gt;I realize it sounds preposterously ambitious for a startup to try
to become as big as Apple.  But no more ambitious than it was for
Apple to become as big as Apple, and they did it.  Plus a startup
taking on this problem now has an advantage the original Apple
didn't: the example of Apple.  Steve Jobs has shown us what's
possible.  That helps would-be successors both directly, as Roger
Bannister did, by showing how much better you can do than people
did before, and indirectly, as Augustus did, by lodging the idea
in users' minds that a single person could unroll the future 
for them. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ambitious.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Now Steve is gone there's a vacuum we can all feel.  If a new company
led boldly into the future of hardware, users would follow.  The
CEO of that company, the "next Steve Jobs," might not measure up
to Steve Jobs. But he wouldn't have to.  He'd just have to do a
better job than Samsung and HP and Nokia, and that seems pretty
doable.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. Bring Back Moore's Law&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The last 10 years have reminded us what Moore's Law actually says.
Till about 2002 you could safely misinterpret it as promising that
clock speeds would double every 18 months.  Actually what it says
is that circuit densities will double every 18 months.  It used to
seem pedantic to point that out.  Not any more.  Intel can no longer
give us faster CPUs, just more of them.&lt;br/&gt;&lt;br/&gt;This Moore's Law is not as good as the old one.  Moore's Law used
to mean that if your software was slow, all you had to do was wait,
and the inexorable progress of hardware would solve your problems.
Now if your software is slow you have to rewrite it to do more
things in parallel, which is a lot more work than waiting.&lt;br/&gt;&lt;br/&gt;It would be great if a startup could give us something of the old
Moore's Law back, by writing software that could make a large number
of CPUs look to the developer like one very fast CPU.  There are
several ways to approach this problem.  The most ambitious is to
try to do it automatically: to write a compiler that will parallelize
our code for us.  There's a name for this compiler, &lt;i&gt;the sufficiently
smart compiler,&lt;/i&gt; and it is a byword for impossibility.  But is
it really impossible?  Is there no configuration of the bits in
memory of a present day computer that is this compiler?  If you
really think so, you should try to prove it, because that would be
an interesting result.  And if it's not impossible but simply very
hard, it might be worth trying to write it.  The expected value
would be high even if the chance of succeeding was low.&lt;br/&gt;&lt;br/&gt;The reason the expected value is so high is web services.  If you
could write software that gave programmers the convenience of the
way things were in the old days, you could offer it to them as a
web service.  And that would in turn mean that you got practically
all the users.&lt;br/&gt;&lt;br/&gt;Imagine there was another processor manufacturer that could still translate
increased circuit densities into increased clock speeds. They'd
take most of Intel's business.  And since web services mean that
no one sees their processors anymore, by writing the sufficiently
smart compiler you could create a situation indistinguishable from
you being that manufacturer, at least for the server market.&lt;br/&gt;&lt;br/&gt;The least ambitious way of approaching the problem is to start from
the other end, and offer programmers more parallelizable Lego blocks
to build programs out of, like Hadoop and MapReduce.   Then the
programmer still does much of the work of optimization.&lt;br/&gt;&lt;br/&gt;There's an intriguing middle ground where you build a semi-automatic
weapon—where there's a human in the loop.  You make something
that looks to the user like the sufficiently smart compiler, but
inside has people, using highly developed optimization tools to
find and eliminate bottlenecks in users' programs.   These people
might be your employees, or you might create a marketplace for
optimization.&lt;br/&gt;&lt;br/&gt;An optimization marketplace would be a way to generate the sufficiently
smart compiler piecemeal, because participants would immediately
start writing bots.  It would be a curious state of affairs if you
could get to the point where everything could be done by bots,
because then you'd have made the sufficiently smart compiler, but
no one person would have a complete copy of it.&lt;br/&gt;&lt;br/&gt;I realize how crazy all this sounds.  In fact, what I like about
this idea is all the different ways in which it's wrong.  The whole
idea of focusing on optimization is counter to the general trend
in software development for the last several decades.  Trying to
write the sufficiently smart compiler is by definition a mistake.
And even if it weren't, compilers are the sort of software that's
supposed to be created by open source projects, not companies.  Plus
if this works it will deprive all the programmers who take pleasure
in making multithreaded apps of so much amusing complexity. The
forum troll I have by now internalized doesn't even know where to
begin in raising objections to this project.  Now that's what I
call a startup idea.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. Ongoing Diagnosis&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;But wait, here's another that could face even greater resistance:
ongoing, automatic medical diagnosis.&lt;br/&gt;&lt;br/&gt;One of my tricks for generating startup ideas is to imagine the
ways in which we'll seem backward to future generations.  And I'm
pretty sure that to people 50 or 100 years in the future, it will
seem barbaric that people in our era waited till they had symptoms
to be diagnosed with conditions like heart disease and cancer.&lt;br/&gt;&lt;br/&gt;For example, in 2004 Bill Clinton found he was feeling short of
breath.  Doctors discovered that several of his arteries were over
90% blocked and 3 days later he had a quadruple bypass.  It seems
reasonable to assume Bill Clinton has the best medical care available.
And yet even he had to wait till his arteries were over 90% blocked
to learn that the number was over 90%.  Surely at some point in the
future we'll know these numbers the way we now know something like
our weight.  Ditto for cancer.  It will seem preposterous to future
generations that we wait till patients have physical symptoms to
be diagnosed with cancer.  Cancer will show up on some sort of radar
screen immediately.&lt;br/&gt;&lt;br/&gt;(Of course, what shows up on the radar screen may be different from
what we think of now as cancer.  I wouldn't be surprised if at any
given time we have ten or even hundreds of microcancers going at
once, none of which normally amount to anything.)&lt;br/&gt;&lt;br/&gt;A lot of the obstacles to ongoing diagnosis will come from the fact
that it's going against the grain of the medical profession.  The
way medicine has always worked is that patients come to doctors
with problems, and the doctors figure out what's wrong.  A lot of
doctors don't like the idea of going on the medical equivalent of
what lawyers call a "fishing expedition," where you go looking for
problems without knowing what you're looking for.  They call the
things that get discovered this way "incidentalomas," and they are
something of a nuisance.&lt;br/&gt;&lt;br/&gt;For example, a friend of mine once had her brain scanned as part
of a study.  She was horrified when the doctors running the study
discovered what appeared to be a large tumor.  After further testing,
it turned out to be a harmless cyst.  But it cost her a few days
of terror. A lot of doctors worry that if you start scanning people
with no symptoms, you'll get this on a giant scale: a huge number
of false alarms that make patients panic and require expensive and
perhaps even dangerous tests to resolve.  But I think that's just
an artifact of current limitations.  If people were scanned all the
time and we got better at deciding what was a real problem, my
friend would have known about this cyst her whole life and known
it was harmless, just as we do a birthmark.&lt;br/&gt;&lt;br/&gt;There is room for a lot of startups here.  
In addition to the technical obstacles all
startups face, and the bureaucratic obstacles all medical startups
face, they'll be going against thousands of years of medical
tradition.  But it will happen, and it will be a great thing—so
great that people in the future will feel as sorry for us as we do
for the generations that lived before anaesthesia and antibiotics.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Tactics&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Let me conclude with some tactical advice.  If you want to take on
a problem as big as the ones I've discussed, don't make a direct
frontal attack on it.  Don't say, for example, that you're going
to replace email.  If you do that you raise too many expectations.
Your employees and investors will constantly be asking "are we there
yet?" and you'll have an army of haters waiting to see you fail.
Just say you're building todo-list software.  That sounds harmless.
People can notice you've replaced email when it's a &lt;i&gt;fait accompli&lt;/i&gt;.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ambitious.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Empirically, the way to do really big things seems to be to start
with deceptively small things.  Want to dominate microcomputer
software?  Start by writing a Basic interpreter for a machine with
a few thousand users.  Want to make the universal web site?  Start
by building a site for Harvard undergrads to stalk one another.&lt;br/&gt;&lt;br/&gt;Empirically, it's not just for other people that you need to start
small.  You need to for your own sake.  Neither Bill Gates nor Mark
Zuckerberg knew at first how big their companies were going to get.
All they knew was that they were onto something.  Maybe it's a bad
idea to have really big ambitions initially, because the bigger
your ambition, the longer it's going to take, and the further you
project into the future, the more likely you'll get it wrong.&lt;br/&gt;&lt;br/&gt;I think the way to use these big ideas is not to try to identify a
precise point in the future and then ask yourself how to get from
here to there, like the popular image of a visionary.  You'll be
better off if you operate like Columbus and just head in a general
westerly direction.  Don't try to construct the future like a
building, because your current blueprint is almost certainly mistaken.
Start with something you know works, and when you expand, expand
westward.&lt;br/&gt;&lt;br/&gt;The popular image of the visionary is someone with a clear view of
the future, but empirically it may be better to have a blurry one.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
It's also one of the most important things VCs fail to
understand about startups.  Most expect founders to walk in with a
clear plan for the future, and judge them based on that.  Few
consciously realize that in the biggest successes there is the least
correlation between the initial plan and what the startup eventually
becomes.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
This sentence originally read "GMail is painfully slow."
Thanks to Paul Buchheit for the correction.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Roger Bannister is famous as the first person to run a mile
in under 4 minutes.  But his world record only lasted 46 days.  Once
he showed it could be done, lots of others followed.  Ten years
later Jim Ryun ran a 3:59 mile as a high school junior.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
If you want to be the next Apple, maybe you don't even want to start
with consumer electronics.  Maybe at first you make something hackers
use.  Or you make something popular but apparently unimportant,
like a headset or router.  All you need is a bridgehead.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, 
Paul Buchheit, Patrick Collison, Aaron Iba, Jessica
Livingston, Robert Morris, Harj Taggar and Garry Tan
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//ambitious.html</guid>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Defining Property</title>
      <link>https://paulgraham.com//property.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;As a child I read a book of stories about a famous judge in eighteenth
century Japan called Ooka Tadasuke.  One of the cases he decided
was brought by the owner of a food shop.  A poor student who could
afford only rice was eating his rice while enjoying the delicious
cooking smells coming from the food shop.  The owner wanted the
student to pay for the smells he was enjoying.&lt;br/&gt;&lt;br/&gt;The student was
stealing his smells!&lt;br/&gt;&lt;br/&gt;This story ofte&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;As a child I read a book of stories about a famous judge in eighteenth
century Japan called Ooka Tadasuke.  One of the cases he decided
was brought by the owner of a food shop.  A poor student who could
afford only rice was eating his rice while enjoying the delicious
cooking smells coming from the food shop.  The owner wanted the
student to pay for the smells he was enjoying.&lt;br/&gt;&lt;br/&gt;The student was
stealing his smells!&lt;br/&gt;&lt;br/&gt;This story often comes to mind when I hear the RIAA and MPAA accusing
people of stealing music and movies.&lt;br/&gt;&lt;br/&gt;It sounds ridiculous to us to treat smells as property.  But I can
imagine scenarios in which one could charge for smells.  Imagine
we were living on a moon base where we had to buy air by the
liter.  I could imagine air suppliers adding scents at an extra
charge.&lt;br/&gt;&lt;br/&gt;The reason it seems ridiculous to us to treat smells as property
is that it wouldn't work to.  It would work on a moon base, though.&lt;br/&gt;&lt;br/&gt;What counts as property depends on what works to treat as property.
And that not only can change, but has changed.  Humans may always
(for some definition of human and always) have treated small items
carried on one's person as property.  But hunter gatherers didn't
treat land, for example, as property in the way we do.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/property.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The reason so many people think of property as having a single
unchanging definition is that its definition changes very slowly.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/property.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But we are in the midst of such a change now.  The record
labels and movie studios used to distribute what they made like air
shipped through tubes on a moon base.  But with the arrival of
networks, it's as if we've moved to a planet with a breathable
atmosphere.  Data moves like smells now.  And through a combination
of wishful thinking and short-term greed, the labels and studios
have put themselves in the position of the food shop owner, accusing
us all of stealing their smells.&lt;br/&gt;&lt;br/&gt;(The reason I say short-term greed is that the underlying problem
with the labels and studios is that the people who run them are
driven by bonuses rather than equity.  If they were driven by equity
they'd be looking for ways to take advantage of technological change
instead of fighting it.  But building new things takes too long.
Their bonuses depend on this year's revenues, and the best way to
increase those is to extract more money from stuff they do already.)&lt;br/&gt;&lt;br/&gt;So what does this mean?  Should people not be able to charge for
content?  There's not a single yes or no answer to that question.
People should be able to charge for content when it works to charge
for content.&lt;br/&gt;&lt;br/&gt;But by "works" I mean something more subtle than "when they can get
away with it."  I mean when people can charge for content without
warping society in order to do it.  After all, the companies selling
smells on the moon base could continue to sell them on the Earth,
if they lobbied successfully for laws requiring us all to continue
to breathe through tubes down here too, even though we no longer
needed to.&lt;br/&gt;&lt;br/&gt;The crazy legal measures that the labels and studios have been
taking have a lot of that flavor.  Newspapers and magazines are
just as screwed, but they are at least declining gracefully.  The
RIAA and MPAA would make us breathe through tubes if they could.&lt;br/&gt;&lt;br/&gt;Ultimately it comes down to common sense.  When you're abusing the
legal system by trying to use mass lawsuits against randomly chosen
people as a form of exemplary punishment, or lobbying for laws
that would break the Internet if they passed, that's ipso facto
evidence you're using a definition of property that doesn't work.&lt;br/&gt;&lt;br/&gt;This is where it's helpful to have working democracies and multiple
sovereign countries.  If the world had a single, autocratic government,
the labels and studios could buy laws making the definition of
property be whatever they wanted.  But fortunately there are still
some countries that are not copyright colonies of the US, and even
in the US, &lt;a href="http://tctechcrunch2011.files.wordpress.com/2012/01/congress-on-sopa-done.png"&gt;politicians&lt;/a&gt;
still seem to be afraid of actual voters, in sufficient numbers.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/property.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The people running the US may not like it when voters or other
countries refuse to bend to their will, but ultimately it's in all
our interest that there's not a single point of attack for people
trying to warp the law to serve their own purposes.  Private property
is an extremely useful idea — arguably one of our greatest inventions.
So far, each new definition of it has brought us increasing material
wealth.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/property.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
It seems reasonable to suppose the newest one will
too.  It would be a disaster if we all had to keep running an
obsolete version just because a few powerful people were too lazy
to upgrade.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
If you want to learn more about hunter gatherers I strongly
recommend Elizabeth Marshall Thomas's &lt;a href="http://www.amazon.com/Harmless-People-Elizabeth-Marshall-Thomas/dp/0394427793"&gt;&lt;i&gt;The
Harmless People&lt;/i&gt;&lt;/a&gt; and &lt;a href="http://www.amazon.com/Old-Way-Story-First-People/dp/0374225524"&gt;&lt;i&gt;The
Old Way&lt;/i&gt;&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Change in the definition of property is driven mostly by
technological progress, however, and since technological progress
is accelerating, so presumably will the rate of change in the
definition of property.  Which means it's all the more important
for societies to be able to respond gracefully to such changes,
because they will come at an ever increasing rate.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
As far as I know, the term "copyright colony" was first used
by &lt;a href="http://torrentfreak.com/australia-us-copyright-colony-or-just-a-good-friend-120121/"&gt;Myles
Peterson&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
The state of technology isn't simply a function of
the definition of property.  They each constrain the other.  But
that being so, you can't mess with the definition of property without
affecting (and probably harming) the state of technology.  The
history of the USSR offers a vivid illustration of that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman and Geoff Ralston for reading drafts
of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//property.html</guid>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How Y Combinator Started</title>
      <link>https://paulgraham.com//ycstart.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;Y Combinator's 7th birthday was March 11.   As usual we were so
busy we didn't notice till a few days after.  I don't think we've
ever managed to remember our birthday on our birthday.
&lt;p&gt;
On March 11 2005, Jessica and I were walking home from dinner in
Harvard Square.  Jessica was working at an investment bank at the
time, but she didn't like it much, so she had interviewed for a job
as director of marketing at a Boston VC fund.  The VC fund was&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;Y Combinator's 7th birthday was March 11.   As usual we were so
busy we didn't notice till a few days after.  I don't think we've
ever managed to remember our birthday on our birthday.
&lt;p&gt;
On March 11 2005, Jessica and I were walking home from dinner in
Harvard Square.  Jessica was working at an investment bank at the
time, but she didn't like it much, so she had interviewed for a job
as director of marketing at a Boston VC fund.  The VC fund was doing
what now seems a comically familiar thing for a VC fund to do:
taking a long time to make up their mind.  Meanwhile I had been
telling Jessica all the things they should change about the VC
business  essentially the ideas now underlying Y Combinator:
investors
should be making more, smaller investments, they should be funding
hackers instead of suits, they should be willing to fund younger
founders, etc.
&lt;p&gt;
At the time I had been thinking about doing some angel investing.  I
had just given a talk to the undergraduate computer club at Harvard
about
&lt;a href="https://paulgraham.com/start.html"&gt;&lt;font color="#000099"&gt;how to start a
startup&lt;/font&gt;&lt;/a&gt;, and it
hit me afterward that although I had always
meant to do angel investing, 7 years had now passed since I got
enough money to do it, and I still hadn't started.  I had also
been thinking about ways to work with Robert Morris and Trevor
Blackwell again.  A few hours before I had
sent them an email trying to figure out what we could do together.
&lt;p&gt;
Between Harvard Square and my house the idea gelled.  We'd start
our own investment firm and Jessica could work for that instead.
As we turned onto Walker Street we decided to do it.  I agreed to
put $100k into the new fund and Jessica agreed to quit her job to
work for it.  Over the next couple days I recruited Robert
and Trevor, who put in another $50k each.  So YC
started with $200k.
&lt;p&gt;
Jessica was so happy to be able to quit her job and start her own
company that I took her &lt;a href="https://web.archive.org/web/20170609055553/http://www.ycombinator.com/yc05.html"&gt;picture&lt;/a&gt;
 when we got home.
&lt;p&gt;
The company wasn't called Y Combinator yet. At first we called it
Cambridge Seed.  But that name never saw the light of day, because
by the time we announced it a few days later, we'd changed the name
to Y Combinator.  We realized early on that what we were doing could
be national in scope and we didn't want a name that tied us to one
place.
&lt;p&gt;
Initially we only had part of the idea. We were going to do
seed funding with standardized terms.  Before YC, seed funding was
very haphazard. You'd get that first $10k from your friend's rich
uncle. The deal terms were often a disaster; often neither the
investor nor the founders nor the lawyer knew what the documents
should look like.  Facebook's early history as a Florida LLC shows
how random things could be in those days.  We were going to be
something there had not been before: a standard source of seed
funding.
&lt;p&gt;
We modelled YC on the seed funding we ourselves had taken
when we started Viaweb.  We started Viaweb with $10k we got from
our friend &lt;a href="https://paulgraham.com/julian.html"&gt;&lt;font color="#000099"&gt;Julian Weber&lt;/font&gt;&lt;/a&gt;,
the husband of Idelle Weber, whose
painting class I took as a grad student at Harvard.  Julian knew
about business, but you would not describe him as a suit.  Among
other things he'd been president of the &lt;i&gt;National Lampoon&lt;/i&gt;.  He was
also a lawyer, and got all our paperwork set up properly.  In return
for $10k, getting us set up as a company, teaching us what
business was about, and remaining calm in times of crisis, Julian
got 10% of Viaweb.  I remember thinking once what a good deal
Julian got.  And then a second later I realized that without
Julian, Viaweb would never have made it.  So even though it was a
good deal for him, it was a good deal for us too.  That's why I
knew there was room for something like Y Combinator.
&lt;p&gt;
Initially we didn't have what turned out to be the most important
idea: funding startups synchronously, instead of asynchronously as
it had always been done before.  Or rather we had the idea, but we
didn't realize its significance.  We decided very early 
that the first thing we'd do would
be to fund a bunch of startups over the coming summer.  But we
didn't realize initially that this would be the way we'd do all our
investing.  The reason we began by funding a bunch of startups at
once was not that we thought it would be a better way to fund
startups, but simply because we wanted to learn how to be angel
investors, and a summer program for undergrads seemed the fastest
way to do it.  No one takes summer jobs that seriously.  The
opportunity cost for a bunch of undergrads to spend a summer working
on startups was low enough that we wouldn't feel guilty encouraging
them to do it.
&lt;p&gt;
We knew students would already be making plans for the summer, so
we did what we're always telling startups to do: we launched fast.
Here are the
initial &lt;a href="https://paulgraham.com/summerfounder.html"&gt;&lt;font color="#000099"&gt;announcement&lt;/font&gt;&lt;/a&gt;
and &lt;a href="https://web.archive.org/web/20170609055553/http://ycombinator.com/old/sfp.html"&gt;description&lt;/a&gt; of what
was at the time called the Summer Founders Program.
&lt;p&gt;
We got lucky in that the length and structure of a summer program
turns out to be perfect for what we do.
The structure of the YC cycle is still almost identical to what
it was that first summer.
&lt;p&gt;
We also got lucky in who the first batch of founders were.  We never
expected to make any money from that first batch.  We thought of
the money we were investing as a combination of an educational expense
and a charitable donation.  But the
founders in the first batch turned out to be surprisingly good.
And great people too.  We're still friends with a lot of them today.
&lt;p&gt;
It's hard for people to realize now how inconsequential YC seemed at the
time.  I can't blame people who didn't take us seriously, because
we ourselves didn't take that first summer program seriously in the
very beginning.  But as the summer progressed we were increasingly
impressed by how well the startups were doing.  Other people started
to be impressed too.  Jessica and I invented a term, "the Y Combinator
effect," to describe the moment when the realization hit someone
that YC was not totally lame.  When people came to YC to speak
at the dinners that first summer, they came in the spirit of someone
coming to address a Boy Scout troop.  By the time they left the
building they were all saying some variant of "Wow, these
companies might actually succeed."
&lt;p&gt;
Now YC is well enough known that people are no longer surprised
when the companies we fund are legit, but it took a
while for reputation to catch up with reality.  That's one of the
reasons we especially like funding ideas that might be dismissed
as "toys"  because YC itself was dismissed as one initially.
&lt;p&gt;
When we saw how well it worked to fund companies synchronously,
we decided we'd keep doing that.  We'd fund two batches of
startups a year.
&lt;p&gt;
We funded the second batch in Silicon Valley.  That was
a last minute decision.  In retrospect I think what pushed me over
the edge was going to Foo Camp that fall.  The density of startup
people in the Bay Area was so much greater than in Boston, and the
weather was so nice.  I remembered that from living there in the
90s.  Plus I didn't want someone else to copy us and describe it
as the Y Combinator of Silicon Valley.  I wanted YC to be the Y Combinator 
of Silicon Valley.  So doing the winter batch in California
seemed like one of those rare cases where the self-indulgent choice
and the ambitious one were the same.
&lt;p&gt;
If we'd had enough time to do what we wanted, Y Combinator would
have been in Berkeley.  That was our favorite part of the Bay Area.
But we didn't have time to get a building in Berkeley.  We didn't
have time to get our own building anywhere. The only way to get
enough space in time was to convince Trevor to let us take over
part of his (as it then seemed) giant building in Mountain View.
Yet again we lucked out, because Mountain View turned out to be the
ideal place to put something like YC.  But even then we barely made
it.  The first dinner in California, we had to warn all the founders
not to touch the walls, because the paint was still wet.&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//ycstart.html</guid>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Writing and Speaking</title>
      <link>https://paulgraham.com//speak.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;I'm not a very good speaker.  I say "um" a lot. Sometimes I have
to pause when I lose my train of thought.  I wish I were a better
speaker.  But I don't wish I were a better speaker like I wish I
were a better writer.  What I really want is to have good ideas,
and that's a much bigger part of being a good writer than being a
good speaker.&lt;br/&gt;&lt;br/&gt;Having good ideas is most of writing well.  If you know what you're
talking about, you can say it in&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2012&lt;br/&gt;&lt;br/&gt;I'm not a very good speaker.  I say "um" a lot. Sometimes I have
to pause when I lose my train of thought.  I wish I were a better
speaker.  But I don't wish I were a better speaker like I wish I
were a better writer.  What I really want is to have good ideas,
and that's a much bigger part of being a good writer than being a
good speaker.&lt;br/&gt;&lt;br/&gt;Having good ideas is most of writing well.  If you know what you're
talking about, you can say it in the plainest words and you'll be
perceived as having a good style.  With speaking it's the opposite:
having good ideas is an alarmingly small component of being a good
speaker.&lt;br/&gt;&lt;br/&gt;I first noticed this at a conference several years ago.
There was another speaker who was much better than me.
He had all of us roaring with laughter.  I seemed awkward and
halting by comparison.  Afterward I put my talk online like I usually
do.  As I was doing it I tried to imagine what a transcript of the
other guy's talk would be like, and it was only then I realized he
hadn't said very much.&lt;br/&gt;&lt;br/&gt;Maybe this would have been obvious to someone who knew more about
speaking, but it was a revelation to me how much less ideas mattered
in speaking than writing.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/speak.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A few years later I heard a talk by someone who was not merely a
better speaker than me, but a famous speaker.  Boy was he good.  So
I decided I'd pay close attention to what he said, to learn how he
did it.  After about ten sentences I found myself thinking "I don't
want to be a good speaker."&lt;br/&gt;&lt;br/&gt;Being a really good speaker is not merely orthogonal to having good ideas,
but in many ways pushes you in the opposite direction.  For example,
when I give a talk, I usually write it out beforehand.  I know that's
a mistake; I know delivering a 
prewritten 
talk makes it harder to
engage with an audience.  The way to get the attention of an audience
is to give them &lt;i&gt;your&lt;/i&gt; full attention, and when you're delivering
a prewritten talk, your attention is always divided between the
audience and the talk — even if you've memorized it.  If you want
to engage an audience, it's better to start with no more than an outline
of what you want to say and 
ad lib the individual sentences.  But
if you do that, you might spend no more time thinking about each
sentence than it takes to say it.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/speak.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Occasionally the stimulation
of talking to a live audience makes you think of new things, but
in general this is not going to generate ideas as well as writing
does, where you can spend as long on each sentence as you want.&lt;br/&gt;&lt;br/&gt;If you rehearse a prewritten speech enough, you can get
asymptotically close to the sort of engagement you get when speaking
ad lib.  Actors do.  But here again there's a tradeoff between
smoothness and ideas.  All the time you spend practicing a talk,
you could instead spend making it better.  Actors don't face
that temptation, except in the rare cases where they've written the
script, but any speaker does.  Before I give a talk I can usually
be found sitting in a corner somewhere with a copy printed out on
paper, trying to rehearse it in my head.  But I always end up
spending most of the time rewriting it instead.  Every talk I give
ends up being given from a manuscript full of things crossed out
and rewritten.  Which of course makes me um even more, because I
haven't had any time to practice the new bits.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/speak.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Depending on your audience, there are even worse tradeoffs than
these.  Audiences like to be flattered; they like jokes; they like
to be swept off their feet by a vigorous stream of words.  As you
decrease the intelligence of the audience, being a good speaker is
increasingly a matter of being a good bullshitter.  That's true in
writing too of course, but the descent is steeper with talks.  Any
given person is dumber as a member of an audience than as a reader.
Just as a speaker ad libbing can only spend as long thinking about
each sentence as it takes to say it, a person hearing a talk can
only spend as long thinking about each sentence as it takes to hear
it.  Plus people in an audience are always affected by the reactions
of those around them, and the reactions that spread from person to
person in an audience are disproportionately the more brutish sort,
just as low notes travel through walls better than high ones.  Every
audience is an incipient mob, and a good speaker uses that.  Part
of the reason I laughed so much at the talk by the good speaker at
that conference was that everyone else did.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/speak.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;So are talks useless?  They're certainly inferior to the written
word as a source of ideas.  But that's not all talks are good for.
When I go to a talk, it's usually because I'm interested in the
speaker.  Listening to a talk is the closest most of us can get to
having a conversation with someone like the president, who doesn't
have time to meet individually with all the people who want to meet
him.&lt;br/&gt;&lt;br/&gt;Talks are also good at motivating me to do things.  It's probably
no coincidence that so many famous speakers are described as
motivational speakers.  That may be what public speaking is really
for.  It's probably what it was originally for.  The emotional
reactions you can elicit with a talk can be a powerful force.
I wish I could say that this force was more often used for good than
ill, but I'm not sure.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I'm not talking here about academic talks, which are a 
different type of thing.  While the
audience at an academic talk might appreciate a joke, they will (or
at least should) make a conscious effort to see what new ideas
you're presenting.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
That's the lower bound.  In practice you can often do better,
because talks are usually about things you've written or talked
about before, and when you ad lib, you end up reproducing some of
those sentences.  Like early medieval architecture, impromptu talks
are made of spolia.  Which feels a bit dishonest, incidentally,
because you have to deliver these sentences as if you'd just thought
of them.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Robert Morris points out that there is a way in which practicing
talks makes them better: reading a talk out loud can expose awkward
parts.  I agree and in fact I read most things I write out loud at
least once for that reason.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
For sufficiently small audiences, it may not be true that being
part of an audience makes people dumber.  The real decline seems
to set in when the audience gets too big for the talk to feel like
a conversation — maybe around 10 people.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman and Robert Morris for reading drafts
of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//speak.html</guid>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Snapshot: Viaweb, June 1998</title>
      <link>https://paulgraham.com//vw.html</link>
      <description>&lt;font face="verdana" size="2"&gt;January 2012&lt;br/&gt;&lt;br/&gt;A few hours before the Yahoo acquisition was announced in June 1998
I took a &lt;a href="http://ycombinator.com/viaweb"&gt;snapshot of Viaweb's
site&lt;/a&gt;.  I thought it might be interesting to look at one day.&lt;br/&gt;&lt;br/&gt;The first thing one notices is is how tiny the pages are.  Screens
were a lot smaller in 1998.  If I remember correctly, our frontpage
used to just fit in the size window people typically used then.&lt;br/&gt;&lt;br/&gt;Browsers then (IE 6 was stil&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;January 2012&lt;br/&gt;&lt;br/&gt;A few hours before the Yahoo acquisition was announced in June 1998
I took a &lt;a href="http://ycombinator.com/viaweb"&gt;snapshot of Viaweb's
site&lt;/a&gt;.  I thought it might be interesting to look at one day.&lt;br/&gt;&lt;br/&gt;The first thing one notices is is how tiny the pages are.  Screens
were a lot smaller in 1998.  If I remember correctly, our frontpage
used to just fit in the size window people typically used then.&lt;br/&gt;&lt;br/&gt;Browsers then (IE 6 was still 3 years in the future) had few fonts
and they weren't antialiased.  If you wanted to make pages that
looked good, you had to render display text as images.&lt;br/&gt;&lt;br/&gt;You may notice a certain similarity between the Viaweb and &lt;a href="http://ycombinator.com"&gt;Y Combinator&lt;/a&gt; logos.  We did that
as an inside joke when we started YC.  Considering how basic a red
circle is, it seemed surprising to me when we started Viaweb how
few other companies used one as their logo.  A bit later I realized
&lt;a href="https://paulgraham.com/zero.html"&gt;why&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;On the &lt;a href="http://www.ycombinator.com/viaweb/com.html"&gt;Company
page&lt;/a&gt; you'll notice a mysterious individual called John McArtyem.
Robert Morris (aka Rtm) was so publicity averse after the 
&lt;a href="http://en.wikipedia.org/wiki/Morris_worm"&gt;Worm&lt;/a&gt; that he
didn't want his name on the site.  I managed to get him to agree
to a compromise: we could use his bio but not his name.  He has
since &lt;a href="http://ycombinator.com/people.html"&gt;relaxed&lt;/a&gt; a bit
on that point.&lt;br/&gt;&lt;br/&gt;Trevor graduated at about the same time the acquisition closed, so in the
course of 4 days he went from impecunious grad student to millionaire
PhD.  The culmination of my career as a writer of press releases
was one &lt;a href="http://ycombinator.com/viaweb/trevor.html"&gt;celebrating
his graduation&lt;/a&gt;, illustrated with a drawing I did of him during
a meeting.&lt;br/&gt;&lt;br/&gt;(Trevor also appears as &lt;a href="http://ycombinator.com/viaweb/tlbwebdesign.html"&gt;Trevino
Bagwell&lt;/a&gt; in our directory of web designers merchants could hire
to build stores for them.  We inserted him as a ringer in case some
competitor tried to spam our web designers.   We assumed his logo
would deter any actual customers, but it did not.)&lt;br/&gt;&lt;br/&gt;Back in the 90s, to get users you had to get mentioned in magazines
and newspapers.  There were not the same ways to get found online
that there are today.  So we used to pay a &lt;a href="https://paulgraham.com/submarine.html"&gt;PR
firm&lt;/a&gt; $16,000 a month to get us mentioned in the press.  Fortunately
reporters &lt;a href="http://ycombinator.com/viaweb/presquot.html"&gt;liked
us&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;In our &lt;a href="http://ycombinator.com/viaweb/se.html"&gt;advice about
getting traffic from search engines&lt;/a&gt; (I don't think the term SEO
had been coined yet), we say there are only 7 that matter: Yahoo,
AltaVista, Excite, WebCrawler, InfoSeek, Lycos, and HotBot.  Notice
anything missing?  Google was incorporated that September.&lt;br/&gt;&lt;br/&gt;We supported online transactions via a company called 
&lt;a href="http://en.wikipedia.org/wiki/CyberCash,_Inc."&gt;Cybercash&lt;/a&gt;,
since if we lacked that feature we'd have gotten beaten up in product
comparisons.  But Cybercash was so bad and most stores' order volumes
were so low that it was better if merchants processed orders like phone orders.  We had a page in our site trying to &lt;a href="http://www.ycombinator.com/viaweb/cybercash.html"&gt;talk merchants
out of doing real time authorizations&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;The whole site was organized like a funnel, directing people to the
&lt;a href="http://ycombinator.com/viaweb/tesdriv.html"&gt;test drive&lt;/a&gt;.
It was a novel thing to be able to try out software online.  We put
cgi-bin in our dynamic urls to fool competitors about how our
software worked.&lt;br/&gt;&lt;br/&gt;We had some &lt;a href="http://ycombinator.com/viaweb/us.html"&gt;well
known users&lt;/a&gt;.  Needless to say, Frederick's of Hollywood got the
most traffic.  We charged a flat fee of $300/month for big stores,
so it was a little alarming to have users who got lots of traffic.
I once calculated how much Frederick's was costing us in bandwidth,
and it was about $300/month.&lt;br/&gt;&lt;br/&gt;Since we hosted all the stores, which together were getting just
over 10 million page views per month in June 1998, we consumed what
at the time seemed a lot of bandwidth.  We had 2 T1s (3 Mb/sec)
coming into our offices.  In those days there was no AWS.  Even
colocating servers seemed too risky, considering how often things
went wrong with them.  So we had our servers in our offices.  Or
more precisely, in Trevor's office.  In return for the unique
privilege of sharing his office with no other humans, he had to
share it with 6 shrieking tower servers.  His office was nicknamed
the Hot Tub on account of the heat they generated.  Most days his
stack of window air conditioners could keep up.&lt;br/&gt;&lt;br/&gt;For describing pages, we had a template language called &lt;a href="http://ycombinator.com/viaweb/rtml.html"&gt;RTML&lt;/a&gt;, which
supposedly stood for something, but which in fact I named after
Rtm.  RTML was Common Lisp augmented by some macros and libraries,
and concealed under a structure editor that made it look like it
had syntax.&lt;br/&gt;&lt;br/&gt;Since we did continuous releases, our software didn't actually have
versions.  But in those days the trade press expected versions, so
we made them up.  If we wanted to get lots of attention, we made
the version number &lt;a href="http://www.ycombinator.com/viaweb/rel4.html"&gt;an
integer&lt;/a&gt;.  That "version 4.0" icon was generated by our own
button generator, incidentally.  The whole Viaweb site was made
with our software, even though it wasn't an online store, because
we wanted to experience what our users did.&lt;br/&gt;&lt;br/&gt;At the end of 1997, we released a general purpose shopping search
engine called &lt;a href="http://ycombinator.com/viaweb/shoprel.html"&gt;Shopfind&lt;/a&gt;.  It
was pretty advanced for the time.  It had a programmable crawler
that could crawl most of the different stores online and pick out
the products.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//vw.html</guid>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Schlep Blindness</title>
      <link>https://paulgraham.com//schlep.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
January 2012&lt;br/&gt;&lt;br/&gt;There are great startup ideas lying around unexploited right under
ou&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
January 2012&lt;br/&gt;&lt;br/&gt;There are great startup ideas lying around unexploited right under
our noses.  One reason we don't see them is a phenomenon I call
&lt;i&gt;schlep blindness&lt;/i&gt;.  Schlep was originally a Yiddish word but has
passed into general use in the US.  It means a tedious, unpleasant
task.&lt;br&gt;&lt;br/&gt;No one likes schleps, but hackers especially dislike them.  
Most hackers who start startups wish they could do it by just writing
some clever software, putting it on a server somewhere, and watching
the money roll in—without ever having to talk to users, or negotiate
with other companies, or deal with other people's broken code.
Maybe that's possible, but I haven't seen it.&lt;br/&gt;&lt;br/&gt;One of the many things we do at Y Combinator is teach hackers about
the inevitability of schleps.  No, you can't start a startup by
just writing code.  I remember going through this realization myself.
There was a point in 1995 when I was still trying to convince myself
I could start a company by just writing code.  But I soon learned
from experience that schleps are not merely inevitable, but pretty
much what business consists of.  A company is defined by the schleps
it will undertake.  And schleps should be dealt with the same way
you'd deal with a cold swimming pool: just jump in.  Which is not
to say you should seek out unpleasant work per se, but that you
should never shrink from it if it's on the path to something great.&lt;br/&gt;&lt;br/&gt;The most dangerous thing about our dislike of schleps is that much
of it is unconscious.  Your unconscious won't even let you see ideas
that involve painful schleps.  That's schlep blindness.&lt;br/&gt;&lt;br/&gt;The phenomenon isn't limited to startups.  Most people don't
consciously decide not to be in as good physical shape as Olympic
athletes, for example.  Their unconscious mind decides for them,
shrinking from the work involved.&lt;br/&gt;&lt;br/&gt;The most striking example I know of schlep blindness is 
&lt;a href="http://stripe.com"&gt;Stripe&lt;/a&gt;, or
rather Stripe's idea.  For over a decade, every hacker who'd ever
had to process payments online knew how painful the experience was.
Thousands of people must have known about this problem.  And yet
when they started startups, they decided to build recipe sites, or
aggregators for local events.  Why?  Why work on problems few care
much about and no one will pay for, when you could fix one of the
most important components of the world's infrastructure?  Because
schlep blindness prevented people from even considering the idea
of fixing payments.&lt;br/&gt;&lt;br/&gt;Probably no one who applied to Y Combinator to work on a recipe
site began by asking "should we fix payments, or build a recipe
site?" and chose the recipe site.  Though the idea of fixing payments
was right there in plain sight, they never saw it, because their
unconscious mind shrank from the complications involved.  You'd
have to make deals with banks.  How do you do that?  Plus you're
moving money, so you're going to have to deal with fraud, and people
trying to break into your servers.  Plus there are probably all
sorts of regulations to comply with.  It's a lot more intimidating
to start a startup like this than a recipe site.&lt;br/&gt;&lt;br/&gt;That scariness makes ambitious ideas doubly valuable.  In addition
to their intrinsic value, they're like undervalued stocks in the
sense that there's less demand for them among founders.  If you
pick an ambitious idea, you'll have less competition, because
everyone else will have been frightened off by the challenges
involved.  (This is also true of starting a startup generally.)&lt;br/&gt;&lt;br/&gt;How do you overcome schlep blindness?  Frankly, the most valuable
antidote to schlep blindness is probably ignorance.  Most successful
founders would probably say that if they'd known when they were
starting their company about the obstacles they'd have to overcome,
they might never have started it.  Maybe that's one reason the most
successful startups of all so often have young founders.&lt;br/&gt;&lt;br/&gt;In practice the founders grow with the problems.  But no one seems
able to foresee that, not even older, more experienced founders.
So the reason younger founders have an advantage is that they make
two mistakes that cancel each other out.  They don't know how much
they can grow, but they also don't know how much they'll need to.
Older founders only make the first mistake.&lt;br/&gt;&lt;br/&gt;Ignorance can't solve everything though.  Some ideas so obviously
entail alarming schleps that anyone can see them.  How do you see
ideas like that?  The trick I recommend is to take yourself out of
the picture.  Instead of asking "what problem should I solve?" ask
"what problem do I wish someone else would solve for me?"  If someone
who had to process payments before Stripe had tried asking that,
Stripe would have been one of the first things they wished for.&lt;br/&gt;&lt;br/&gt;It's too late now to be Stripe, but there's plenty still broken in
the world, if you know how to see it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Patrick Collison,
Aaron Iba, Jessica Livingston, Emmett Shear, and Harj Taggar
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//schlep.html</guid>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Word to the Resourceful</title>
      <link>https://paulgraham.com//word.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
January 2012&lt;br/&gt;&lt;br/&gt;A year ago I noticed a pattern in the least successful startups
we'd &lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
January 2012&lt;br/&gt;&lt;br/&gt;A year ago I noticed a pattern in the least successful startups
we'd funded: they all seemed hard to talk to.  It felt as if there
was some kind of wall between us.  I could never quite tell if they
understood what I was saying.&lt;br&gt;&lt;br/&gt;This caught my attention because earlier we'd noticed a pattern
among the most successful startups, and it seemed to hinge on a
different quality.  We found the startups that did best were the
ones with the sort of founders about whom we'd say "they can take
care of themselves."  The startups that do best are fire-and-forget
in the sense that all you have to do is give them a lead, and they'll
close it, whatever type of lead it is.  When they're raising money,
for example, you can do the initial intros knowing that if you
wanted to you could stop thinking about it at that point.  You won't
have to babysit the round to make sure it happens.  That type of
founder is going to come back with the money; the only question is
how much on what terms.&lt;br/&gt;&lt;br/&gt;It seemed odd that the outliers at the two ends of the spectrum
could be detected by what appeared to be unrelated tests.  You'd
expect that if the founders at one end were distinguished by the
presence of quality x, at the other end they'd be distinguished by
lack of x.  Was there some kind of inverse relation between
&lt;a href="https://paulgraham.com/relres.html"&gt;resourcefulness&lt;/a&gt; and being hard to talk to?&lt;br/&gt;&lt;br/&gt;It turns out there is, and the key to the mystery is the old adage
"a word to the wise is sufficient."   Because this phrase is not
only overused, but overused in an indirect way (by prepending the
subject to some advice), most people who've heard it don't know
what it means.  What it means is that if someone is wise, all you
have to do is say one word to them, and they'll understand immediately.
You don't have to explain in detail; they'll chase down all the
implications.&lt;br/&gt;&lt;br/&gt;In much the same way that all you have to do is give the right sort
of founder a one line intro to a VC, and he'll chase down the money.
That's the connection.  Understanding all the implications — even the
inconvenient implications — of what someone tells you is a subset of
resourcefulness.  It's conversational resourcefulness.&lt;br/&gt;&lt;br/&gt;Like real world resourcefulness, conversational resourcefulness
often means doing things you don't want to.  Chasing down all the
implications of what's said to you can sometimes lead to uncomfortable
conclusions.  The best word to describe the failure to do so is
probably "denial," though that seems a bit too narrow.  A better
way to describe the situation would be to say that the unsuccessful
founders had the sort of conservatism that comes from weakness.
They traversed idea space as gingerly as a very old person
traverses the physical world.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/word.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The unsuccessful founders weren't stupid.  Intellectually they
were as capable as
the successful founders of following all the implications of what
one said to them.  They just weren't eager to.&lt;br/&gt;&lt;br/&gt;So being hard to talk to was not what was killing the
unsuccessful startups.  It
was a sign of an underlying lack of resourcefulness.  That's what
was killing them.  As well as
failing to chase down the implications of what was said to them,
the unsuccessful founders would also fail to chase down funding,
and users, and sources of new ideas.  But the most immediate evidence
I had that something was amiss was that I couldn't talk to them.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
A YC partner wrote:&lt;br/&gt;&lt;br/&gt;My feeling with the bad groups is that coming into office hours,
they've already decided what they're going to do and everything I
say is being put through an internal process in their heads, which
either desperately tries to munge what I've said into something
that conforms with their decision or just outright dismisses it and
creates a rationalization for doing so. They may not even be conscious
of this process but that's what I think is happening when you say
something to bad groups and they have that glazed over look. I don't
think it's confusion or lack of understanding per se, it's this
internal process at work.&lt;br/&gt;&lt;br/&gt;With the good groups, you can tell that everything you say is being
looked at with fresh eyes and even if it's dismissed, it's because
of some logical reason e.g. "we already tried that" or "from speaking
to our users that isn't what they'd like," etc. Those groups never
have that glazed over look.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Patrick Collison, Aaron Iba, Jessica Livingston,
Robert Morris, Harj Taggar, and Garry Tan for reading drafts of
this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//word.html</guid>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Startup Hubs Work</title>
      <link>https://paulgraham.com//hubs.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2011&lt;br/&gt;&lt;br/&gt;If you look at a list of US cities sorted by population, the number
o&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2011&lt;br/&gt;&lt;br/&gt;If you look at a list of US cities sorted by population, the number
of successful startups per capita varies by orders of magnitude.
Somehow it's as if most places were sprayed with startupicide.&lt;br&gt;&lt;br/&gt;I wondered about this for years.  I could see the average town was
like a roach motel for startup ambitions: smart, ambitious people
went in, but no startups came out.  But I was never able to figure
out exactly what happened inside the motel—exactly what was
killing all the potential startups.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hubs.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A couple weeks ago I finally figured it out. I was framing the
question wrong.  The problem is not that most towns kill startups.
It's that death is the &lt;a href="https://paulgraham.com/die.html"&gt;default&lt;/a&gt; for startups,
and most towns don't save them.  Instead of thinking of most places
as being sprayed with startupicide, it's more accurate to think of
startups as all being poisoned, and a few places being sprayed with
the antidote.&lt;br/&gt;&lt;br/&gt;Startups in other places are just doing what startups naturally do:
fail.  The real question is, what's &lt;i&gt;saving&lt;/i&gt; startups in places
like Silicon Valley?
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hubs.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Environment&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I think there are two components to the antidote: being in a place
where startups are the cool thing to do, and chance meetings with
people who can help you.  And what drives them both is the number
of startup people around you.&lt;br/&gt;&lt;br/&gt;The first component is particularly helpful in the first stage of
a startup's life, when you go from merely having an interest in
starting a company to actually doing it.  It's quite a leap to start
a startup.  It's an unusual thing to do. But in Silicon Valley it
seems normal.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hubs.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In most places, if you start a startup, people treat you as if
you're unemployed.  People in the Valley aren't automatically
impressed with you just because you're starting a company, but they
pay attention.  Anyone who's been here any amount of time knows not
to default to skepticism, no matter how inexperienced you seem or
how unpromising your idea sounds at first, because they've all seen
inexperienced founders with unpromising sounding ideas who a few
years later were billionaires.&lt;br/&gt;&lt;br/&gt;Having people around you care about what you're doing is an
extraordinarily &lt;a href="https://paulgraham.com/cities.html"&gt;powerful&lt;/a&gt; force.  Even the
most willful people are susceptible to it.  About a year after we
started Y Combinator I said something to a partner at a well known
VC firm that gave him the (mistaken) impression I was considering
starting another startup.  He responded so eagerly that for about
half a second I found myself considering doing it.&lt;br/&gt;&lt;br/&gt;In most other cities, the prospect of starting a startup just doesn't
seem real.  In the Valley it's not only real but fashionable.  That
no doubt causes a lot of people to start startups who shouldn't.
But I think that's ok.  Few people are suited to running a startup,
and it's very hard to predict beforehand which are (as I know all
too well from being in the business of trying to predict beforehand),
so lots of people starting startups who shouldn't is probably the
optimal state of affairs.  As long as you're at a point in your
life when you can bear the risk of failure, the best way to find
out if you're suited to running a startup is to &lt;a href="https://paulgraham.com/notnot.html"&gt;try
it&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Chance&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The second component of the antidote is chance meetings with people
who can help you.  This force works in both phases: both in the
transition from the desire to start a startup to starting one, and
the transition from starting a company to succeeding.  The power
of chance meetings is more variable than people around you caring
about startups, which is like a sort of background radiation that
affects everyone equally, but at its strongest it is far stronger.&lt;br/&gt;&lt;br/&gt;Chance meetings produce miracles to compensate for the disasters
that characteristically befall startups.  In the Valley, terrible
things happen to startups all the time, just like they do to startups
everywhere.  The reason startups are more likely to make it here
is that great things happen to them too.  In the Valley, lightning
has a sign bit.&lt;br/&gt;&lt;br/&gt;For example, you start a site for college students and you decide
to move to the Valley for the summer to work on it.  And then on a
random suburban street in Palo Alto you happen to run into Sean
Parker, who understands the domain really well because he started
a similar startup himself, and also knows all the investors.  And
moreover has advanced views, for 2004, on founders retaining &lt;a href="https://paulgraham.com/control.html"&gt;control&lt;/a&gt; of their companies.&lt;br/&gt;&lt;br/&gt;You can't say precisely what the miracle will be, or even for sure
that one will happen.  The best one can say is: if you're in a
startup hub, unexpected good things will probably happen to you,
especially if you deserve them.&lt;br/&gt;&lt;br/&gt;I bet this is true even for startups we fund.  Even with us working
to make things happen for them on purpose rather than by accident,
the frequency of helpful chance meetings in the Valley is so high
that it's still a significant increment on what we can deliver.&lt;br/&gt;&lt;br/&gt;Chance meetings play a role like the role relaxation plays in having
ideas.  Most people have had the experience of working hard on some
problem, not being able to solve it, giving up and going to bed,
and then thinking of the answer in the shower in the morning.  What
makes the answer appear is letting your thoughts &lt;a href="https://paulgraham.com/top.html"&gt;drift&lt;/a&gt; a bit—and thus drift off the wrong
path you'd been pursuing last night and onto the right one adjacent
to it.&lt;br/&gt;&lt;br/&gt;Chance meetings let your acquaintance drift in the same way taking
a shower lets your thoughts drift. The critical thing in both cases
is that they drift just the right amount.  The meeting between Larry
Page and Sergey Brin was a good example.  They let their acquaintance
drift, but only a little; they were both meeting someone they had
a lot in common with.&lt;br/&gt;&lt;br/&gt;For Larry Page the most important component of the antidote was
Sergey Brin, and vice versa.  The antidote is 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;people&lt;/a&gt;.  It's not the
physical infrastructure of Silicon Valley that makes it work, or
the weather, or anything like that.  Those helped get it started,
but now that the reaction is self-sustaining what drives it is the
people.&lt;br/&gt;&lt;br/&gt;Many observers have noticed that one of the most distinctive things
about startup hubs is the degree to which people help one another
out, with no expectation of getting anything in return.  I'm not
sure why this is so.  Perhaps it's because startups are less of a
zero sum game than most types of business; they are rarely killed
by competitors.  Or perhaps it's because so many startup founders
have backgrounds in the sciences, where collaboration is encouraged.&lt;br/&gt;&lt;br/&gt;A large part of YC's function is to accelerate that process.  We're
a sort of Valley within the Valley, where the density of people
working on startups and their willingness to help one another are
both artificially amplified.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Numbers&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Both components of the antidote—an environment that encourages
startups, and chance meetings with people who help you—are
driven by the same underlying cause: the number of startup people
around you.  To make a startup hub, you need a &lt;i&gt;lot&lt;/i&gt; of people
interested in startups.&lt;br/&gt;&lt;br/&gt;There are three reasons. The first, obviously, is that if you don't
have enough density, the chance meetings don't happen.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hubs.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The second is that different startups need such different things, so
you need a lot of people to supply each startup with what they need
most.  Sean Parker was exactly what Facebook needed in 2004.  Another
startup might have needed a database guy, or someone with connections
in the movie business.&lt;br/&gt;&lt;br/&gt;This is one of the reasons we fund such a large number of companies,
incidentally.  The bigger the community, the greater the chance it
will contain the person who has that one thing you need most.&lt;br/&gt;&lt;br/&gt;The third reason you need a lot of people to make a startup hub is
that once you have enough people interested in the same problem,
they start to set the social norms.  And it is a particularly
valuable thing when the atmosphere around you encourages you to do
something that would otherwise seem too ambitious.  In most places
the atmosphere pulls you back toward the mean.&lt;br/&gt;&lt;br/&gt;I flew into the Bay Area a few days ago.  I notice this every time
I fly over the Valley: somehow you can sense something is going on.  
Obviously you can sense prosperity in how well kept a
place looks.  But there are different kinds of prosperity.  Silicon
Valley doesn't look like Boston, or New York, or LA, or DC.  I tried
asking myself what word I'd use to describe the feeling the Valley
radiated, and the word that came to mind was optimism.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I'm not saying it's impossible to succeed in a city with few
other startups, just harder.  If you're sufficiently good at
generating your own morale, you can survive without external
encouragement.  Wufoo was based in Tampa and they succeeded.  But
the Wufoos are exceptionally disciplined.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Incidentally, this phenomenon is not limited to startups.  Most
unusual ambitions fail, unless the person who has them manages to
find the right sort of community.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Starting a company is common, but starting a startup is rare.
I've talked about the distinction between the two elsewhere, but
essentially a startup is a new business designed for scale.  Most
new businesses are service businesses and except in rare cases those
don't scale.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
As I was writing this, I had a demonstration of the density of
startup people in the Valley.  Jessica and I bicycled to University
Ave in Palo Alto to have lunch at the fabulous Oren's Hummus.  As
we walked in, we met Charlie Cheever sitting near the door.  Selina
Tobaccowala stopped to say hello on her way out.  Then Josh Wilson
came in to pick up a take out order.  After lunch we went to get
frozen yogurt.  On the way we met Rajat Suri.  When we got to the
yogurt place, we found Dave Shen there, and as we walked out we ran
into Yuri Sagalov.  We walked with him for a block or so and we ran
into Muzzammil Zaveri, and then a block later we met Aydin Senkut.
This is everyday life in Palo Alto.  I wasn't trying to meet people;
I was just having lunch.  And I'm sure for every startup founder
or investor I saw that I knew, there were 5 more I didn't.  If Ron
Conway had been with us he would have met 30 people he knew.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Jessica Livingston, and
Harj Taggar for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//hubs.html</guid>
      <pubDate>Sat, 01 Oct 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Patent Pledge</title>
      <link>https://paulgraham.com//patentpledge.html</link>
      <description>&lt;font face="verdana" size="2"&gt;August 2011&lt;br/&gt;&lt;br/&gt;I realized recently that we may be able to solve part of the patent
problem without waiting for the government.&lt;br/&gt;&lt;br/&gt;I've never been 100% sure whether patents help or hinder technological
progress.  When I was a kid I thought they helped.  I thought they
protected inventors from having their ideas stolen by big companies.
Maybe that was truer in the past, when more things were physical.
But regardless of whether patents are in general a good&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;August 2011&lt;br/&gt;&lt;br/&gt;I realized recently that we may be able to solve part of the patent
problem without waiting for the government.&lt;br/&gt;&lt;br/&gt;I've never been 100% sure whether patents help or hinder technological
progress.  When I was a kid I thought they helped.  I thought they
protected inventors from having their ideas stolen by big companies.
Maybe that was truer in the past, when more things were physical.
But regardless of whether patents are in general a good thing, there
do seem to be bad ways of using them.  And since bad uses of patents
seem to be increasing, there is an increasing call for patent reform.&lt;br/&gt;&lt;br/&gt;The problem with patent reform is that it has to go through the
government.  That tends to be slow.  But recently I realized we can
also attack the problem downstream.  As well as pinching off the
stream of patents at the point where they're issued, we may in some
cases be able to pinch it off at the point where they're used.&lt;br/&gt;&lt;br/&gt;One way of using patents that clearly does not encourage innovation
is when established companies with bad products use patents to
suppress small competitors with good products.  This is the type
of abuse we may be able to decrease without having to go through
the government.&lt;br/&gt;&lt;br/&gt;The way to do it is to get the companies that are above pulling
this sort of trick to pledge publicly not to.  Then the ones that
won't make such a pledge will be very conspicuous.  Potential
employees won't want to work for them.  And investors, too, will
be able to see that they're the sort of company that competes by
litigation rather than by making good products.&lt;br/&gt;&lt;br/&gt;Here's the pledge:
&lt;blockquote&gt;
    No first use of software patents against companies with less 
    than 25 people.
&lt;/blockquote&gt;
I've deliberately traded precision for brevity.  The patent pledge
is not legally binding.  It's like Google's "Don't be evil." They
don't define what evil is, but by publicly saying that, they're
saying they're willing to be held to a standard that, say, Altria
is not.  And though constraining, "Don't be evil" has been good for
Google. Technology companies win by attracting the most productive
people, and the most productive people are attracted to employers
who hold themselves to a higher standard than the law requires.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/patentpledge.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The patent pledge is in effect a narrower but open source "Don't
be evil."  I encourage every technology company to adopt it.  If
you want to help fix patents, encourage your employer to.&lt;br/&gt;&lt;br/&gt;Already most technology companies wouldn't sink to using patents
on startups.  You don't see Google or Facebook suing startups for
patent infringement. They don't need to.  So for the better technology
companies, the patent pledge requires no change in behavior.  They're
just promising to do what they'd do anyway.  And when all the
companies that won't use patents on startups have said so, the
holdouts will be very conspicuous.&lt;br/&gt;&lt;br/&gt;The patent pledge doesn't fix every problem with patents.  It won't
stop patent trolls, for example; they're already pariahs.  But the
problem the patent pledge does fix may be more serious than the
problem of patent trolls.  Patent trolls are just parasites.  A
clumsy parasite may occasionally kill the host, but that's not its
goal.  Whereas companies that sue startups for patent infringement
generally do it with explicit goal of keeping their product off the
market.&lt;br/&gt;&lt;br/&gt;Companies that use patents on startups are attacking innovation at
the root.  Now there's something any individual can do about this
problem, without waiting for the government: ask companies where
they stand.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;a href="http://thepatentpledge.org"&gt;Patent Pledge Site&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Because the pledge is deliberately vague, we're going to need
common sense when intepreting it.  And even more vice versa: the
pledge is vague in order to make people use common sense when
interpreting it.&lt;br/&gt;&lt;br/&gt;So for example I've deliberately avoided saying whether the 25
people have to be employees, or whether contractors count too.  If
a company has to split hairs that fine about whether a suit would
violate the patent pledge, it's probably still a dick move.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//patentpledge.html</guid>
      <pubDate>Mon, 01 Aug 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Subject: Airbnb</title>
      <link>https://paulgraham.com//airbnb.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2011&lt;br/&gt;&lt;br/&gt;Yesterday Fred Wilson published a remarkable &lt;a href="http://avc.com/2011/03/airbnb"&gt;post&lt;/a&gt; about missing
&lt;a href="http://airbnb.com"&gt;Airbnb&lt;/a&gt;.   VCs miss good startups all the time, but it's extraordinarily
rare for one to talk about it publicly till long afterward.  So
that post is further evidence what a rare bird Fred is.  He's
probably the nicest VC I know.&lt;br/&gt;&lt;br/&gt;Reading Fred's post made me go back and look at the emails I exchanged
w&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2011&lt;br/&gt;&lt;br/&gt;Yesterday Fred Wilson published a remarkable &lt;a href="http://avc.com/2011/03/airbnb"&gt;post&lt;/a&gt; about missing
&lt;a href="http://airbnb.com"&gt;Airbnb&lt;/a&gt;.   VCs miss good startups all the time, but it's extraordinarily
rare for one to talk about it publicly till long afterward.  So
that post is further evidence what a rare bird Fred is.  He's
probably the nicest VC I know.&lt;br/&gt;&lt;br/&gt;Reading Fred's post made me go back and look at the emails I exchanged
with him at the time, trying to convince him to invest in Airbnb.
It was quite interesting to read.  You can see Fred's mind at work 
as he circles the deal.&lt;br/&gt;&lt;br/&gt;Fred and the Airbnb founders have generously agreed to let me publish
this email exchange (with one sentence redacted about something
that's strategically important to Airbnb and not an important part
of the conversation).  It's an interesting illustration of an element
of the startup ecosystem that few except the participants ever see:
investors trying to convince one another to invest in their portfolio
companies.  Hundreds if not thousands of conversations of this type
are happening now, but if one has ever been published, I haven't
seen it.  The Airbnbs themselves never even saw these emails at the
time.&lt;br/&gt;&lt;br/&gt;We do a lot of this behind the scenes stuff at YC, because we invest
in such a large number of companies, and we invest so early that
investors sometimes need a lot of convincing to see their merits.
I don't always try as hard as this though.  Fred must 
have found me quite annoying.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;hr/&gt;
&lt;pre&gt;
from: Paul Graham
to: Fred Wilson, AirBedAndBreakfast Founders
date: Fri, Jan 23, 2009 at 11:42 AM
subject: meet the airbeds&lt;br/&gt;&lt;br/&gt;One of the startups from the batch that just started, AirbedAndBreakfast,
is in NYC right now meeting their users.  (NYC is their biggest
market.) I'd recommend meeting them if your schedule allows.&lt;br/&gt;&lt;br/&gt;I'd been thinking to myself that though these guys were going to
do really well, I should introduce them to angels, because VCs would
never go for it.  But then I thought maybe I should give you more
credit.  You'll certainly like meeting them.  Be sure to ask about
how they funded themselves with breakfast cereal.&lt;br/&gt;&lt;br/&gt;There's no reason this couldn't be as big as Ebay.  And this team
is the right one to do it.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Brian Chesky
to: Paul Graham
cc: Nathan Blecharczyk, Joe Gebbia
date: Fri, Jan 23, 2009 at 11:40 AM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;PG,&lt;br/&gt;&lt;br/&gt;Thanks for the intro!&lt;br/&gt;&lt;br/&gt;Brian&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Brian Chesky
cc: Nathan Blecharczyk, Joe Gebbia
date: Fri, Jan 23, 2009 at 12:38 PM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;It's a longshot, at this stage, but if there was any VC who'd get
you guys, it would be Fred.  He is the least suburban-golf-playing
VC I know.&lt;br/&gt;&lt;br/&gt;He likes to observe startups for a while before acting, so don't
be bummed if he seems ambivalent.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham,
date: Sun, Jan 25, 2009 at 5:28 PM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;Thanks Paul&lt;br/&gt;&lt;br/&gt;We are having a bit of a debate inside our partnership about the
airbed concept. We'll finish that debate tomorrow in our weekly
meeting and get back to you with our thoughts&lt;br/&gt;&lt;br/&gt;Thanks&lt;br/&gt;&lt;br/&gt;Fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Sun, Jan 25, 2009 at 10:48 PM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;I'd recommend having the debate after meeting them instead of before.
We had big doubts about this idea, but they vanished on meeting the
guys.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Mon, Jan 26, 2009 at 11:08 AM
subject: RE: meet the airbeds&lt;br/&gt;&lt;br/&gt;We are still very suspect of this idea but will take a meeting as
you suggest&lt;br/&gt;&lt;br/&gt;Thanks&lt;br/&gt;&lt;br/&gt;fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham, AirBedAndBreakfast Founders
date: Mon, Jan 26, 2009 at 11:09 AM
subject: RE: meet the airbeds&lt;br/&gt;&lt;br/&gt;Airbed team -&lt;br/&gt;&lt;br/&gt;Are you still in NYC?&lt;br/&gt;&lt;br/&gt;We'd like to meet if you are&lt;br/&gt;&lt;br/&gt;Thanks&lt;br/&gt;&lt;br/&gt;fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Mon, Jan 26, 2009 at 1:42 PM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;Ideas can morph.  Practically every really big startup could say,
five years later, "believe it or not, we started out doing ___."
It just seemed a very good sign to me that these guys were actually
on the ground in NYC hunting down (and understanding) their users.
On top of several previous good signs.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Sun, Feb 1, 2009 at 7:15 AM
subject: Re: meet the airbeds&lt;br/&gt;&lt;br/&gt;It's interesting&lt;br/&gt;&lt;br/&gt;Our two junior team members were enthusiastic&lt;br/&gt;&lt;br/&gt;The three "old guys" didn't get it&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Mon, Feb 9, 2009 at 5:58 PM
subject: airbnb&lt;br/&gt;&lt;br/&gt;The Airbeds just won the first poll among all the YC startups in
their batch by a landslide.  In the past this has not been a 100%
indicator of success (if only anything were) but much better than
random.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Fri, Feb 13, 2009 at 5:29 PM
subject: Re: airbnb&lt;br/&gt;&lt;br/&gt;I met them today&lt;br/&gt;&lt;br/&gt;They have an interesting business&lt;br/&gt;&lt;br/&gt;I'm just not sure how big it's going to be&lt;br/&gt;&lt;br/&gt;fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Sat, Feb 14, 2009 at 9:50 AM
subject: Re: airbnb&lt;br/&gt;&lt;br/&gt;Did they explain the long-term goal of being the market in accommodation
the way eBay is in stuff?  That seems like it would be huge.  Hotels
now are like airlines in the 1970s before they figured out how to
increase their load factors.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Tue, Feb 17, 2009 at 2:05 PM
subject: Re: airbnb&lt;br/&gt;&lt;br/&gt;They did but I am not sure I buy that&lt;br/&gt;&lt;br/&gt;ABNB reminds me of Etsy in that it facilitates real commerce in a
marketplace model directly between two people&lt;br/&gt;&lt;br/&gt;So I think it can scale all the way to the bed and breakfast market&lt;br/&gt;&lt;br/&gt;But I am not sure they can take on the hotel market&lt;br/&gt;&lt;br/&gt;I could be wrong&lt;br/&gt;&lt;br/&gt;But even so, if you include short term room rental, second home
rental, bed and breakfast, and other similar classes of accommodations,
you get to a pretty big opportunity&lt;br/&gt;&lt;br/&gt;fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Wed, Feb 18, 2009 at 12:21 AM
subject: Re: airbnb&lt;br/&gt;&lt;br/&gt;So invest in them!  They're very capital efficient.  They would
make an investor's money go a long way.&lt;br/&gt;&lt;br/&gt;It's also counter-cyclical.  They just arrived back from NYC, and
when I asked them what was the most significant thing they'd observed,
it was how many of their users actually needed to do these rentals
to pay their rents.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Wed, Feb 18, 2009 at 2:21 AM
subject: Re: airbnb&lt;br/&gt;&lt;br/&gt;There's a lot to like&lt;br/&gt;&lt;br/&gt;I've done a few things, like intro it to my friends at Foundry who
were investors in Service Metrics and understand this model&lt;br/&gt;&lt;br/&gt;I am also talking to my friend Mark Pincus who had an idea like
this a few years ago.&lt;br/&gt;&lt;br/&gt;So we are working on it&lt;br/&gt;&lt;br/&gt;Thanks for the lead&lt;br/&gt;&lt;br/&gt;Fred&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Paul Graham
to: Fred Wilson
date: Fri, Feb 20, 2009 at 10:00 PM
subject: airbnb already spreading to pros&lt;br/&gt;&lt;br/&gt;I know you're skeptical they'll ever get hotels, but there's a
continuum between private sofas and hotel rooms, and they just moved
one step further along it.&lt;br/&gt;&lt;br/&gt;[link to an airbnb user]&lt;br/&gt;&lt;br/&gt;This is after only a few months.  I bet you they will get hotels
eventually.  It will start with small ones.  Just wait till all the
10-room pensiones in Rome discover this site.  And once it spreads
to hotels, where is the point (in size of chain) at which it stops?
Once something becomes a big marketplace, you ignore it at your
peril.&lt;br/&gt;&lt;br/&gt;--pg&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;from: Fred Wilson
to: Paul Graham
date: Sat, Feb 21, 2009 at 4:26 AM
subject: Re: airbnb already spreading to pros&lt;br/&gt;&lt;br/&gt;That's true. It's also true that there are quite a few marketplaces
out there that serve this same market&lt;br/&gt;&lt;br/&gt;If you look at many of the people who list at ABNB, they list
elsewhere too&lt;br/&gt;&lt;br/&gt;I am not negative on this one, I am interested, but we are still
in the gathering data phase.&lt;br/&gt;&lt;br/&gt;fred
&lt;/pre&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//airbnb.html</guid>
      <pubDate>Tue, 01 Mar 2011 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Tablets</title>
      <link>https://paulgraham.com//tablets.html</link>
      <description>&lt;font face="verdana" size="2"&gt;December 2010&lt;br/&gt;&lt;br/&gt;I was thinking recently how inconvenient it was not to have a general
term for iPhones, iPads, and the corresponding things running
Android.  The closest to a general term seems to be "mobile devices,"
but that (a) applies to any mobile phone, and (b) doesn't really
capture what's distinctive about the iPad.&lt;br/&gt;&lt;br/&gt;After a few seconds it struck me that what we'll end up calling
these things is tablets.  The only reason we even consider calli&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;December 2010&lt;br/&gt;&lt;br/&gt;I was thinking recently how inconvenient it was not to have a general
term for iPhones, iPads, and the corresponding things running
Android.  The closest to a general term seems to be "mobile devices,"
but that (a) applies to any mobile phone, and (b) doesn't really
capture what's distinctive about the iPad.&lt;br/&gt;&lt;br/&gt;After a few seconds it struck me that what we'll end up calling
these things is tablets.  The only reason we even consider calling
them "mobile devices" is that the iPhone preceded the iPad.  If the
iPad had come first, we wouldn't think of the iPhone as a phone;
we'd think of it as a tablet small enough to hold up to your ear.&lt;br/&gt;&lt;br/&gt;The iPhone isn't so much a phone as a replacement for a phone.
That's an important distinction, because it's an early instance of
what will become a common pattern.  Many if not most of the
special-purpose objects around us are going to be replaced by apps
running on tablets.&lt;br/&gt;&lt;br/&gt;This is already clear in cases like GPSes, music players, and
cameras.  But I think it will surprise people how many things are
going to get replaced.  We funded one startup that's 
&lt;a href="http://lockitron.com/"&gt;replacing keys&lt;/a&gt;.
The fact that you can change font sizes easily means the iPad
effectively replaces reading glasses.  I wouldn't be surprised if
by playing some clever tricks with the accelerometer you could even
replace the bathroom scale.&lt;br/&gt;&lt;br/&gt;The advantages of doing things in software on a single device are
so great that everything that can get turned into software will.
So for the next couple years, a good &lt;a href="http://ycombinator.com/rfs8.html"&gt;recipe for startups&lt;/a&gt;
will be to look around you for things that people haven't realized
yet can be made unnecessary by a tablet app.&lt;br/&gt;&lt;br/&gt;In 1938 Buckminster Fuller coined the term &lt;a href="http://en.wikipedia.org/wiki/Ephemeralization"&gt;ephemeralization&lt;/a&gt; to
describe the increasing tendency of physical machinery to be replaced
by what we would now call software.  The reason tablets are going
to take over the world is not (just) that Steve Jobs and Co are
industrial design wizards, but because they have this force behind
them.  The iPhone and the iPad have effectively drilled a hole that
will allow ephemeralization to flow into a lot of new areas.  No one
who has studied the history of technology would want to underestimate
the power of that force.&lt;br/&gt;&lt;br/&gt;I worry about the power Apple could have with this force behind
them.  I don't want to see another era of client monoculture like
the Microsoft one in the 80s and 90s.  But if ephemeralization is
one of the main forces driving the spread of tablets, that suggests
a way to compete with Apple: be a better platform for it.&lt;br/&gt;&lt;br/&gt;It has turned out to be a great thing that Apple tablets have
accelerometers in them.  Developers have used the accelerometer in
ways Apple could never have imagined.  That's the nature of platforms.
The more versatile the tool, the less you can predict how people
will use it.  So tablet makers should be thinking: what else can
we put in there?  Not merely hardware, but software too.  What else
can we give developers access to?  Give hackers an inch and they'll
take you a mile.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Jessica Livingston, and
Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;!-- &lt;b&gt;Note:&lt;/b&gt; The original version of this essay used the term
"etherealization" instead of "ephemeralization," but apparently
the former was an alternative name suggested to Fuller by 
someone else; he preferred the latter. --&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//tablets.html</guid>
      <pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Founder Control</title>
      <link>https://paulgraham.com//control.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
December 2010&lt;br/&gt;&lt;br/&gt;Someone we funded is talking to VCs now, and asked me how common
it &lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
December 2010&lt;br/&gt;&lt;br/&gt;Someone we funded is talking to VCs now, and asked me how common
it was for a startup's founders to retain control of the board after
a series A round.  He said VCs told him this almost never happened.&lt;br&gt;&lt;br/&gt;Ten years ago that was true.  In the past, founders rarely kept
control of the board through a series A.  The traditional series A
board consisted of two founders, two VCs, and one independent member.
More recently the recipe is often one founder, one VC, and one
independent.  In either case the founders lose their majority.&lt;br/&gt;&lt;br/&gt;But not always.  Mark Zuckerberg kept control of Facebook's board
through the series A and still has it today.  Mark Pincus has kept
control of Zynga's too.  But are these just outliers?  How common
is it for founders to keep control after an A round?  I'd heard of
several cases among the companies we've funded, but I wasn't sure
how many there were, so I emailed the ycfounders list.&lt;br/&gt;&lt;br/&gt;The replies surprised me.  In a dozen companies we've funded, the
founders still had a majority of the board seats after the series
A round.&lt;br/&gt;&lt;br/&gt;I feel like we're at a tipping point here.  A lot of VCs still act
as if founders retaining board control after a series A is unheard-of.
A lot of them try to make you feel bad if you even ask — as if
you're a noob or a control freak for wanting such a thing.  But the
founders I heard from aren't noobs or control freaks.  Or if they
are, they are, like Mark Zuckerberg, the kind of noobs and control
freaks VCs should be trying to fund more of.&lt;br/&gt;&lt;br/&gt;Founders retaining control after a series A is clearly heard-of.
And barring financial catastrophe, I think in the coming year it
will become the norm.&lt;br/&gt;&lt;br/&gt;Control of a company is a more complicated matter than simply
outvoting other parties in board meetings.  Investors usually get
vetos over certain big decisions, like selling the company, regardless
of how many board seats they have.  And board votes are rarely
split.  Matters are decided in the discussion preceding the vote,
not in the vote itself, which is usually unanimous.  But if opinion
is divided in such discussions, the side that knows it would lose
in a vote will tend to be less insistent.  That's what board control
means in practice.  You don't simply get to do whatever you want;
the board still has to act in the interest of the shareholders; but
if you have a majority of board seats, then your opinion about
what's in the interest of the shareholders will tend to prevail.&lt;br/&gt;&lt;br/&gt;So while board control is not total control, it's not imaginary
either.  There's inevitably a difference in how things feel within
the company.  Which means if it becomes the norm for founders to
retain board control after a series A, that will change the way
things feel in the whole startup world.&lt;br/&gt;&lt;br/&gt;The switch to the new norm may be surprisingly fast, because the
startups that can retain control tend to be the best ones.  They're
the ones that set the trends, both for other startups and for VCs.&lt;br/&gt;&lt;br/&gt;A lot of the reason VCs are harsh when negotiating with startups
is that they're embarrassed to go back to their partners looking
like they got beaten.  When they sign a termsheet, they want to be
able to brag about the good terms they got.  A lot of them don't
care that much personally about whether founders keep board control.
They just don't want to seem like they had to make concessions.
Which means if letting the founders keep control stops being perceived
as a concession, it will rapidly become much more common.&lt;br/&gt;&lt;br/&gt;Like a lot of changes that have been forced on VCs, this change
won't turn out to be as big a problem as they might think. VCs will
still be able to convince; they just won't be able to compel.  And
the startups where they have to resort to compulsion are not the
ones that matter anyway.  VCs make most of their money from a few
big hits, and those aren't them.&lt;br/&gt;&lt;br/&gt;Knowing that founders will keep control of the board may even help
VCs pick better.  If they know they can't fire the founders, they'll
have to choose founders they can trust.  And that's who they should
have been choosing all along.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, John Bautista, Trevor Blackwell, Paul
Buchheit, Brian Chesky, Bill Clerico, Patrick Collison, Adam
Goldstein, James Lindenbaum, Jessica Livingston, and Fred Wilson
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//control.html</guid>
      <pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Where to See Silicon Valley</title>
      <link>https://paulgraham.com//seesv.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010&lt;br/&gt;&lt;br/&gt;Silicon Valley proper is mostly suburban sprawl.  At first glance
it &lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010&lt;br/&gt;&lt;br/&gt;Silicon Valley proper is mostly suburban sprawl.  At first glance
it doesn't seem there's anything to see.  It's not the sort of place
that has conspicuous monuments.  But if you look, there are subtle
signs you're in a place that's different from other places.&lt;br&gt;&lt;br/&gt;&lt;b&gt;1. &lt;a href="http://maps.google.com/maps?q=stanford+university"&gt;Stanford
University&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Stanford is a strange place.  Structurally it is to an ordinary
university what suburbia is to a city.  It's enormously spread out,
and feels surprisingly empty much of the time.  But notice the
weather.  It's probably perfect.  And notice the beautiful mountains
to the west.  And though you can't see it, cosmopolitan San Francisco
is 40 minutes to the north.  That combination is much of the reason
Silicon Valley grew up around this university and not some other
one.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. &lt;a href="http://maps.google.com/maps?q=university+and+ramona+palo+alto"&gt;University
Ave&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A surprising amount of the work of the Valley is done in the cafes
on or just off University Ave in Palo Alto.  If you visit on a
weekday between 10 and 5, you'll often see founders pitching
investors.  In case you can't tell, the founders are the ones leaning
forward eagerly, and the investors are the ones sitting back with
slightly pained expressions.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3.  &lt;a href="http://maps.google.com/maps?q=165+university+ave+palo+alto"&gt;The Lucky
Office&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The office at 165 University Ave was Google's first.  Then it was
Paypal's.  (Now it's &lt;a href="http://wepay.com"&gt;Wepay&lt;/a&gt;'s.)  The interesting thing about it is
the location.  It's a smart move to put a startup in a place with
restaurants and people walking around instead of in an office park,
because then the people who work there want to stay there, instead
of fleeing as soon as conventional working hours end.  They go out
for dinner together, talk about ideas, and then come back and
implement them.&lt;br/&gt;&lt;br/&gt;It's important to realize that Google's current location in an
office park is not where they started; it's just where they were
forced to move when they needed more space.  Facebook was till
recently across the street, till they too had to move because they
needed more space.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. &lt;a href="http://maps.google.com/maps?q=old+palo+alto"&gt;Old
Palo Alto&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Palo Alto was not originally a suburb.  For the first 100 years or
so of its existence, it was a college town out in the countryside.
Then in the mid 1950s it was engulfed in a wave of suburbia that
raced down the peninsula.  But Palo Alto north of Oregon expressway
still feels noticeably different from the area around it.  It's one
of the nicest places in the Valley.  The buildings are old (though
increasingly they are being torn down and replaced with generic
McMansions) and the trees are tall.  But houses are very
expensive—around $1000 per square foot. This is post-exit
Silicon Valley.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;5. &lt;a href="http://maps.google.com/maps?q=2900+sand+hill+road+menlo+park"&gt;Sand
Hill Road&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's interesting to see the VCs' offices on the north side of Sand
Hill Road precisely because they're so boringly uniform.  The
buildings are all more or less the same, their exteriors express
very little, and they are arranged in a confusing maze.  (I've been
visiting them for years and I still occasionally get lost.) It's
not a coincidence.  These buildings are a pretty accurate reflection
of the VC business.&lt;br/&gt;&lt;br/&gt;If you go on a weekday you may see groups of founders there to meet
VCs. But mostly you won't see anyone; bustling is the last word
you'd use to describe the atmos.  Visiting Sand Hill Road reminds
you that the opposite of "down and dirty" would be "up and clean."&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6.  &lt;a href="http://maps.google.com/maps?q=castro+and+villa+mountain+view"&gt;Castro
Street&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It's a tossup whether Castro Street or University Ave should be
considered the heart of the Valley now.  University Ave would have
been 10 years ago.  But Palo Alto is getting expensive.  Increasingly
startups are located in Mountain View, and Palo Alto is a place
they come to meet investors.  Palo Alto has a lot of different
cafes, but there is one that clearly dominates in Mountain View:
&lt;a href="http://maps.google.com/places/us/ca/mountain-view/castro-st/201/-red-rock-coffee"&gt;Red
Rock&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. &lt;a href="http://maps.google.com/maps?q=charleston+road+mountain+view"&gt;Google&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Google spread out from its first building in Mountain View 
to a lot of the surrounding ones.  But because the
buildings were built at different times by different people,
the place doesn't have the sterile, walled-off feel that a typical
large company's headquarters have.  It definitely has a flavor of
its own though.  You sense there is something afoot.  The general
atmos is vaguely utopian; there are lots of Priuses, and people who
look like they drive them.&lt;br/&gt;&lt;br/&gt;You can't get into Google unless you know someone there.  It's very
much worth seeing inside if you can, though.   Ditto for Facebook,
at the end of California Ave in Palo Alto, though there is nothing
to see outside.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8.  &lt;a href="http://maps.google.com/maps?q=skylonda"&gt;Skyline
Drive&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Skyline Drive runs along the crest of the Santa Cruz mountains.  On
one side is the Valley, and on the other is the sea—which
because it's cold and foggy and has few harbors, plays surprisingly
little role in the lives of people in the Valley, considering how
close it is.  Along some parts of Skyline the dominant trees are
huge redwoods, and in others they're live oaks.  Redwoods mean those
are the parts where the fog off the coast comes in at night; redwoods
condense rain out of fog.  The MROSD manages a collection of &lt;a href="http://www.openspace.org/"&gt;great walking trails&lt;/a&gt; off
Skyline.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. &lt;a href="http://maps.google.com/maps?q=interstate+280+san+mateo"&gt;280&lt;/a&gt;&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Silicon Valley has two highways running the length of it: 101, which
is pretty ugly, and 280, which is one of the more beautiful highways
in the world.  I always take 280 when I have a choice.  Notice the
long narrow lake to the west? That's the San Andreas Fault.  It
runs along the base of the hills, then heads uphill through Portola
Valley.  One of the MROSD trails runs &lt;a href="http://www.openspace.org/preserves/pr_los_trancos.asp"&gt;right along
the fault&lt;/a&gt;.  A string of rich neighborhoods runs along the
foothills to the west of 280: Woodside, Portola Valley, Los Altos
Hills, Saratoga, Los Gatos.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://www.flickr.com/photos/38037974@N00/3890299362/"&gt;SLAC&lt;/a&gt; goes right under 280 a little bit south of Sand Hill Road.  And a couple miles south of that is the Valley's equivalent of the "Welcome to Las Vegas" sign: &lt;a href="http://www.flickr.com/photos/paulbarroga/3443486941/"&gt;The Dish&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I skipped the &lt;a href="http://www.computerhistory.org/"&gt;Computer
History Museum&lt;/a&gt; because this is a list of where to see the Valley
itself, not where to see artifacts from it.  I also skipped San
Jose.  San Jose calls itself the capital of Silicon Valley, but
when people in the Valley use the phrase "the city," they mean San
Francisco.  San Jose is a dotted line on a map.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Patrick Collison, and Jessica Livingston
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//seesv.html</guid>
      <pubDate>Fri, 01 Oct 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The New Funding Landscape</title>
      <link>https://paulgraham.com//superangels.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010&lt;br/&gt;&lt;br/&gt;After barely changing at all for decades, the startup funding
busines&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010&lt;br/&gt;&lt;br/&gt;After barely changing at all for decades, the startup funding
business is now in what could, at least by comparison, be called
turmoil.  At Y Combinator we've seen dramatic changes in the funding
environment for startups.  Fortunately one of them is much higher
valuations.&lt;br&gt;&lt;br/&gt;The trends we've been seeing are probably not YC-specific.  I wish
I could say they were, but the main cause is probably just that we
see trends first—partly because the startups we fund are very
plugged into the Valley and are quick to take advantage of anything
new, and partly because we fund so many that we have enough data
points to see patterns clearly.&lt;br/&gt;&lt;br/&gt;What we're seeing now, everyone's probably going to be seeing in
the next couple years.  So I'm going to explain what we're seeing,
and what that will mean for you if you try to raise money.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Super-Angels&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Let me start by describing what the world of startup funding used
to look like.  There used to be two sharply differentiated types
of investors: angels and venture capitalists.  Angels are individual
rich people who invest small amounts of their own money, while VCs
are employees of funds that invest large amounts of other people's.&lt;br/&gt;&lt;br/&gt;For decades there were just those two types of investors, but now
a third type has appeared halfway between them: the so-called
super-angels. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
  And VCs have been provoked by their arrival
into making a lot of angel-style investments themselves.  So the
previously sharp line between angels and VCs has become hopelessly
blurred.&lt;br/&gt;&lt;br/&gt;There used to be a no man's land between angels and VCs.  Angels
would invest $20k to $50k apiece, and VCs usually a million or more.
So an angel round meant a collection of angel investments that
combined to maybe $200k, and a VC round meant a series A round in
which a single VC fund (or occasionally two) invested $1-5 million.&lt;br/&gt;&lt;br/&gt;The no man's land between angels and VCs was a very inconvenient
one for startups, because it coincided with the amount many wanted
to raise.  Most startups coming out of Demo Day wanted to raise
around $400k.  But it was a pain to stitch together that much out
of angel investments, and most VCs weren't interested in investments
so small.  That's the fundamental reason the super-angels have
appeared.  They're responding to the market.&lt;br/&gt;&lt;br/&gt;The arrival of a new type of investor is big news for startups,
because there used to be only two and they rarely competed with one
another.  Super-angels compete with both angels and VCs.  That's
going to change the rules about how to raise money.  I don't know
yet what the new rules will be, but it looks like most of the changes
will be for the better.&lt;br/&gt;&lt;br/&gt;A super-angel has some of the qualities of an angel, and some of
the qualities of a VC.  They're usually individuals, like angels.
In fact many of the current super-angels were initially angels of
the classic type.  But like VCs, they invest other people's money.
This allows them to invest larger amounts than angels:  a typical
super-angel investment is currently about $100k.  They make investment
decisions quickly, like angels.  And they make a lot more investments
per partner than VCs—up to 10 times as many.&lt;br/&gt;&lt;br/&gt;The fact that super-angels invest other people's money makes them
doubly alarming to VCs. They don't just compete for startups; they
also compete for investors.  What super-angels really are is a new
form of fast-moving, lightweight VC fund.   And those of us in the
technology world know what usually happens when something comes
along that can be described in terms like that.  Usually it's the
replacement.&lt;br/&gt;&lt;br/&gt;Will it be?  As of now, few of the startups that take money from
super-angels are ruling out taking VC money.  They're just postponing
it.  But that's still a problem for VCs.  Some of the startups that
postpone raising VC money may do so well on the angel money they
raise that they never bother to raise more.  And those who do raise
VC rounds will be able to get higher valuations when they do.  If
the best startups get 10x higher valuations when they raise series
A rounds, that would cut VCs' returns from winners at least tenfold.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;So I think VC funds are seriously threatened by the super-angels.
But one thing that may save them to some extent is the uneven
distribution of startup outcomes: practically all the returns are
concentrated in a few big successes.  The expected value of a startup
is the percentage chance it's Google.  So to the extent that winning
is a matter of absolute returns, the super-angels could win practically
all the battles for individual startups and yet lose the war, if
they merely failed to get those few big winners.  And there's a
chance that could happen, because the top VC funds have better
brands, and can also do more for their portfolio companies.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Because super-angels make more investments per partner, they have
less partner per investment.  They can't pay as much attention to
you as a VC on your board could.  How much is that extra attention
worth?  It will vary enormously from one partner to another.  There's
no consensus yet in the general case.  So for now this is something
startups are deciding individually.&lt;br/&gt;&lt;br/&gt;Till now, VCs' claims about how much value they added were sort of
like the government's.  Maybe they made you feel better, but you
had no choice in the matter, if you needed money on the scale only
VCs could supply.  Now that VCs have competitors, that's going to
put a market price on the help they offer.  The interesting thing
is, no one knows yet what it will be.&lt;br/&gt;&lt;br/&gt;Do startups that want to get really big need the sort of advice and
connections only the top VCs can supply?  Or would super-angel money
do just as well?  The VCs will say you need them, and the super-angels
will say you don't.  But the truth is, no one knows yet, not even
the VCs and super-angels themselves.   All the super-angels know
is that their new model seems promising enough to be worth trying,
and all the VCs know is that it seems promising enough to worry
about.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Rounds&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Whatever the outcome, the conflict between VCs and super-angels is
good news for founders.  And not just for the obvious reason that
more competition for deals means better terms.  The whole shape of
deals is changing.&lt;br/&gt;&lt;br/&gt;One of the biggest differences between angels and VCs is the amount
of your company they want.  VCs want a lot.  In a series A round
they want a third of your company, if they can get it.  They don't
care much how much they pay for it, but they want a lot because the
number of series A investments they can do is so small.  In a
traditional series A investment, at least one partner from the VC
fund takes a seat on your board.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
 Since board seats last about
5 years and each partner can't handle more than about 10 at once,
that means a VC fund can only do about 2 series A deals per partner
per year. And that means they need to get as much of the company
as they can in each one.  You'd have to be a very promising startup
indeed to get a VC to use up one of his 10 board seats for only a
few percent of you.&lt;br/&gt;&lt;br/&gt;Since angels generally don't take board seats, they don't have this
constraint.  They're happy to buy only a few percent of you.  And
although the super-angels are in most respects mini VC funds, they've
retained this critical property of angels.  They don't take board
seats, so they don't need a big percentage of your company.&lt;br/&gt;&lt;br/&gt;Though that means you'll get correspondingly less attention from
them, it's good news in other respects.  Founders never really liked
giving up as much equity as VCs wanted.  It was a lot of the company
to give up in one shot.  Most founders doing series A deals would
prefer to take half as much money for half as much stock, and then
see what valuation they could get for the second half of the stock
after using the first half of the money to increase its value.  But
VCs never offered that option.&lt;br/&gt;&lt;br/&gt;Now startups have another alternative.  Now it's easy to raise angel
rounds about half the size of series A rounds.  Many of the startups
we fund are taking this route, and I predict that will be true of
startups in general.&lt;br/&gt;&lt;br/&gt;A typical big angel round might be $600k on a convertible note with
a valuation cap of $4 million premoney.  Meaning that when the note
converts into stock (in a later round, or upon acquisition), the
investors in that round will get .6 / 4.6, or 13% of the company.
That's a lot less than the 30 to 40% of the company you usually
give up in a series A round if you do it so early.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But the advantage of these medium-sized rounds is not just that
they cause less dilution.  You also lose less control.  After an
angel round, the founders almost always still have control of the
company, whereas after a series A round they often don't.  The
traditional board structure after a series A round is two founders,
two VCs, and a (supposedly) neutral fifth person.  Plus series A
terms usually give the investors a veto over various kinds of
important decisions, including selling the company.  Founders usually
have a lot of de facto control after a series A, as long as things
are going well.  But that's not the same as just being able to do
what you want, like you could before.&lt;br/&gt;&lt;br/&gt;A third and quite significant advantage of angel rounds is that
they're less stressful to raise.  Raising a traditional series A
round has in the past taken weeks, if not months.  When a VC firm
can only do 2 deals per partner per year, they're careful about
which they do.  To get a traditional series A round you have to go
through a series of meetings, culminating in a full partner meeting
where the firm as a whole says yes or no.  That's the really scary
part for founders: not just that series A rounds take so long, but
at the end of this long process the VCs might still say no.  The
chance of getting rejected after the full partner meeting averages
about 25%.  At some firms it's over 50%.&lt;br/&gt;&lt;br/&gt;Fortunately for founders, VCs have been getting a lot faster.
Nowadays Valley VCs are more likely to take 2 weeks than 2 months.
But they're still not as fast as angels and super-angels, the most
decisive of whom sometimes decide in hours.&lt;br/&gt;&lt;br/&gt;Raising an angel round is not only quicker, but you get feedback
as it progresses.  An angel round is not an all or nothing thing
like a series A.  It's composed of multiple investors with varying
degrees of seriousness, ranging from the upstanding ones who commit
unequivocally to the jerks who give you lines like "come back to
me to fill out the round." You usually start collecting money from
the most committed investors and work your way out toward the
ambivalent ones, whose interest increases as the round fills up.&lt;br/&gt;&lt;br/&gt;But at each point you know how you're doing.  If investors turn
cold you may have to raise less, but when investors in an angel
round turn cold the process at least degrades gracefully, instead
of blowing up in your face and leaving you with nothing, as happens
if you get rejected by a VC fund after a full partner meeting.
Whereas if investors seem hot, you can not only close the round
faster, but now that convertible notes are becoming the norm,
actually &lt;a href="https://paulgraham.com/hiresfund.html"&gt;raise the price&lt;/a&gt; to reflect demand.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Valuation&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;However, the VCs have a weapon they can use against the super-angels,
and they have started to use it.   VCs have started making angel-sized
investments too.  The term "angel round" doesn't mean that all the
investors in it are angels; it just describes the structure of the
round.  Increasingly the participants include VCs making investments
of a hundred thousand or two.  And when VCs invest in angel rounds
they can do things that super-angels don't like.  VCs are quite
valuation-insensitive in angel rounds—partly because they are
in general, and partly because they don't care that much about the
returns on angel rounds, which they still view mostly as a way to
recruit startups for series A rounds later.  So VCs who invest in
angel rounds can blow up the valuations for angels and super-angels
who invest in them. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Some super-angels seem to care about valuations.  Several turned
down YC-funded startups after Demo Day because their valuations
were too high.  This was not a problem for the startups; by definition
a high valuation means enough investors were willing to accept it.
But it was mysterious to me that the super-angels would quibble
about valuations.  Did they not understand that the big returns
come from a few big successes, and that it therefore mattered far
more which startups you picked than how much you paid for them?&lt;br/&gt;&lt;br/&gt;After thinking about it for a while and observing certain other
signs, I have a theory that explains why the super-angels may be
smarter than they seem.  It would make sense for super-angels to
want low valuations if they're hoping to invest in startups that
get bought early.  If you're hoping to hit the next Google, you
shouldn't care if the valuation is 20 million.  But if you're looking
for companies that are going to get bought for 30 million, you care.
If you invest at 20 and the company gets bought for 30, you only
get 1.5x.  You might as well buy Apple.&lt;br/&gt;&lt;br/&gt;So if some of the super-angels were looking for companies that could
get acquired quickly, that would explain why they'd care about
valuations.  But why would they be looking for those?   Because
depending on the meaning of "quickly," it could actually be very
profitable.  A company that gets acquired for 30 million is a failure
to a VC, but it could be a 10x return for an angel, and moreover,
a &lt;i&gt;quick&lt;/i&gt; 10x return.  Rate of return is what matters in
investing—not the multiple you get, but the multiple per year.
If a super-angel gets 10x in one year, that's a higher rate of
return than a VC could ever hope to get from a company that took 6
years to go public.  To get the same rate of return, the VC would
have to get a multiple of 10^6—one million x.  Even Google
didn't come close to that.&lt;br/&gt;&lt;br/&gt;So I think at least some super-angels are looking for companies
that will get bought.  That's the only rational explanation for
focusing on getting the right valuations, instead of the right
companies.  And if so they'll be different to deal with than VCs.
They'll be tougher on valuations, but more accommodating if you want
to sell early.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Prognosis&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Who will win, the super-angels or the VCs?  I think the answer to
that is, some of each.  They'll each become more like one another.
The super-angels will start to invest larger amounts, and the VCs
will gradually figure out ways to make more, smaller investments
faster.  A decade from now the players will be hard to tell apart,
and there will probably be survivors from each group.&lt;br/&gt;&lt;br/&gt;What does that mean for founders?  One thing it means is that the
high valuations startups are presently getting may not last forever.
To the extent that valuations are being driven up by price-insensitive
VCs, they'll fall again if VCs become more like super-angels and
start to become more miserly about valuations.  Fortunately if this
does happen it will take years.&lt;br/&gt;&lt;br/&gt;The short term forecast is more competition between investors, which
is good news for you.  The super-angels will try to undermine the
VCs by acting faster, and the VCs will try to undermine the
super-angels by driving up valuations.  Which for founders will
result in the perfect combination: funding rounds that close fast,
with high valuations.&lt;br/&gt;&lt;br/&gt;But remember that to get that combination, your startup will have
to appeal to both super-angels and VCs.  If you don't seem like you
have the potential to go public, you won't be able to use VCs to
drive up the valuation of an angel round.&lt;br/&gt;&lt;br/&gt;There is a danger of having VCs in an angel round: the so-called
signalling risk.  If VCs are only doing it in the hope of investing
more later, what happens if they don't?  That's a signal to everyone
else that they think you're lame.&lt;br/&gt;&lt;br/&gt;How much should you worry about that?  The seriousness of signalling
risk depends on how far along you are.  If by the next time you
need to raise money, you have graphs showing rising revenue or
traffic month after month, you don't have to worry about any signals
your existing investors are sending.  Your results will speak for
themselves.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/superangels.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Whereas if the next time you need to raise money you won't yet have
concrete results, you may need to think more about the message your
investors might send if they don't invest more.  I'm not sure yet
how much you have to worry, because this whole phenomenon of VCs
doing angel investments is so new. But my instincts tell me you
don't have to worry much.  Signalling risk smells like one of those
things founders worry about that's not a real problem.  As a rule,
the only thing that can kill a good startup is the startup itself.
Startups hurt themselves way more often than competitors hurt them,
for example.  I suspect signalling risk is in this category too.&lt;br/&gt;&lt;br/&gt;One thing YC-funded startups have been doing to mitigate the risk
of taking money from VCs in angel rounds is not to take too much
from any one VC.  Maybe that will help, if you have the luxury of
turning down money.&lt;br/&gt;&lt;br/&gt;Fortunately, more and more startups will.  After decades of competition
that could best be described as intramural, the startup funding
business is finally getting some real competition.  That should
last several years at least, and maybe a lot longer. Unless there's
some huge market crash, the next couple years are going to be a
good time for startups to raise money.  And that's exciting because
it means lots more startups will happen.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I've also heard them called "Mini-VCs" and "Micro-VCs." I
don't know which name will stick.&lt;br/&gt;&lt;br/&gt;There were a couple predecessors.  Ron Conway had angel funds
starting in the 1990s, and in some ways First Round Capital is closer to a
super-angel than a VC fund.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
It wouldn't cut their overall returns tenfold, because investing
later would probably (a) cause them to lose less on investments
that failed, and (b) not allow them to get as large a percentage
of startups as they do now.  So it's hard to predict precisely what
would happen to their returns.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
The brand of an investor derives mostly from the success of
their portfolio companies.  The top VCs thus have a big brand
advantage over the super-angels.  They could make it self-perpetuating
if they used it to get all the best new startups.  But I don't think
they'll be able to.  To get all the best startups, you have to do
more than make them want you.  You also have to want them; you have
to recognize them when you see them, and that's much harder.
Super-angels will snap up stars that VCs miss.  And that will cause
the brand gap between the top VCs and the super-angels gradually
to erode.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Though in a traditional series A round VCs put two partners
on your board, there are signs now that VCs may begin to conserve
board seats by switching to what used to be considered an angel-round
board, consisting of two founders and one VC.  Which is also to the
founders' advantage if it means they still control the company.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
In a series A round, you usually have to give up more than
the actual amount of stock the VCs buy, because they insist you
dilute yourselves to set aside an "option pool" as well.  I predict
this practice will gradually disappear though.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
The best thing for founders, if they can get it, is a convertible
note with no valuation cap at all.  In that case the money invested
in the angel round just converts into stock at the valuation of the
next round, no matter how large.  Angels and super-angels tend not
to like uncapped notes. They have no idea how much of the company
they're buying.  If the company does well and the valuation of the
next round is high, they may end up with only a sliver of it.  So
by agreeing to uncapped notes, VCs who don't care about valuations
in angel rounds can make offers that super-angels hate to match.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Obviously signalling risk is also not a problem if you'll
never need to raise more money.  But startups are often mistaken
about that.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, John Bautista, Patrick Collison, James
Lindenbaum, Reid Hoffman, Jessica Livingston and Harj Taggar
for reading drafts
of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//superangels.html</guid>
      <pubDate>Fri, 01 Oct 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What We Look for in Founders</title>
      <link>https://paulgraham.com//founders.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010
&lt;p&gt;
&lt;i&gt;(I wrote this for Forbes, who asked me to write something
about the qu&lt;/i&gt;&lt;/p&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2010
&lt;p&gt;
&lt;i&gt;(I wrote this for Forbes, who asked me to write something
about the qualities we look for in founders.  In print they had to cut
the last item because they didn't have room.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Determination&lt;/b&gt;&lt;br&gt;&lt;br/&gt;This has turned out to be the most important quality in startup
founders.  We thought when we started Y Combinator that the most
important quality would be intelligence.  That's the myth in the
Valley. And certainly you don't want founders to be stupid.  But
as long as you're over a certain threshold of intelligence, what
matters most is determination.  You're going to hit a lot of
obstacles.  You can't be the sort of person who gets &lt;a href="https://paulgraham.com/die.html"&gt;demoralized&lt;/a&gt;
easily.&lt;br/&gt;&lt;br/&gt;Bill Clerico and Rich Aberman of &lt;a href="http://wepay.com"&gt;WePay&lt;/a&gt; 
are a good example.  They're
doing a finance startup, which means endless negotiations with big,
bureaucratic companies.  When you're starting a startup that depends
on deals with big companies to exist, it often feels like they're
trying to ignore you out of existence.  But when Bill Clerico starts
calling you, you may as well do what he asks, because he is not
going away.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;2. Flexibility&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You do not however want the sort of determination implied by phrases
like "don't give up on your dreams."  The world of startups is so
unpredictable that you need to be able to modify your dreams on the
fly.  The best metaphor I've found for the combination of determination
and flexibility you need is a &lt;a href="https://paulgraham.com/relres.html"&gt;running back&lt;/a&gt;.  
He's determined to get
downfield, but at any given moment he may need to go sideways or
even backwards to get there.&lt;br/&gt;&lt;br/&gt;The current record holder for flexibility may be Daniel Gross of
&lt;a href="http://greplin.com"&gt;Greplin&lt;/a&gt;.  He applied to YC with 
some bad ecommerce idea.  We told
him we'd fund him if he did something else.  He thought for a second,
and said ok.  He then went through two more ideas before settling
on Greplin.  He'd only been working on it for a couple days when
he presented to investors at Demo Day, but he got a lot of interest.
He always seems to land on his feet.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;3. Imagination&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Intelligence does matter a lot of course.  It seems like the type
that matters most is imagination.  It's not so important to be able
to solve predefined problems quickly as to be able to come up with
surprising new ideas.  In the startup world, most good ideas 
&lt;a href="https://paulgraham.com/googles.html"&gt;seem
bad&lt;/a&gt; initially.  If they were obviously good, someone would already
be doing them.  So you need the kind of intelligence that produces
ideas with just the right level of craziness.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://airbnb.com"&gt;Airbnb&lt;/a&gt; is that kind of idea.  
In fact, when we funded Airbnb, we
thought it was too crazy.  We couldn't believe large numbers of
people would want to stay in other people's places.  We funded them
because we liked the founders so much.  As soon as we heard they'd
been supporting themselves by selling Obama and McCain branded
breakfast cereal, they were in.  And it turned out the idea was on
the right side of crazy after all.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;4. Naughtiness&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Though the most successful founders are usually good people, they
tend to have a piratical gleam in their eye.  They're not Goody
Two-Shoes type good.  Morally, they care about getting the big
questions right, but not about observing proprieties.  That's why
I'd use the word naughty rather than evil.  They delight in 
&lt;a href="https://paulgraham.com/gba.html"&gt;breaking
rules&lt;/a&gt;, but not rules that matter.  This quality may be redundant
though; it may be implied by imagination.&lt;br/&gt;&lt;br/&gt;Sam Altman of &lt;a href="http://loopt.com"&gt;Loopt&lt;/a&gt; 
is one of the most successful alumni, so we
asked him what question we could put on the Y Combinator application
that would help us discover more people like him.  He said to ask
about a time when they'd hacked something to their advantage—hacked in the sense of beating the system, not breaking into
computers.  It has become one of the questions we pay most attention
to when judging applications.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;5. Friendship&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Empirically it seems to be hard to start a startup with just 
&lt;a href="https://paulgraham.com/startupmistakes.html"&gt;one
founder&lt;/a&gt;.  Most of the big successes have two or three.  And the
relationship between the founders has to be strong.  They must
genuinely like one another, and work well together.  Startups do
to the relationship between the founders what a dog does to a sock:
if it can be pulled apart, it will be.&lt;br/&gt;&lt;br/&gt;Emmett Shear and Justin Kan of &lt;a href="http://justin.tv"&gt;Justin.tv&lt;/a&gt; 
are a good example of close
friends who work well together.  They've known each other since
second grade.  They can practically read one another's minds.  I'm
sure they argue, like all founders, but I have never once sensed
any unresolved tension between them.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Jessica Livingston and Chris Steiner for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//founders.html</guid>
      <pubDate>Fri, 01 Oct 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>High Resolution Fundraising</title>
      <link>https://paulgraham.com//hiresfund.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2010&lt;br/&gt;&lt;br/&gt;The reason startups have been using 
&amp;lt;a href="http://twitter.com/pa&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2010&lt;br/&gt;&lt;br/&gt;The reason startups have been using 
&lt;a href="http://twitter.com/paulg/status/22319113993"&gt;more convertible notes&lt;/a&gt; in angel
rounds is that they make deals close faster.  By making it easier
for startups to give different prices to different investors, they
help them break the sort of deadlock that happens when investors
all wait to see who else is going to invest.&lt;br&gt;&lt;br/&gt;By far the biggest influence on investors' opinions of a startup
is the opinion of other investors.  There are very, very few who
simply decide for themselves.  Any startup founder can tell you the
most common question they hear from investors is not about the
founders or the product, but "who else is investing?"&lt;br/&gt;&lt;br/&gt;That tends to produce deadlocks.  Raising an old-fashioned 
fixed-size equity round can take weeks, because all the angels sit around
waiting for the others to commit, like competitors in a bicycle
sprint who deliberately ride slowly at the start so they can follow
whoever breaks first.&lt;br/&gt;&lt;br/&gt;Convertible notes let startups beat such deadlocks by rewarding
investors willing to move first with lower (effective) valuations.
Which they deserve because they're taking more risk.  It's much
safer to invest in a startup Ron Conway has already invested in;
someone who comes after him should pay a higher price.&lt;br/&gt;&lt;br/&gt;The reason convertible notes allow more flexibility in price is
that valuation caps aren't actual valuations, and notes are cheap
and easy to do.  So you can do high-resolution fundraising: if you
wanted you could have a separate note with a different cap for each
investor.&lt;br/&gt;&lt;br/&gt;That cap need not simply rise monotonically.  A startup could 
also give better deals to investors they expected to help
them most.  The point is simply that different investors, 
whether because of the help they offer or their willingness to
commit, have different values for
startups, and their terms should reflect that.&lt;br/&gt;&lt;br/&gt;Different terms for different investors is
clearly the way of the future.  Markets always evolve toward higher
resolution.  You may not need to use convertible notes to do it.
With sufficiently lightweight standardized equity terms (and some
changes in investors' and lawyers' expectations about equity rounds)
you might be able to do the same thing with equity instead of debt.
Either would be fine with startups, so long as they can easily
change their valuation.&lt;br/&gt;&lt;br/&gt;Deadlocks weren't the only problem with fixed-size equity rounds.
Another was that startups had to decide in advance how much to
raise.  I think it's a mistake for a startup to fix upon a specific
number. If investors are easily convinced, the startup should raise more
now, and if investors are skeptical, the startup should take a
smaller amount and use that to get the company to the point where
it's more convincing.&lt;br/&gt;&lt;br/&gt;It's just not reasonable to expect startups to pick an optimal round
size in advance, because that depends on the reactions of investors,
and those are impossible to predict.&lt;br/&gt;&lt;br/&gt;Fixed-size, multi-investor angel rounds are such a bad idea for
startups that one wonders why things were ever done that way.  One
possibility is that this custom reflects the way investors like to
collude when they can get away with it.  But I think the actual
explanation is less sinister.  I think angels (and their lawyers)
organized rounds this way in unthinking imitation of VC series A
rounds.  In a series A, a fixed-size equity round with a lead makes
sense, because there is usually just one big investor, who is
unequivocally the lead.  Fixed-size series A rounds already are
high res.  But the more investors you have in a round, the less
sense it makes for everyone to get the same price.&lt;br/&gt;&lt;br/&gt;The most interesting question here may be what high res fundraising
will do to the world of investors.  Bolder investors will now get
rewarded with lower prices.  But more important, in a
hits-driven business, is that they'll be able to get into the deals
they want.  Whereas the "who else is investing?" type of investors
will not only pay higher prices, but may not be able to get into
the best deals at all.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Immad Akhund, Sam Altman, John Bautista, Pete Koomen, 
Jessica Livingston, Dan Siroker, Harj Taggar, and
Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//hiresfund.html</guid>
      <pubDate>Wed, 01 Sep 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Future of Startup Funding</title>
      <link>https://paulgraham.com//future.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2010&lt;br/&gt;&lt;br/&gt;Two years ago I
&lt;a href="http://www.paulgraham.com/googles.html#next"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2010&lt;br/&gt;&lt;br/&gt;Two years ago I
&lt;a href="http://www.paulgraham.com/googles.html#next"&gt;wrote&lt;/a&gt; about what I called "a huge, unexploited
opportunity in startup funding:" the growing disconnect between
VCs, whose current business model requires them to invest large
amounts, and a large class of startups that need less than they
used to.  Increasingly, startups want a couple hundred thousand
dollars, not a couple million. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br&gt;&lt;br/&gt;The opportunity is a lot less unexploited now.  Investors have
poured into this territory from both directions.  VCs are much more
likely to make angel-sized investments than they were a year ago.
And meanwhile the past year has seen a dramatic increase in a new
type of investor: the super-angel, who operates like an angel, but
using other people's money, like a VC.&lt;br/&gt;&lt;br/&gt;Though a lot of investors are entering this territory, there is
still room for more.  The distribution of investors should mirror
the distribution of startups, which has the usual power law dropoff.
So there should be a lot more people investing tens or hundreds of
thousands than millions. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In fact, it may be good for angels that there are more people doing
angel-sized deals, because if angel rounds become more legitimate,
then startups may start to opt for angel rounds even when they
could, if they wanted, raise series A rounds from VCs.  One reason
startups prefer series A rounds is that they're more prestigious.
But if angel investors become more active and better known, they'll
increasingly be able to compete with VCs in brand.&lt;br/&gt;&lt;br/&gt;Of course, prestige isn't the main reason to prefer a series A
round.  A startup will probably get more attention from investors
in a series A round than an angel round.  So if a startup is choosing
between an angel round and an A round from a good VC fund, I usually
advise them to take the A round. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But while series A rounds aren't going away, I think VCs should be
more worried about super-angels than vice versa.  Despite their
name, the super-angels are really mini VC funds, and they clearly
have existing VCs in their sights.&lt;br/&gt;&lt;br/&gt;They would seem to have history on their side.  
The pattern here seems the same
one we see when startups and established companies enter a new
market.  Online video becomes possible, and YouTube plunges right
in, while existing media companies embrace it only half-willingly,
driven more by fear than hope, and aiming more to protect their
turf than to do great things for users.  Ditto for PayPal.  This
pattern is repeated over and over, and it's usually the invaders
who win. In this case the super-angels are the invaders.  Angel
rounds are their whole business, as online video was for YouTube.
Whereas VCs who make angel investments mostly do it as a way to
generate deal flow for series A rounds.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;On the other hand, startup investing is a very strange business.
Nearly all the returns are concentrated in a few big winners.  If
the super-angels merely fail to invest in (and to some extent
produce) the big winners, they'll be out of business, even if they
invest in all the others.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;VCs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Why don't VCs start doing smaller series A rounds?  The sticking
point is board seats.  In a traditional series A round, the partner
whose deal it is takes a seat on the startup's board.  If we assume
the average startup runs for 6 years and a partner can bear to be
on 12 boards at once, then a VC fund can do 2 series A deals per
partner per year.&lt;br/&gt;&lt;br/&gt;It has always seemed to me the solution is to take fewer board
seats.  You don't have to be on the board to help a startup.  Maybe
VCs feel they need the power that comes with board membership to
ensure their money isn't wasted.  But have they tested that theory?
Unless they've tried not taking board seats and found their returns
are lower, they're not bracketing the problem.&lt;br/&gt;&lt;br/&gt;I'm not saying VCs don't help startups.  The good ones help them a
lot.  What I'm saying is that the kind of help that matters, you
may not have to be a board member to give.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;How will this all play out?  Some VCs will probably adapt, by doing
more, smaller deals.  I wouldn't be surprised if by streamlining
their selection process and taking fewer board seats, VC funds could
do 2 to 3 times as many series A rounds with no loss of quality.&lt;br/&gt;&lt;br/&gt;But other VCs will make no more than superficial changes.  VCs are
conservative, and the threat to them isn't mortal.  The VC funds
that don't adapt won't be violently displaced.  They'll edge gradually
into a different business without realizing it.  They'll still do
what they will call series A rounds, but these will increasingly
be de facto series B rounds.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In such rounds they won't get the 25 to 40% of the company they do
now.  You don't give up as much of the company in later rounds
unless something is seriously wrong.  Since the VCs who don't adapt
will be investing later, their returns from winners may be smaller.
But investing later should also mean they have fewer losers.  So
their ratio of risk to return may be the same or even better.
They'll just have become a different, more conservative, type of
investment.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Angels&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In the big angel rounds that increasingly compete with series A
rounds, the investors won't take as much equity as VCs do now.  And
VCs who try to compete with angels by doing more, smaller deals
will probably find they have to take less equity to do it. Which
is good news for founders: they'll get to keep more of the company.&lt;br/&gt;&lt;br/&gt;The deal terms of angel rounds will become less restrictive
too—not just less restrictive than series A terms, but less
restrictive than angel terms have traditionally been.&lt;br/&gt;&lt;br/&gt;In the future, angel rounds will less often be for specific amounts
or have a lead investor.  In the old days, the standard m.o. for
startups was to find one angel to act as the lead investor.  You'd
negotiate a round size and valuation with the lead, who'd supply
some but not all of the money.  Then the startup and the lead would
cooperate to find the rest.&lt;br/&gt;&lt;br/&gt;The future of angel rounds looks more like this: instead of a fixed
round size, startups will do a rolling close, where they take money
from investors one at a time till they feel they have enough.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
And though there's going to be one investor who gives them the first
check, and his or her help in recruiting other investors will
certainly be welcome, this initial investor will no longer be the
lead in the old sense of managing the round.  The startup will now
do that themselves.&lt;br/&gt;&lt;br/&gt;There will continue to be lead investors in the sense of investors
who take the lead in &lt;i&gt;advising&lt;/i&gt; a startup.  They may also make
the biggest investment.  But they won't always have to be the one
terms are negotiated with, or be the first money in, as they have
in the past.  Standardized paperwork will do away with the need to
negotiate anything except the valuation, and that will get easier
too.&lt;br/&gt;&lt;br/&gt;If multiple investors have to share a valuation, it will be whatever
the startup can get from the first one to write a check, limited
by their guess at whether this will make later investors balk.  But
there may not have to be just one valuation.  Startups are increasingly
raising money on convertible notes, and convertible notes have not
valuations but at most valuation &lt;i&gt;caps&lt;/i&gt;: caps on what the
effective valuation will be when the debt converts to equity (in a
later round, or upon acquisition if that happens first).  That's
an important difference because it means a startup could do multiple
notes at once with different caps.  This is now starting to happen,
and I predict it will become more common.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Sheep&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The reason things are moving this way is that the old way sucked
for startups.  Leads could (and did) use a fixed size round as a
legitimate-seeming way of saying what all founders hate to hear:
I'll invest if other people will.  Most investors, unable to judge
startups for themselves, rely instead on the opinions of other
investors.  If everyone wants in, they want in too; if not, not.
Founders hate this because it's a recipe for deadlock, and delay
is the thing a startup can least afford.  Most investors know this
m.o. is lame, and few say openly that they're doing it.  But the
craftier ones achieve the same result by offering to lead rounds
of fixed size and supplying only part of the money.  If the startup
can't raise the rest, the lead is out too.  How could they go ahead
with the deal?  The startup would be underfunded!&lt;br/&gt;&lt;br/&gt;In the future, investors will increasingly be unable to offer
investment subject to contingencies like other people investing.
Or rather, investors who do that will get last place in line.
Startups will go to them only to fill up rounds that are mostly
subscribed.  And since hot startups tend to have rounds that are
oversubscribed, being last in line means they'll probably miss the
hot deals.  Hot deals and successful startups are not identical,
but there is a significant correlation. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
So investors who won't invest unilaterally will have lower returns.&lt;br/&gt;&lt;br/&gt;Investors will probably find they do better when deprived of this
crutch anyway.   Chasing hot deals doesn't make investors choose
better; it just makes them feel better about their choices.  I've
seen feeding frenzies both form and fall apart many times, and as
far as I can tell they're mostly random. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
If investors can
no longer rely on their herd instincts, they'll have to think more
about each startup before investing.  They may be surprised how
well this works.&lt;br/&gt;&lt;br/&gt;Deadlock wasn't the only disadvantage of letting a lead investor
manage an angel round.  The investors would not infrequently collude
to push down the valuation.  And rounds took too long to close,
because however motivated the lead was to get the round closed, he
was not a tenth as motivated as the startup.&lt;br/&gt;&lt;br/&gt;Increasingly, startups are taking charge of their own angel rounds.
Only a few do so far, but I think we can already declare the old
way dead, because those few are the best startups.  They're the
ones in a position to tell investors how the round is going to work.
And if the startups you want to invest in do things a certain way,
what difference does it make what the others do?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Traction&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In fact, it may be slightly misleading to say that angel rounds
will increasingly take the place of series A rounds.  What's really
happening is that startup-controlled rounds are taking the place
of investor-controlled rounds.&lt;br/&gt;&lt;br/&gt;This is an instance of a very important meta-trend, one that Y
Combinator itself has been based on from the beginning: founders
are becoming increasingly powerful relative to investors.  So if
you want to predict what the future of venture funding will be like,
just ask: how would founders like it to be?  One by one, all the
things founders dislike about raising money are going to get
eliminated. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Using that heuristic, I'll predict a couple more things.  One is
that investors will increasingly be unable to wait for startups to
have "traction" before they put in significant money.  It's hard
to predict in advance which startups will succeed.  So most investors
prefer, if they can, to wait till the startup is already succeeding,
then jump in quickly with an offer.  Startups hate this as well,
partly because it tends to create deadlock, and partly because it
seems kind of slimy.  If you're a promising startup but don't yet
have significant growth, all the investors are your friends in
words, but few are in actions.  They all say they love you, but
they all wait to invest. Then when you start to see growth, they
claim they were your friend all along, and are aghast at the thought
you'd be so disloyal as to leave them out of your round.  If founders
become more powerful, they'll be able to make investors give them
more money upfront.&lt;br/&gt;&lt;br/&gt;(The worst variant of this behavior is the tranched deal, where the
investor makes a small initial investment, with more to follow if
the startup does well.  In effect, this structure gives the investor
a free option on the next round, which they'll only take if it's
worse for the startup than they could get in the open market.
Tranched deals are an abuse.  They're increasingly rare, and they're
going to get rarer.) 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f11n"&gt;&lt;font color="#999999"&gt;11&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Investors don't like trying to predict which startups will succeed,
but increasingly they'll have to.  Though the way that happens won't
necessarily be that the behavior of existing investors will change;
it may instead be that they'll be replaced by other investors with
different behavior—that investors who understand startups
well enough to take on the hard problem of predicting their trajectory
will tend to displace suits whose skills lie more in raising money
from LPs.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Speed&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The other thing founders hate most about fundraising is how long
it takes.  So as founders become more powerful, rounds should start
to close faster.&lt;br/&gt;&lt;br/&gt;Fundraising is still terribly distracting for startups. If you're
a founder in the middle of raising a round, the round is the &lt;a href="https://paulgraham.com/top.html"&gt;top idea in your mind&lt;/a&gt;, which means working on the
company isn't.  If a round takes 2 months to close, which is
reasonably fast by present standards, that means 2 months during
which the company is basically treading water.  That's the worst
thing a startup could do.&lt;br/&gt;&lt;br/&gt;So if investors want to get the best deals, the way to do it will
be to close faster.   Investors don't need weeks to make up their
minds anyway.  We decide based on about 10 minutes of reading an
application plus 10 minutes of in person interview, and we only
regret about 10% of our decisions.  If we can decide in 20 minutes,
surely the next round of investors can decide in a couple days.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f12n"&gt;&lt;font color="#999999"&gt;12&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;There are a lot of institutionalized delays in startup funding: the
multi-week mating dance with investors; the distinction between
termsheets and deals; the fact that each series A has enormously
elaborate, custom paperwork.  Both founders and investors tend to
take these for granted.  It's the way things have always been.  But
ultimately the reason these delays exist is that they're to the
advantage of investors.  More time gives investors more information
about a startup's trajectory, and it also tends to make startups
more pliable in negotiations, since they're usually short of money.&lt;br/&gt;&lt;br/&gt;These conventions weren't designed to drag out the funding process,
but that's why they're allowed to persist.  Slowness is to the
advantage of investors, who have in the past been the ones with the
most power.  But there is no need for rounds to take months or even
weeks to close, and once founders realize that, it's going to stop.
Not just in angel rounds, but in series A rounds too.  The future
is simple deals with standard terms, done quickly.&lt;br/&gt;&lt;br/&gt;One minor abuse that will get corrected in the process is option
pools.  In a traditional series A round, before the VCs invest they
make the company set aside a block of stock for future hires—usually
between 10 and 30% of the company.  The point is to ensure this
dilution is borne by the existing shareholders.  The practice isn't
dishonest; founders know what's going on.  But it makes deals
unnecessarily complicated.  In effect the valuation is 2 numbers.
There's no need to keep doing this.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/future.html#f13n"&gt;&lt;font color="#999999"&gt;13&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The final thing founders want is to be able to sell some of
their own stock in later rounds.  This won't be a change, 
because the practice is now quite common.  A lot of investors
hated the idea, but the world hasn't exploded as a result,
so it will happen more, and more openly.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Surprise&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I've talked here about a bunch of changes that will be forced on
investors as founders become more powerful.  Now the good news:
investors may actually make more money as a result.&lt;br/&gt;&lt;br/&gt;A couple days ago an interviewer 
&lt;a href="http://techcrunch.tv/watch?id=Q3amZtMTryrpiP80cbUtsV2ah92eZP2m"&gt;asked 
me&lt;/a&gt; if founders having more
power would be better or worse for the world.  I was surprised,
because I'd never considered that question.  Better or worse, it's
happening.  But after a second's reflection, the answer seemed
obvious.  Founders understand their companies better than investors,
and it has to be better if the people with more knowledge have more
power.&lt;br/&gt;&lt;br/&gt;One of the mistakes novice pilots make is overcontrolling the
aircraft: applying corrections too vigorously, so the aircraft
oscillates about the desired configuration instead of approaching
it asymptotically.  It seems probable that investors have till now
on average been overcontrolling their portfolio companies.  In a
lot of startups, the biggest source of stress for the founders is
not competitors but investors.  Certainly it was for us at Viaweb.
And this is not a new phenomenon: investors were James Watt's biggest
problem too.   If having less power prevents investors from
overcontrolling startups, it should be better not just for founders
but for investors too.&lt;br/&gt;&lt;br/&gt;Investors may end up with less stock per startup, but startups will
probably do better with founders more in control, and there will
almost certainly be more of them.  Investors all compete with one
another for deals, but they aren't one another's main competitor.
Our main competitor is employers.  And so far that competitor is
crushing us.  Only a tiny fraction of people who could start a
startup do.  Nearly all customers choose the competing product, a
job.  Why?  Well, let's look at the product we're offering.  An
unbiased review would go something like this:
&lt;blockquote&gt;
  Starting a startup gives you more freedom and the opportunity to
  make a lot more money than a job, but it's also hard work and at
  times very stressful.
&lt;/blockquote&gt;
Much of the stress comes from dealing with investors.  If reforming
the investment process removed that stress, we'd make our product
much more attractive.  The kind of people who make good startup
founders don't mind dealing with technical problems—they enjoy
technical problems—but they hate the type of problems investors
cause.&lt;br/&gt;&lt;br/&gt;Investors have no
idea that when they maltreat one startup, they're preventing 10
others from happening, but they are.  Indirectly, but they are.  So
when investors stop trying to squeeze a little more out of their
existing deals, they'll find they're net ahead, because so many
more new deals appear.&lt;br/&gt;&lt;br/&gt;One of our axioms at Y Combinator is not to think of deal flow as
a zero-sum game.  Our main focus is to encourage more startups to happen,
not to win a larger share of the existing stream.  We've found this
principle very useful, and we think as it spreads outward it will
help later stage investors as well.&lt;br/&gt;&lt;br/&gt;"Make something people want"
applies to us too.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
In this essay I'm talking mainly about software startups.
These points don't apply to types of startups that are still expensive
to start, e.g. in energy or biotech.&lt;br/&gt;&lt;br/&gt;Even the cheap kinds of startups will generally raise large amounts
at some point, when they want to hire a lot of people.  What has
changed is how much they can get done before that.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
It's not the distribution of good startups that has a power
law dropoff, but the distribution of potentially good startups,
which is to say, good deals.  There are lots of potential winners,
from which a few actual winners emerge with superlinear certainty.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
As I was writing this, I asked some founders who'd taken
series A rounds from top VC funds whether it was worth it, and they
unanimously said yes.&lt;br/&gt;&lt;br/&gt;The quality of investor is more important than the type of round,
though.  I'd take an angel round from good angels over a series A
from a mediocre VC.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Founders also worry that taking an angel investment from a
VC means they'll look bad if the VC declines to participate in the
next round.  The trend of VC angel investing is so new that it's
hard to say how justified this worry is.&lt;br/&gt;&lt;br/&gt;Another danger, pointed out by Mitch Kapor, is that if VCs are only
doing angel deals to generate series A deal flow, then their
incentives aren't aligned with the founders'.  The founders want
the valuation of the next round to be high, and the VCs want it to
be low.  Again, hard to say yet how much of a problem this will be.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Josh Kopelman pointed out that another way to be on fewer
boards at once is to take board seats for shorter periods.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
Google was in this respect as so many others the pattern for
the future.  It would be great for VCs if the similarity extended
to returns.  That's probably too much to hope for, but the returns
may be somewhat higher, as I explain later.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
Doing a rolling close doesn't mean the company is always
raising money.  That would be a distraction.  The point of a rolling
close is to make fundraising take less time, not more.  With a
classic fixed sized round, you don't get any money till all the
investors agree, and that often creates a situation where they all
sit waiting for the others to act.  A rolling close usually prevents
this.&lt;br/&gt;&lt;br/&gt;&lt;!-- [&lt;a name="f8n"&gt;&lt;font color=#000000&gt;8&lt;/font&gt;&lt;/a&gt;]
Jeff Clavier pointed out a tax disadvantage of convertible
notes: they don't start the long term capital gains clock.  So
perhaps the ultimate solution, after investors have been conditioned
to do simpler deals with multiple caps by convertible notes, is
eventually to do equity rounds that approach the same simplicity
and flexibility.
--&gt;
[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
There are two (non-exclusive) causes of hot deals: the quality
of the company, and domino effects among investors.  The former is
obviously a better predictor of success.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
Some of the randomness is concealed by the fact that investment
is a self fulfilling prophecy.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
The shift in power to founders is exaggerated now because
it's a seller's market.  On the next downtick it will seem like I
overstated the case.  But on the next uptick after that, founders
will seem more powerful than ever.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f11n"&gt;&lt;font color="#000000"&gt;11&lt;/font&gt;&lt;/a&gt;]
More generally, it will become less common for the same
investor to invest in successive rounds, except when exercising an
option to maintain their percentage.  When the same investor invests
in successive rounds, it often means the startup isn't getting
market price.  They may not care; they may prefer to work with an
investor they already know; but as the investment market becomes
more efficient, it will become increasingly easy to get market price
if they want it.  Which in turn means the investment community will
tend to become more stratified.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f12n"&gt;&lt;font color="#000000"&gt;12&lt;/font&gt;&lt;/a&gt;]
The two 10 minuteses have 3 weeks between them so founders
can get cheap plane tickets, but except for that they could be
adjacent.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f13n"&gt;&lt;font color="#000000"&gt;13&lt;/font&gt;&lt;/a&gt;]
I'm not saying option pools themselves will go away.  They're
an administrative convenience.  What will go away is investors
requiring them.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, John Bautista, Trevor Blackwell,
Paul Buchheit, Jeff Clavier,
Patrick Collison, Ron Conway, Matt Cohler, Chris Dixon, Mitch Kapor,
Josh Kopelman, Pete Koomen, Carolynn Levy, Jessica Livingston, Ariel
Poler, Geoff Ralston, Naval Ravikant, Dan Siroker, Harj Taggar, and 
Fred Wilson
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//future.html</guid>
      <pubDate>Sun, 01 Aug 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What Happened to Yahoo</title>
      <link>https://paulgraham.com//yahoo.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2010&lt;br/&gt;&lt;br/&gt;When I went to work for Yahoo after they bought our startup in 1998,
i&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2010&lt;br/&gt;&lt;br/&gt;When I went to work for Yahoo after they bought our startup in 1998,
it felt like the center of the world.  It was supposed to be the
next big thing.  It was supposed to be what Google turned out to
be.&lt;br&gt;&lt;br/&gt;What went wrong?  The problems that hosed Yahoo go back a long time,
practically to the beginning of the company.  They were already
very visible when I got there in 1998.  Yahoo had two problems
Google didn't: easy money, and ambivalence about being a technology
company.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Money&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The first time I met Jerry Yang, we thought we were meeting for
different reasons.  He thought we were meeting so he could check
us out in person before buying us. I thought we were meeting so we
could show him our new technology, Revenue Loop.   It was a way of
sorting shopping search results.  Merchants bid a percentage of
sales for traffic, but the results were sorted not by the bid but
by the bid times the average amount a user would buy.  It was
like the algorithm Google uses now to sort ads, but this was in the
spring of 1998, before Google was founded.&lt;br/&gt;&lt;br/&gt;Revenue Loop was the optimal sort for shopping search, in the sense
that it sorted in order of how much money Yahoo would make from
each link.  But it wasn't just optimal in that sense.  Ranking
search results by user behavior also makes search better.  Users
train the search: you can start out finding matches based on mere
textual similarity, and as users buy more stuff the search results
get better and better.&lt;br/&gt;&lt;br/&gt;Jerry didn't seem to care.  I was confused.  I was showing him
technology that extracted the maximum value from search traffic,
and he didn't care?  I couldn't tell whether I was explaining it
badly, or he was just very poker faced.&lt;br/&gt;&lt;br/&gt;I didn't realize the answer till later, after I went to work at
Yahoo.  It was neither of my guesses.  The reason Yahoo didn't care
about a technique that extracted the full value of traffic was that
advertisers were already overpaying for it.  If Yahoo merely extracted
the actual value, they'd have made less.&lt;br/&gt;&lt;br/&gt;Hard as it is to believe now, the big money then was in banner ads.
Advertisers were willing to pay ridiculous amounts for banner ads.
So Yahoo's sales force had evolved to exploit this source of revenue.
Led by a large and terrifyingly formidable man called Anil Singh,
Yahoo's sales guys would fly out to Procter &amp;amp; Gamble and come back
with million dollar orders for banner ad impressions.&lt;br/&gt;&lt;br/&gt;The prices seemed cheap compared to print, which was what advertisers,
for lack of any other reference, compared them to.  But they were
expensive compared to what they were worth.  So these big, dumb
companies were a dangerous source of revenue to depend on.  But
there was another source even more dangerous: other Internet startups.&lt;br/&gt;&lt;br/&gt;By 1998, Yahoo was the beneficiary of a de facto Ponzi scheme.
Investors were excited about the Internet.  One reason they were
excited was Yahoo's revenue growth.  So they invested in new Internet
startups.  The startups then used the money to buy ads on Yahoo to
get traffic.  Which caused yet more revenue growth for Yahoo, and
further convinced investors the Internet was worth investing in.
When I realized this one day, sitting in my cubicle, I jumped up
like Archimedes in his bathtub, except instead of "Eureka!" I was
shouting "Sell!"&lt;br/&gt;&lt;br/&gt;Both the Internet startups and the Procter &amp;amp; Gambles were doing
brand advertising.  They didn't care about targeting.  They just
wanted lots of people to see their ads.  So traffic became the thing
to get at Yahoo.  It didn't matter what type.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/yahoo.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;It wasn't just Yahoo.  All the search engines were doing it.  This
was why they were trying to get people to start calling them "portals"
instead of "search engines." Despite the actual meaning of the word
portal, what they meant by it was a site where users would find
what they wanted on the site itself, instead of just passing through
on their way to other destinations, as they did at a search engine.&lt;br/&gt;&lt;br/&gt;I remember telling David Filo in late 1998 or early 1999 that Yahoo
should buy Google, because I and most of the other programmers in
the company were using it instead of Yahoo for search.  He told me
that it wasn't worth worrying about.  Search was only 6% of our
traffic, and we were growing at 10% a month.   It wasn't worth doing
better.&lt;br/&gt;&lt;br/&gt;I didn't say "But search traffic is worth more than other traffic!"
I said "Oh, ok."  Because I didn't realize either how much search
traffic was worth.  I'm not sure even Larry and Sergey did then.
If they had, Google presumably wouldn't have expended any effort
on enterprise search.&lt;br/&gt;&lt;br/&gt;If circumstances had been different, the people running Yahoo might
have realized sooner how important search was.  But they had the
most opaque obstacle in the world between them and the truth: money.
As long as customers were writing big checks for banner ads, it was
hard to take search seriously.  Google didn't have that to distract
them.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Hackers&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;But Yahoo also had another problem that made it hard to change
directions.  They'd been thrown off balance from the start by their
ambivalence about being a technology company.&lt;br/&gt;&lt;br/&gt;One of the weirdest things about Yahoo when I went to work there
was the way they insisted on calling themselves a "media company."
If you walked around their offices, it seemed like a software
company.  The cubicles were full of programmers writing code, product
managers thinking about feature lists and ship dates, support people
(yes, there were actually support people) telling users to restart
their browsers, and so on, just like a software company.  So why
did they call themselves a media company?&lt;br/&gt;&lt;br/&gt;One reason was the way they made money: by selling ads.  In 1995
it was hard to imagine a technology company making money that way.
Technology companies made money by selling their software to users.
Media companies sold ads.  So they must be a media company.&lt;br/&gt;&lt;br/&gt;Another big factor was the fear of Microsoft.   If anyone at Yahoo
considered the idea that they should be a technology company, the
next thought would have been that Microsoft would crush them.&lt;br/&gt;&lt;br/&gt;It's hard for anyone much younger than me to understand the fear
Microsoft still inspired in 1995.  Imagine a company with several
times the power Google has now, but way meaner.  It was perfectly
reasonable to be afraid of them.  Yahoo watched them crush the first
hot Internet company, Netscape.  It was reasonable to worry that
if they tried to be the next Netscape, they'd suffer the same fate.
How were they to know that Netscape would turn out to be Microsoft's
last victim?&lt;br/&gt;&lt;br/&gt;It would have been a clever move to pretend to be a media company
to throw Microsoft off their scent.  But unfortunately Yahoo actually
tried to be one, sort of.  Project managers at Yahoo were called
"producers," for example, and the different parts of the company
were called "properties." But what Yahoo really needed to be was a
technology company, and by trying to be something else, they ended
up being something that was neither here nor there.  That's why
Yahoo as a company has never had a sharply defined identity.&lt;br/&gt;&lt;br/&gt;The worst consequence of trying to be a media company was that they
didn't take programming seriously enough.  Microsoft (back in the
day), Google, and Facebook have all had hacker-centric cultures.
But Yahoo treated programming as a commodity.  At Yahoo, user-facing software
was controlled by product managers and designers.  The job of
programmers was just to take the work of the product managers and
designers the final step, by translating it into code.&lt;br/&gt;&lt;br/&gt;One obvious result of this practice was that when Yahoo built things,
they often weren't very good. But that wasn't the worst problem.
The worst problem was that they hired bad programmers.&lt;br/&gt;&lt;br/&gt;Microsoft (back in the day), Google, and Facebook have all been
obsessed with hiring the best programmers.  Yahoo wasn't.  They
preferred good programmers to bad ones, but they didn't have the
kind of single-minded, almost obnoxiously elitist focus on hiring
the smartest people that the big winners have had.  And when you
consider how much competition there was for programmers when they
were hiring, during the Bubble, it's not surprising that the quality
of their programmers was uneven.&lt;br/&gt;&lt;br/&gt;In technology, once you have bad programmers, you're doomed.  I
can't think of an instance where a company has sunk into technical
mediocrity and recovered. Good programmers want to work with other
good programmers.  So once the quality of programmers at your company
starts to drop, you enter a death spiral from which there is no
recovery.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/yahoo.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;At Yahoo this death spiral started early.  If there was ever a time when
Yahoo was a Google-style talent magnet, it was over by the time I
got there in 1998.&lt;br/&gt;&lt;br/&gt;The company felt prematurely old.  Most technology companies
eventually get taken over by suits and middle managers.  At Yahoo
it felt as if they'd deliberately accelerated this process.  They
didn't want to be a bunch of hackers.  They wanted to be suits.  A
media company should be run by suits.&lt;br/&gt;&lt;br/&gt;The first time I visited Google, they had about 500 people, the
same number Yahoo had when I went to work there.  But boy did things
seem different.  It was still very much a hacker-centric culture.
I remember talking to some programmers in the cafeteria about the
problem of gaming search results (now known as SEO), and they asked
"what should we do?"  Programmers at Yahoo wouldn't have asked that.
Theirs was not to reason why; theirs was to build what product
managers spec'd.  I remember coming away from Google thinking "Wow,
it's still a startup."&lt;br/&gt;&lt;br/&gt;There's not much we can learn from Yahoo's first fatal flaw. It's
probably too much to hope any company could avoid being damaged by
depending on a bogus source of revenue.  But startups can learn an
important lesson from the second one.  In the software business,
you can't afford not to have a hacker-centric culture.&lt;br/&gt;&lt;br/&gt;Probably the most impressive commitment I've heard to having a
hacker-centric culture came from Mark Zuckerberg, when he spoke at
Startup School in 2007.  He said that in the early days Facebook
made a point of hiring programmers even for jobs that would not
ordinarily consist of programming, like HR and marketing.&lt;br/&gt;&lt;br/&gt;So which companies need to have a hacker-centric culture?  Which
companies are "in the software business" in this respect?  As Yahoo
discovered, the area covered by this rule is bigger than most people
realize.  The answer is: any company that needs to have good software.&lt;br/&gt;&lt;br/&gt;Why would great programmers want to work for a company that didn't
have a hacker-centric culture, as long as there were others that
did?  I can imagine two reasons: if they were paid a huge amount,
or if the domain was interesting and none of the companies in it
were hacker-centric.  Otherwise you can't attract good programmers
to work in a suit-centric culture.  And without good programmers
you won't get good software, no matter how many people you put on
a task, or how many procedures you establish to ensure "quality."&lt;br/&gt;&lt;br/&gt;&lt;a href="https://paulgraham.com/gba.html"&gt;Hacker culture&lt;/a&gt; 
often seems kind of irresponsible.  That's why people
proposing to destroy it use phrases like "adult supervision." That
was the phrase they used at Yahoo.  But there are worse things than
seeming irresponsible.  Losing, for example.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
The closest we got to targeting when I was there was when we
created pets.yahoo.com in order to provoke a bidding war between 3
pet supply startups for the spot as top sponsor.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
In theory you could beat the death spiral by buying good
programmers instead of hiring them.  You can get programmers
who would never have come to you as employees by buying their 
startups. But so far the only companies smart enough
to do this are companies smart enough not to need to.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, and
Geoff Ralston for
reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//yahoo.html</guid>
      <pubDate>Sun, 01 Aug 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Lose Time and Money</title>
      <link>https://paulgraham.com//selfindulgence.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2010&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I suddenly got a lot of money.  I
now had to think about something I hadn't had to think about before:
how not to lose it.   I knew it was possible to go from rich to
poor, just as it was possible to go from poor to rich.  But while
I'd spent a lot of the past several years studying the paths from
&lt;a href="https://paulgraham.com/wealth.html"&gt;poor to rich&lt;/a&gt;, 
I knew practically nothing about the paths from rich
to&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2010&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I suddenly got a lot of money.  I
now had to think about something I hadn't had to think about before:
how not to lose it.   I knew it was possible to go from rich to
poor, just as it was possible to go from poor to rich.  But while
I'd spent a lot of the past several years studying the paths from
&lt;a href="https://paulgraham.com/wealth.html"&gt;poor to rich&lt;/a&gt;, 
I knew practically nothing about the paths from rich
to poor.  Now, in order to avoid them, I had to learn where they
were.&lt;br/&gt;&lt;br/&gt;So I started to pay attention to how fortunes are lost.  If you'd
asked me as a kid how rich people became poor, I'd have said by
spending all their money.  That's how it happens in books and movies,
because that's the colorful way to do it.  But in fact the way most
fortunes are lost is not through excessive expenditure, but through
bad investments.&lt;br/&gt;&lt;br/&gt;It's hard to spend a fortune without noticing.  Someone with ordinary
tastes would find it hard to blow through more than a few tens of
thousands of dollars without thinking "wow, I'm spending a lot of
money."  Whereas if you start trading derivatives, you can lose a
million dollars (as much as you want, really) in the blink of an
eye.&lt;br/&gt;&lt;br/&gt;In most people's minds, spending money on luxuries sets off alarms
that making investments doesn't.  Luxuries seem self-indulgent.
And unless you got the money by inheriting it or winning a lottery,
you've already been thoroughly trained that self-indulgence leads
to trouble.  Investing bypasses those alarms.  You're not spending
the money; you're just moving it from one asset to another.  Which
is why people trying to sell you expensive things say "it's an
investment."&lt;br/&gt;&lt;br/&gt;The solution is to develop new alarms.  This can be a tricky business,
because while the alarms that prevent you from overspending are so
basic that they may even be in our DNA, the ones that prevent you
from making bad investments have to be learned, and are sometimes
fairly counterintuitive.&lt;br/&gt;&lt;br/&gt;A few days ago I realized something surprising: the situation with
time is much the same as with money.  The most dangerous way to
lose time is not to spend it having fun, but to spend it doing fake
work.  When you spend time having fun, you know you're being
self-indulgent.  Alarms start to go off fairly quickly.  If I woke
up one morning and sat down on the sofa and watched TV all day, I'd
feel like something was terribly wrong.  Just thinking about it
makes me wince.  I'd start to feel uncomfortable after sitting on
a sofa watching TV for 2 hours, let alone a whole day.&lt;br/&gt;&lt;br/&gt;And yet I've definitely had days when I might as well have sat in
front of a TV all day — days at the end of which, if I asked myself
what I got done that day, the answer would have been: basically,
nothing.  I feel bad after these days too, but nothing like as bad
as I'd feel if I spent the whole day on the sofa watching TV.  If
I spent a whole day watching TV I'd feel like I was descending into
perdition.  But the same alarms don't go off on the days when I get
nothing done, because I'm doing stuff that seems, superficially,
like real work.  Dealing with email, for example.  You do it sitting
at a desk.  It's not fun.  So it must be work.&lt;br/&gt;&lt;br/&gt;With time, as with money, avoiding pleasure is no longer enough to
protect you.  It probably was enough to protect hunter-gatherers,
and perhaps all pre-industrial societies.  So nature and nurture
combine to make us avoid self-indulgence. But the world has gotten
more complicated: the most dangerous traps now are new behaviors
that bypass our alarms about self-indulgence by mimicking more
virtuous types.  And the worst thing is, they're not even fun.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Patrick Collison, Jessica
Livingston, and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//selfindulgence.html</guid>
      <pubDate>Thu, 01 Jul 2010 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
