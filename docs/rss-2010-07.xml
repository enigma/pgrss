<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Paul Graham's Essays</title>
    <link>https://enigma.github.io/pgrss/rss.xml</link>
    <description>Paul Graham's Essays</description>
    <atom:link href="https://enigma.github.io/pgrss/rss-2010-07.xml" rel="self" type="application/rss+xml"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Jul 2010 00:00:00 +0000</lastBuildDate>
    <item>
      <title>How to Lose Time and Money</title>
      <link>https://paulgraham.com//selfindulgence.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2010&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I suddenly got a lot of money.  I
now had to think about something I hadn't had to think about before:
how not to lose it.   I knew it was possible to go from rich to
poor, just as it was possible to go from poor to rich.  But while
I'd spent a lot of the past several years studying the paths from
&lt;a href="https://paulgraham.com/wealth.html"&gt;poor to rich&lt;/a&gt;, 
I knew practically nothing about the paths from rich
to&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2010&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I suddenly got a lot of money.  I
now had to think about something I hadn't had to think about before:
how not to lose it.   I knew it was possible to go from rich to
poor, just as it was possible to go from poor to rich.  But while
I'd spent a lot of the past several years studying the paths from
&lt;a href="https://paulgraham.com/wealth.html"&gt;poor to rich&lt;/a&gt;, 
I knew practically nothing about the paths from rich
to poor.  Now, in order to avoid them, I had to learn where they
were.&lt;br/&gt;&lt;br/&gt;So I started to pay attention to how fortunes are lost.  If you'd
asked me as a kid how rich people became poor, I'd have said by
spending all their money.  That's how it happens in books and movies,
because that's the colorful way to do it.  But in fact the way most
fortunes are lost is not through excessive expenditure, but through
bad investments.&lt;br/&gt;&lt;br/&gt;It's hard to spend a fortune without noticing.  Someone with ordinary
tastes would find it hard to blow through more than a few tens of
thousands of dollars without thinking "wow, I'm spending a lot of
money."  Whereas if you start trading derivatives, you can lose a
million dollars (as much as you want, really) in the blink of an
eye.&lt;br/&gt;&lt;br/&gt;In most people's minds, spending money on luxuries sets off alarms
that making investments doesn't.  Luxuries seem self-indulgent.
And unless you got the money by inheriting it or winning a lottery,
you've already been thoroughly trained that self-indulgence leads
to trouble.  Investing bypasses those alarms.  You're not spending
the money; you're just moving it from one asset to another.  Which
is why people trying to sell you expensive things say "it's an
investment."&lt;br/&gt;&lt;br/&gt;The solution is to develop new alarms.  This can be a tricky business,
because while the alarms that prevent you from overspending are so
basic that they may even be in our DNA, the ones that prevent you
from making bad investments have to be learned, and are sometimes
fairly counterintuitive.&lt;br/&gt;&lt;br/&gt;A few days ago I realized something surprising: the situation with
time is much the same as with money.  The most dangerous way to
lose time is not to spend it having fun, but to spend it doing fake
work.  When you spend time having fun, you know you're being
self-indulgent.  Alarms start to go off fairly quickly.  If I woke
up one morning and sat down on the sofa and watched TV all day, I'd
feel like something was terribly wrong.  Just thinking about it
makes me wince.  I'd start to feel uncomfortable after sitting on
a sofa watching TV for 2 hours, let alone a whole day.&lt;br/&gt;&lt;br/&gt;And yet I've definitely had days when I might as well have sat in
front of a TV all day â€” days at the end of which, if I asked myself
what I got done that day, the answer would have been: basically,
nothing.  I feel bad after these days too, but nothing like as bad
as I'd feel if I spent the whole day on the sofa watching TV.  If
I spent a whole day watching TV I'd feel like I was descending into
perdition.  But the same alarms don't go off on the days when I get
nothing done, because I'm doing stuff that seems, superficially,
like real work.  Dealing with email, for example.  You do it sitting
at a desk.  It's not fun.  So it must be work.&lt;br/&gt;&lt;br/&gt;With time, as with money, avoiding pleasure is no longer enough to
protect you.  It probably was enough to protect hunter-gatherers,
and perhaps all pre-industrial societies.  So nature and nurture
combine to make us avoid self-indulgence. But the world has gotten
more complicated: the most dangerous traps now are new behaviors
that bypass our alarms about self-indulgence by mimicking more
virtuous types.  And the worst thing is, they're not even fun.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Patrick Collison, Jessica
Livingston, and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//selfindulgence.html</guid>
      <pubDate>Thu, 01 Jul 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Organic Startup Ideas</title>
      <link>https://paulgraham.com//organic.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ffc888"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
April 2010&lt;br/&gt;&lt;br/&gt;The best way to come up with startup ideas is to ask yourself the
quest&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ffc888"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
April 2010&lt;br/&gt;&lt;br/&gt;The best way to come up with startup ideas is to ask yourself the
question: what do you wish someone would make for you?&lt;br&gt;&lt;br/&gt;There are two types of startup ideas: those that grow organically
out of your own life, and those that you decide, from afar, are
going to be necessary to some class of users other than you.  Apple
was the first type.  Apple happened because Steve Wozniak wanted a
computer.  Unlike most people who wanted computers, he could design
one, so he did.  And since lots of other people wanted the same
thing, Apple was able to sell enough of them to get the company
rolling.  They still rely on this principle today, incidentally.
The iPhone is the phone Steve Jobs wants.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/organic.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Our own startup, Viaweb, was of the second type.  We made software
for building online stores.  We didn't need this software ourselves.
We weren't direct marketers.  We didn't even know when we started
that our users were called "direct marketers."  But we were
comparatively old when we started the company (I was 30 and Robert
Morris was 29), so we'd seen enough to know users would need this
type of software.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/organic.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;There is no sharp line between the two types of ideas, but
the most successful startups seem to be closer to the Apple type
than the Viaweb type.  When he was writing that first Basic interpreter
for the Altair, Bill Gates was writing something he would use, as
were Larry and Sergey when they wrote the first versions of Google.&lt;br/&gt;&lt;br/&gt;Organic ideas are generally preferable to the made up kind, but
particularly so when the founders are young.  It takes experience
to predict what other people will want.  The worst ideas we see at
Y Combinator are from young founders making things they think other
people will want.&lt;br/&gt;&lt;br/&gt;So if you want to start a startup and don't know yet what you're
going to do, I'd encourage you to focus initially on organic ideas.
What's missing or broken in your daily life?  Sometimes if you just
ask that question you'll get immediate answers.  It must have seemed
obviously broken to Bill Gates that you could only program the
Altair in machine language.&lt;br/&gt;&lt;br/&gt;You may need to stand outside yourself a bit to see brokenness,
because you tend to get used to it and take it for granted.  You
can be sure it's there, though.  There are always great ideas sitting
right under our noses.  In 2004 it was ridiculous that Harvard
undergrads were still using a Facebook printed on paper.  Surely
that sort of thing should have been online.&lt;br/&gt;&lt;br/&gt;There are ideas that obvious lying around now.  The reason you're
overlooking them is the same reason you'd have overlooked the idea
of building Facebook in 2004: organic startup ideas usually don't
seem like startup ideas at first.  We know now that Facebook was
very successful, but put yourself back in 2004.  Putting undergraduates'
profiles online wouldn't have seemed like much of a startup idea.
And in fact, it wasn't initially a startup idea.  When Mark spoke
at a YC dinner this winter he said he wasn't trying to start a
company when he wrote the first version of Facebook.  It was just
a project.  So was the Apple I when Woz first started working on
it.  He didn't think he was starting a company.  If these guys had
thought they were starting companies, they might have been tempted
to do something more "serious," and that would have been a mistake.&lt;br/&gt;&lt;br/&gt;So if you want to come up with organic startup ideas, I'd encourage
you to focus more on the idea part and less on the startup part.
Just fix things that seem broken, regardless of whether it seems
like the problem is important enough to build a company on.  If you
keep pursuing such threads it would be hard not to end up making
something of value to a lot of people, and when you do, surprise,
you've got a company.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/organic.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Don't be discouraged if what you produce initially is something
other people dismiss as a toy.  In fact, that's a good sign.
That's probably why everyone else has been overlooking the idea.  The first
microcomputers were dismissed as toys.  And the first planes, and
the first cars.  At this point, when someone comes to us with
something that users like but that we could envision forum trolls
dismissing as a toy, it makes us especially likely to invest.&lt;br/&gt;&lt;br/&gt;While young founders are at a disadvantage when coming up with
made-up ideas, they're the best source of organic ones, because
they're at the forefront of technology.  They use the latest stuff.
They only just decided what to use, so why wouldn't they?  And
because they use the latest stuff, they're in a position to discover
valuable types of fixable brokenness first.&lt;br/&gt;&lt;br/&gt;There's nothing more valuable than an unmet need that is just
becoming fixable.  If you find something broken that you can fix
for a lot of people, you've found a gold mine.  As with an actual
gold mine, you still have to work hard to get the gold out of it.
But at least you know where the seam is, and that's the hard part.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
This suggests a way to predict areas where Apple will be weak:
things Steve Jobs doesn't use.  E.g. I doubt he is much into gaming.&lt;br/&gt;&lt;br/&gt;
[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
In retrospect, we should have &lt;i&gt;become&lt;/i&gt; direct marketers.  If
I were doing Viaweb again, I'd open our own online store.  If we
had, we'd have understood users a lot better.  I'd encourage anyone
starting a startup to become one of its users, however unnatural it
seems.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Possible exception: It's hard to compete directly with open source software.
You can build things for programmers, but there has to be some part
you can charge for.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, and Jessica Livingston
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//organic.html</guid>
      <pubDate>Thu, 01 Apr 2010 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Apple's Mistake</title>
      <link>https://paulgraham.com//apple.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
November 2009&lt;br/&gt;&lt;br/&gt;I don't think Apple realizes how badly the App Store approval proces&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
November 2009&lt;br/&gt;&lt;br/&gt;I don't think Apple realizes how badly the App Store approval process
is broken.  Or rather, I don't think they realize how much it matters
that it's broken.&lt;br&gt;&lt;br/&gt;The way Apple runs the App Store has harmed their reputation with
programmers more than anything else they've ever done. 
Their reputation with programmers used to be great.
It used to be the most common complaint you heard
about Apple was that their fans admired them too uncritically.
The App Store has changed that.  Now a lot of programmers
have started to see Apple as evil.&lt;br/&gt;&lt;br/&gt;How much of the goodwill Apple once had with programmers have they
lost over the App Store?  A third?  Half?  And that's just so far.
The App Store is an ongoing karma leak.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;How did Apple get into this mess?  Their fundamental problem is
that they don't understand software.&lt;br/&gt;&lt;br/&gt;They treat iPhone apps the way they treat the music they sell through
iTunes.  Apple is the channel; they own the user; if you want to
reach users, you do it on their terms. The record labels agreed,
reluctantly.  But this model doesn't work for software.  It doesn't
work for an intermediary to own the user.  The software business
learned that in the early 1980s, when companies like VisiCorp showed
that although the words "software" and "publisher" fit together,
the underlying concepts don't.  Software isn't like music or books.
It's too complicated for a third party to act as an intermediary
between developer and user.   And yet that's what Apple is trying
to be with the App Store: a software publisher.  And a particularly
overreaching one at that, with fussy tastes and a rigidly enforced
house style.&lt;br/&gt;&lt;br/&gt;If software publishing didn't work in 1980, it works even less now
that software development has evolved from a small number of big
releases to a constant stream of small ones.  But Apple doesn't
understand that either.  Their model of product development derives
from hardware.  They work on something till they think it's finished,
then they release it.  You have to do that with hardware, but because
software is so easy to change, its design can benefit from evolution.
The standard way to develop applications now is to launch fast and
iterate.  Which means it's a disaster to have long, random delays
each time you release a new version.&lt;br/&gt;&lt;br/&gt;Apparently Apple's attitude is that developers should be more careful
when they submit a new version to the App Store.  They would say
that.  But powerful as they are, they're not powerful enough to
turn back the evolution of technology.  Programmers don't use
launch-fast-and-iterate out of laziness.  They use it because it
yields the best results.  By obstructing that process, Apple is
making them do bad work, and programmers hate that as much as Apple
would.&lt;br/&gt;&lt;br/&gt;How would Apple like it if when they discovered a serious bug in
OSÂ X, instead of releasing a software update immediately, they had
to submit their code to an intermediary who sat on it for a month
and then rejected it because it contained an icon they didn't like?&lt;br/&gt;&lt;br/&gt;By breaking software development, Apple gets the opposite of what
they intended: the version of an app currently available in the App
Store tends to be an old and buggy one.  One developer told me:
&lt;blockquote&gt;
  As a result of their process, the App Store is full of half-baked
  applications. I make a new version almost every day that I release
  to beta users. The version on the App Store feels old and crappy.
  I'm sure that a lot of developers feel this way: One emotion is
  "I'm not really proud about what's in the App Store", and it's
  combined with the emotion "Really, it's Apple's fault."
&lt;/blockquote&gt;
Another wrote:
&lt;blockquote&gt;
  I believe that they think their approval process helps users by
  ensuring quality.  In reality, bugs like ours get through all the
  time and then it can take 4-8 weeks to get that bug fix approved,
  leaving users to think that iPhone apps sometimes just don't work.
  Worse for Apple, these apps work just fine on other platforms
  that have immediate approval processes.
&lt;/blockquote&gt;
Actually I suppose Apple has a third misconception: that all the
complaints about App Store approvals are not a serious problem.
They must hear developers complaining.  But partners and suppliers
are always complaining.  It would be a bad sign if they weren't;
it would mean you were being too easy on them.  Meanwhile the iPhone
is selling better than ever.  So why do they need to fix anything?&lt;br/&gt;&lt;br/&gt;They get away with maltreating developers, in the short term, because
they make such great hardware.  I just bought a new 27" iMac a
couple days ago.  It's fabulous.  The screen's too shiny, and the
disk is surprisingly loud, but it's so beautiful that you can't
make yourself care.&lt;br/&gt;&lt;br/&gt;So I bought it, but I bought it, for the first time, with misgivings.
I felt the way I'd feel buying something made in a country with a
bad human rights record.  That was new.  In the past when I bought
things from Apple it was an unalloyed pleasure.  Oh boy!  They make
such great stuff.  This time it felt like a Faustian bargain.  They
make such great stuff, but they're such assholes.  Do I really want
to support this company?&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Should Apple care what people like me think?  What difference does
it make if they alienate a small minority of their users?&lt;br/&gt;&lt;br/&gt;There are a couple reasons they should care.  One is that these
users are the people they want as employees.  If your company seems
evil, the best programmers won't work for you.  That hurt Microsoft
a lot starting in the 90s.  Programmers started to feel sheepish
about working there.  It seemed like selling out.  When people from
Microsoft were talking to other programmers and they mentioned where
they worked, there were a lot of self-deprecating jokes about having
gone over to the dark side.  But the real problem for Microsoft
wasn't the embarrassment of the people they hired.  It was the
people they never got.  And you know who got them?  Google and
Apple.  If Microsoft was the Empire, they were the Rebel Alliance.
And it's largely because they got more of the best people that
Google and Apple are doing so much better than Microsoft today.&lt;br/&gt;&lt;br/&gt;Why are programmers so fussy about their employers' morals?  Partly
because they can afford to be.  The best programmers can work
wherever they want.  They don't have to work for a company they
have qualms about.&lt;br/&gt;&lt;br/&gt;But the other reason programmers are fussy, I think, is that evil
begets stupidity.  An organization that wins by exercising power
starts to lose the ability to win by doing better work.  And it's
not fun for a smart person to work in a place where the best ideas
aren't the ones that win.  I think the reason Google embraced "Don't
be evil" so eagerly was not so much to impress the outside world
as to inoculate themselves against arrogance.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/apple.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;That has worked for Google so far.  They've become more
bureaucratic, but otherwise they seem to have held true to their
original principles. With Apple that seems less the case.  When you
look at the famous 
&lt;a href="http://www.uriahcarpenter.info/1984.html"&gt;1984 ad&lt;/a&gt; 
now, it's easier to imagine Apple as the
dictator on the screen than the woman with the hammer.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/apple.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
In fact, if you read the dictator's speech it sounds uncannily like a
prophecy of the App Store.
&lt;blockquote&gt;
  We have triumphed over the unprincipled dissemination of facts.&lt;br/&gt;&lt;br/&gt;We have created, for the first time in all history, a garden of
  pure ideology, where each worker may bloom secure from the pests
  of contradictory and confusing truths.
&lt;/blockquote&gt;
The other reason Apple should care what programmers think of them
is that when you sell a platform, developers make or break you.  If
anyone should know this, Apple should.  VisiCalc made the Apple II.&lt;br/&gt;&lt;br/&gt;And programmers build applications for the platforms they use.  Most
applicationsâ€”most startups, probablyâ€”grow out of personal projects.
Apple itself did.  Apple made microcomputers because that's what
Steve Wozniak wanted for himself.  He couldn't have afforded a
minicomputer. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/apple.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
 Microsoft likewise started out making interpreters
for little microcomputers because
Bill Gates and Paul Allen were interested in using them.  It's a
rare startup that doesn't build something the founders use.&lt;br/&gt;&lt;br/&gt;The main reason there are so many iPhone apps is that so many programmers
have iPhones.  They may know, because they read it in an article,
that Blackberry has such and such market share.  But in practice
it's as if RIM didn't exist. If they're going to build something,
they want to be able to use it themselves, and that means building
an iPhone app.&lt;br/&gt;&lt;br/&gt;So programmers continue to develop iPhone apps, even though Apple
continues to maltreat them.  They're like someone stuck in an abusive
relationship.  They're so attracted to the iPhone that they can't
leave.  But they're looking for a way out.  One wrote:
&lt;blockquote&gt;
  While I did enjoy developing for the iPhone, the control they
  place on the App Store does not give me the drive to develop
  applications as I would like. In fact I don't intend to make any
  more iPhone applications unless absolutely necessary.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/apple.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
Can anything break this cycle?  No device I've seen so far could.
Palm and RIM haven't a hope.  The only credible contender is Android.
But Android is an orphan; Google doesn't really care about it, not
the way Apple cares about the iPhone.  Apple cares about the iPhone
the way Google cares about search.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Is the future of handheld devices one locked down by Apple?  It's
a worrying prospect.  It would be a bummer to have another grim
monoculture like we had in the 1990s.  In 1995, writing software
for end users was effectively identical with writing Windows
applications.  Our horror at that prospect was the single biggest
thing that drove us to start building &lt;a href="https://paulgraham.com/road.html"&gt;web apps&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;At least we know now what it would take to break Apple's lock.
You'd have to get iPhones out of programmers' hands.  If programmers
used some other device for mobile web access, they'd start to develop
apps for that instead.&lt;br/&gt;&lt;br/&gt;How could you make a device programmers liked better than the iPhone?
It's unlikely you could make something better designed.  Apple
leaves no room there.  So this alternative device probably couldn't
win on general appeal.  It would have to win by virtue of some
appeal it had to programmers specifically.&lt;br/&gt;&lt;br/&gt;One way to appeal to programmers is with software.  If you
could think of an application programmers had to have, but that
would be impossible in the circumscribed world of the iPhone, 
you could presumably get them to switch.&lt;br/&gt;&lt;br/&gt;That would definitely happen if programmers started to use handhelds
as development machinesâ€”if handhelds displaced laptops the
way laptops displaced desktops.  You need more control of a development
machine than Apple will let you have over an iPhone.&lt;br/&gt;&lt;br/&gt;Could anyone make a device that you'd carry around in your pocket
like a phone, and yet would also work as a development machine?
It's hard to imagine what it would look like.  But I've learned
never to say never about technology.  A phone-sized device that
would work as a development machine is no more miraculous by present
standards than the iPhone itself would have seemed by the standards
of 1995.&lt;br/&gt;&lt;br/&gt;My current development machine is a MacBook Air, which I use with
an external monitor and keyboard in my office, and by itself when
traveling.  If there was a version half the size I'd prefer it.
That still wouldn't be small enough to carry around everywhere like
a phone, but we're within a factor of 4 or so.  Surely that gap is
bridgeable.  In fact, let's make it an
&lt;a href="http://ycombinator.com/rfs5.html"&gt;RFS&lt;/a&gt;. Wanted: 
Woman with hammer.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
When Google adopted "Don't be evil," they were still so small
that no one would have expected them to be, yet.&lt;br/&gt;&lt;br/&gt;
[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
The dictator in the 1984 ad isn't Microsoft, incidentally;
it's IBM.  IBM seemed a lot more frightening in those days, but
they were friendlier to developers than Apple is now.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
He couldn't even afford a &lt;i&gt;monitor&lt;/i&gt;.  That's why the Apple
I used a TV as a monitor.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Several people I talked to mentioned how much they liked the
iPhone SDK.  The problem is not Apple's products but their policies.
Fortunately policies are software; Apple can change them instantly
if they want to.  Handy that, isn't it?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Ross Boucher, 
James Bracy, Gabor Cselle,
Patrick Collison, Jason Freedman, John Gruber, Joe Hewitt, Jessica Livingston,
Robert Morris, Teng Siong Ong, Nikhil Pandit, Savraj Singh, and Jared Tame for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//apple.html</guid>
      <pubDate>Sun, 01 Nov 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What Startups Are Really Like</title>
      <link>https://paulgraham.com//really.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This  essay is derived from a talk at the 2009 Startup School.)&amp;lt;/&lt;/i&gt;&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This  essay is derived from a talk at the 2009 Startup School.)&lt;/i&gt;&lt;br&gt;&lt;br/&gt;I wasn't sure what to talk about at Startup School, so I decided
to ask the founders of the startups we'd funded.  What hadn't I
written about yet?&lt;br/&gt;&lt;br/&gt;I'm in the unusual position of being able to test the essays I write
about startups.  I hope the ones on other topics are right, but I
have no way to test them.  The ones on startups get tested by about
70 people every 6 months.&lt;br/&gt;&lt;br/&gt;So I sent all the founders an email asking what surprised them about
starting a startup.  This amounts to asking what I got wrong, because
if I'd explained things well enough, nothing should have surprised
them.&lt;br/&gt;&lt;br/&gt;I'm proud to report I got one response saying:
&lt;blockquote&gt;
    What surprised me the most is that everything was actually
    fairly predictable!
&lt;/blockquote&gt;
The bad news is that I got over 100 other responses listing the
surprises they encountered.&lt;br/&gt;&lt;br/&gt;There were very clear patterns in the responses; it was remarkable
how often several people had been surprised by exactly the same
thing.  These were the biggest:&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;1. Be Careful with Cofounders&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This was the surprise mentioned by the most founders.  There were
two types of responses: that you have to be careful who you pick
as a cofounder, and that you have to work hard to maintain your
relationship.&lt;br/&gt;&lt;br/&gt;What people wished they'd paid more attention to when choosing
cofounders was character and commitment, not ability.  This was
particularly true with startups that failed.  The lesson: don't
pick cofounders who will flake.&lt;br/&gt;&lt;br/&gt;Here's a typical reponse:
&lt;blockquote&gt;
    You haven't seen someone's true colors unless you've worked
    with them on a startup.
&lt;/blockquote&gt;
The reason character is so important is that it's tested more
severely than in most other situations.  One founder said explicitly
that the relationship between founders was more important than
ability:
&lt;blockquote&gt;
    I would rather cofound a startup with a friend than a stranger
    with higher output.  Startups are so hard and emotional that
    the bonds and emotional and social support that come with
    friendship outweigh the extra output lost.
&lt;/blockquote&gt;
We learned this lesson a long time ago.  If you look at the YC
application, there are more questions about the commitment and
relationship of the founders than their ability.&lt;br/&gt;&lt;br/&gt;Founders of successful startups talked less about choosing cofounders
and more about how hard they worked to maintain their relationship.
&lt;blockquote&gt;
    One thing that surprised me is how the relationship of startup
    founders goes from a friendship to a marriage.  My relationship
    with my cofounder went from just being friends to seeing each
    other all the time, fretting over the finances and cleaning up
    shit. And the startup was our baby.  I summed it up once like
    this: "It's like we're married, but we're not fucking."
&lt;/blockquote&gt;
Several people used that word "married."  It's a far more intense
relationship than you usually see between coworkersâ€”partly because
the stresses are so much greater, and partly because at first the
founders are the whole company.  So this relationship has to be
built of top quality materials and carefully maintained.  It's the
basis of everything.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;2. Startups Take Over Your Life&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Just as the relationship between cofounders is more intense than
it usually is between coworkers, so is the relationship between the
founders and the company.  Running a startup is not like having a
job or being a student, because it never stops.  This is so foreign
to most people's experience that they don't get it till it happens.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;blockquote&gt;
    I didn't realize I would spend almost every waking moment either
    working or thinking about our startup.  You enter a whole
    different way of life when it's your company vs. working for
    someone else's company.
&lt;/blockquote&gt;
It's exacerbated by the fast pace of startups, which makes it seem
like time slows down:
&lt;blockquote&gt;
    I think the thing that's been most surprising to me is how one's
    perspective on time shifts. Working on our startup, I remember
    time seeming to stretch out, so that a month was a huge interval.
&lt;/blockquote&gt;
In the best case, total immersion can be exciting:
&lt;blockquote&gt;
    It's surprising how much you become consumed by your startup,
    in that you think about it day and night, but never once does
    it feel like "work."
&lt;/blockquote&gt;
Though I have to say, that quote is from someone we funded this
summer.  In a couple years he may not sound so chipper.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;3. It's an Emotional Roller-coaster&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This was another one lots of people were surprised about.  The ups
and downs were more extreme than they were prepared for.&lt;br/&gt;&lt;br/&gt;In a startup, things seem great one moment and hopeless the next.
And by next, I mean a couple hours later.
&lt;blockquote&gt;
    The emotional ups and downs were the biggest surprise for me.
    One day, we'd think of ourselves as the next Google and dream
    of buying islands; the next, we'd be pondering how to let our
    loved ones know of our utter failure; and on and on.
&lt;/blockquote&gt;
The hard part, obviously, is the lows.  For a lot of founders that
was the big surprise:
&lt;blockquote&gt;
    How hard it is to keep everyone motivated during rough days or
    weeks, i.e. how low the lows can be.
&lt;/blockquote&gt;
After a while, if you don't have significant success to cheer you
up, it wears you out:
&lt;blockquote&gt;
    Your most basic advice to founders is "just don't die," but the
    energy to keep a company going in lieu of unburdening success
    isn't free; it is siphoned from the founders themselves.
&lt;/blockquote&gt;
There's a limit to how much you can take.  If you get to the point
where you can't keep working anymore, it's not the end of the world.
Plenty of famous founders have had some failures along the way.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;4. It Can Be Fun&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The good news is, the highs are also very high.  Several founders
said what surprised them most about doing a startup was how fun it
was:
&lt;blockquote&gt;
    I think you've left out just how fun it is to do a startup. I
    am more fulfilled in my work than pretty much any of my friends
    who did not start companies.
&lt;/blockquote&gt;
What they like most is the freedom:
&lt;blockquote&gt;
    I'm surprised by how much better it feels to be working on
    something that is challenging and creative, something I believe
    in, as opposed to the hired-gun stuff I was doing before.  I
    knew it would feel better; what's surprising is how much better.
&lt;/blockquote&gt;
Frankly, though, if I've misled people here, I'm not eager to fix
that.  I'd rather have everyone think starting a startup is grim
and hard than have founders go into it expecting it to be fun, and
a few months later saying "This is supposed to be &lt;i&gt;fun&lt;/i&gt;? Are you
kidding?"&lt;br/&gt;&lt;br/&gt;The truth is, it wouldn't be fun for most people.  A lot of what
we try to do in the application process is to weed out the people
who wouldn't like it, both for our sake and theirs.&lt;br/&gt;&lt;br/&gt;The best way to put it might be that starting a startup is fun the
way a survivalist training course would be fun, if you're into that
sort of thing.  Which is to say, not at all, if you're not.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;5. Persistence Is the Key&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of founders were surprised how important persistence was in
startups. It was both a negative and a positive surprise: they were
surprised both by the degree of persistence required
&lt;blockquote&gt;
    Everyone said how determined and resilient you must be, but
    going through it made me realize that the determination required
    was still understated.
&lt;/blockquote&gt;
and also by the degree to which persistence alone was able to
dissolve obstacles:
&lt;blockquote&gt;
    If you are persistent, even problems that seem out of your
    control (i.e. immigration) seem to work themselves out.
&lt;/blockquote&gt;
Several founders mentioned specifically how much more important
persistence was than intelligence.
&lt;blockquote&gt;
    I've been surprised again and again by just how much more
    important persistence is than raw intelligence.
&lt;/blockquote&gt;
This applies not just to intelligence but to ability in general,
and that's why so many people said character was more important in
choosing cofounders.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;6. Think Long-Term&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You need persistence because everything takes longer than you expect.
A lot of people were surprised by that.
&lt;blockquote&gt;
    I'm continually surprised by how long everything can take.
    Assuming your product doesn't experience the explosive growth
    that very few products do, everything from development to
    dealmaking (especially dealmaking) seems to take 2-3x longer
    than I always imagine.
&lt;/blockquote&gt;
One reason founders are surprised is that because they work fast,
they expect everyone else to.   There's a shocking amount of shear
stress at every point where a startup touches a more bureaucratic
organization, like a big company or a VC fund.  That's why fundraising
and the enterprise market kill and maim so many startups.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But I think the reason most founders are surprised by how long it
takes is that they're overconfident.  They think they're going to
be an instant success, like YouTube or Facebook.  You tell them
only 1 out of 100 successful startups has a trajectory like that,
and they all think "we're going to be that 1."&lt;br/&gt;&lt;br/&gt;Maybe they'll listen to one of the more successful founders:
&lt;blockquote&gt;
    The top thing I didn't understand before going into it is that
    persistence is the name of the game. For the vast majority of
    startups that become successful, it's going to be a &lt;i&gt;really&lt;/i&gt;
    long journey, at least 3 years and probably 5+.
&lt;/blockquote&gt;
There is a positive side to thinking longer-term.  It's not just
that you have to resign yourself to everything taking longer than
it should.  If you work patiently it's less stressful, and you can
do better work:
&lt;blockquote&gt;
    Because we're relaxed, it's so much easier to have fun doing
    what we do. Gone is the awkward nervous energy fueled by the
    desperate need to not fail guiding our actions. We can concentrate
    on doing what's best for our company, product, employees and
    customers.
&lt;/blockquote&gt;
That's why things get so much better when you hit ramen profitability.
You can shift into a different mode of working.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. Lots of Little Things&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;We often emphasize how rarely startups win simply because they hit
on some magic idea.  I think founders have now gotten that into
their heads.  But a lot were surprised to find this also applies
within startups.  You have to do lots of different things:
&lt;blockquote&gt;
    It's much more of a grind than glamorous. A timeslice selected
    at random would more likely find me tracking down a weird DLL
    loading bug on Swedish Windows, or tracking down a bug in the
    financial model Excel spreadsheet the night before a board
    meeting, rather than having brilliant flashes of strategic
    insight.
&lt;/blockquote&gt;
Most hacker-founders would like to spend all their time programming.
You won't get to, unless you fail.  Which can be transformed into:
If you spend all your time programming, you will fail.&lt;br/&gt;&lt;br/&gt;The principle extends even into programming.  There is rarely a
single brilliant hack that ensures success:
&lt;blockquote&gt;
    I learnt never to bet on any one feature or deal or anything
    to bring you success. It is never a single thing.  Everything
    is just incremental and you just have to keep doing lots of
    those things until you strike something.
&lt;/blockquote&gt;
Even in the rare cases where a clever hack makes your fortune, you
probably won't know till later:
&lt;blockquote&gt;
    There is no such thing as a killer feature. Or at least you
    won't know what it is.
&lt;/blockquote&gt;
So the best strategy is to try lots of different things.  The reason
not to put all your eggs in one basket is not the usual one,
which applies even when you know which basket is best.  In a startup
you don't even know that.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;8. Start with Something Minimal&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Lots of founders mentioned how important it was to launch with the
simplest possible thing.  By this point everyone knows you should
release fast and iterate.  It's practically a mantra at YC.  But
even so a lot of people seem to have been burned by not doing it:
&lt;blockquote&gt;
    Build the absolute smallest thing that can be considered a
    complete application and ship it.
&lt;/blockquote&gt;
Why do people take too long on the first version?  Pride, mostly.
They hate to release something that could be better.  They worry
what people will say about them.  But you have to overcome this:
&lt;blockquote&gt;
    Doing something "simple" at first glance does not mean you
    aren't doing something meaningful, defensible, or valuable.
&lt;/blockquote&gt;
Don't worry what people will say.  If your first version is so
impressive that trolls don't make fun of it, you waited too long
to launch.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One founder said this should be your approach to all programming,
not just startups, and I tend to agree.
&lt;blockquote&gt;
    Now, when coding, I try to think "How can I write this such
    that if people saw my code, they'd be amazed at how little there
    is and how little it does?"
&lt;/blockquote&gt;
Over-engineering is poison.  It's not like doing extra work for
extra credit.  It's more like telling a lie that you then have to
remember so you don't contradict it.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;9. Engage Users&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Product development is a conversation with the user that doesn't
really start till you launch.  Before you launch, you're like a
police artist before he's shown the first version of his sketch to
the witness.&lt;br/&gt;&lt;br/&gt;It's so important to launch fast that it may be better to think of
your initial version not as a product, but as a trick for getting
users to start talking to you.
&lt;blockquote&gt;
    I learned to think about the initial stages of a startup as a
    giant experiment. All products should be considered experiments,
    and those that have a market show promising results extremely
    quickly.
&lt;/blockquote&gt;
Once you start talking to users, I guarantee you'll be surprised
by what they tell you.
&lt;blockquote&gt;
    When you let customers tell you what they're after, they will
    often reveal amazing details about what they find valuable as
    well what they're willing to pay for.
&lt;/blockquote&gt;
The surprise is generally positive as well as negative. They won't
like what you've built, but there will be other things they would
like that would be trivially easy to implement.  It's not till you
start the conversation by launching the wrong thing that they can
express (or perhaps even realize) what they're looking for.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;10. Change Your Idea&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;To benefit from engaging with users you have to be willing to change
your idea.  We've always encouraged founders to see a startup idea
as a hypothesis rather than a blueprint.  And yet they're still
surprised how well it works to change the idea.
&lt;blockquote&gt;
    Normally if you complain about something being hard, the general
    advice is to work harder.  With a startup, I think you should
    find a problem that's easy for you to solve.  Optimizing in
    solution-space is familiar and straightforward, but you can
    make enormous gains playing around in problem-space.
&lt;/blockquote&gt;
Whereas mere determination, without flexibility, is a greedy algorithm
that may get you nothing more than a mediocre local maximum:
&lt;blockquote&gt;
    When someone is determined, there's still a danger that they'll
    follow a long, hard path that ultimately leads nowhere.
&lt;/blockquote&gt;
You want to push forward, but at the same time twist and turn to
find the most promising path.  One founder put it very succinctly:
&lt;blockquote&gt;
    Fast iteration is the key to success.
&lt;/blockquote&gt;
One reason this advice is so hard to follow is that people don't
realize how hard it is to judge startup ideas, particularly their
own.  Experienced founders learn to keep an open mind:
&lt;blockquote&gt;
    Now I don't laugh at ideas anymore, because I realized how
    terrible I was at knowing if they were good or not.
&lt;/blockquote&gt;
You can never tell what will work.  You just have to do whatever
seems best at each point.  We do this with YC itself.  We still
don't know if it will work, but it seems like a decent hypothesis.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;11. Don't Worry about Competitors&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When you think you've got a great idea, it's sort of like having a
guilty conscience about something.  All someone has to do is look
at you funny, and you think "Oh my God, &lt;i&gt;they know.&lt;/i&gt;"&lt;br/&gt;&lt;br/&gt;These alarms are almost always false:
&lt;blockquote&gt;
    Companies that seemed like competitors and threats at first
    glance usually never were when you really looked at it. Even
    if they were operating in the same area, they had a different
    goal.
&lt;/blockquote&gt;
One reason people overreact to competitors is that they overvalue
ideas.  If ideas really were the key, a competitor with the same
idea would be a real threat.  But it's usually execution that
matters:
&lt;blockquote&gt;
    All the scares induced by seeing a new competitor pop up are
    forgotten weeks later. It always comes down to your own product
    and approach to the market.
&lt;/blockquote&gt;
This is generally true even if competitors get lots of attention.
&lt;blockquote&gt;
    Competitors riding on lots of good blogger perception aren't
    really the winners and can disappear from the map quickly.  You
    need consumers after all.
&lt;/blockquote&gt;
Hype doesn't make satisfied users, at least not for something as
complicated as technology.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;12. It's Hard to Get Users&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of founders complained about how hard it was to get users,
though.
&lt;blockquote&gt;
    I had no idea how much time and effort needed to go into attaining
    users.
&lt;/blockquote&gt;
This is a complicated topic.  When you can't get users, it's hard
to say whether the problem is lack of exposure, or whether the
product's simply bad.  Even good products can be blocked by switching
or integration costs:
&lt;blockquote&gt;
    Getting people to use a new service is incredibly difficult.
    This is especially true for a service that other companies can
    use, because it requires their developers to do work. If you're
    small, they don't think it is urgent. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
The sharpest criticism of YC came from a founder who said we didn't
focus enough on customer acquisition:
&lt;blockquote&gt;
    YC preaches "make something people want" as an engineering task,
    a never ending stream of feature after feature until enough
    people are happy and the application takes off.  There's very
    little focus on the cost of customer acquisition.
&lt;/blockquote&gt;
This may be true; this may be something we need to fix, especially
for applications like games.  If you make something where the
challenges are mostly technical, you can rely on word of mouth,
like Google did.  One founder was surprised by how well that worked
for him:
&lt;blockquote&gt;
    There is an irrational fear that no one will buy your product.
    But if you work hard and incrementally make it better, there
    is no need to worry.
&lt;/blockquote&gt;
But with other types of startups you may win less by features and
more by deals and marketing.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;13. Expect the Worst with Deals&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Deals fall through.  That's a constant of the startup world.  Startups
are powerless, and good startup ideas generally seem wrong.  So
everyone is nervous about closing deals with you, and you have no
way to make them.&lt;br/&gt;&lt;br/&gt;This is particularly true with investors:
&lt;blockquote&gt;
    In retrospect, it would have been much better if we had operated
    under the assumption that we would never get any additional
    outside investment.  That would have focused us on finding
    revenue streams early.
&lt;/blockquote&gt;
My advice is generally pessimistic.  Assume you won't get money,
and if someone does offer you any, assume you'll never get any more.
&lt;blockquote&gt;
    If someone offers you money, take it. You say it a lot, but I
    think it needs even more emphasizing.  We had the opportunity
    to raise a lot more money than we did last year and I wish we
    had.
&lt;/blockquote&gt;
Why do founders ignore me?  Mostly because they're optimistic by
nature.  The mistake is to be optimistic about things you can't
control. By all means be optimistic about your ability to make
something great.  But you're asking for trouble if you're optimistic
about big companies or investors.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;14. Investors Are Clueless&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A lot of founders mentioned how surprised they were by the cluelessness
of investors:
&lt;blockquote&gt;
    They don't even know about the stuff they've invested in.  I
    met some investors that had invested in a hardware device and
    when I asked them to demo the device they had difficulty switching
    it on.
&lt;/blockquote&gt;
Angels are a bit better than VCs, because they usually have startup
experience themselves:
&lt;blockquote&gt;
    VC investors don't know half the time what they are talking
    about and are years behind in their thinking.  A few were great,
    but 95% of the investors we dealt with were unprofessional,
    didn't seem to be very good at business or have any kind of
    creative vision. Angels were generally much better to talk to.
&lt;/blockquote&gt;
Why are founders surprised that VCs are clueless?  I think it's
because they seem so formidable.&lt;br/&gt;&lt;br/&gt;The reason VCs seem formidable is that it's their profession to.
You get to be a VC by convincing asset managers to trust you with
hundreds of millions of dollars.  How do you do that?  You have to
seem confident, and you have to seem like you understand technology.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;15. You May Have to Play Games&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Because investors are so bad at judging you, you have to work harder
than you should at selling yourself. One founder said the thing
that surprised him most was
&lt;blockquote&gt;
    The degree to which feigning certitude impressed investors.
&lt;/blockquote&gt;
This is the thing that has surprised &lt;i&gt;me&lt;/i&gt; most about YC founders'
experiences.  This summer we invited some of the alumni to talk to
the new startups about fundraising, and pretty much 100% of their
advice was about investor psychology.  I thought I was cynical about
VCs, but the founders were much more cynical.
&lt;blockquote&gt;
    A lot of what startup founders do is just posturing.  It works.
&lt;/blockquote&gt;
VCs themselves have no idea of the extent to which the startups
they like are the ones that are best at selling themselves to VCs.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/really.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
It's exactly the same phenomenon we saw a step earlier.  VCs get
money by seeming confident to LPs, and founders get money by seeming
confident to VCs.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;16. Luck Is a Big Factor&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;With two such random linkages in the path between startups and
money, it shouldn't be surprising that luck is a big factor in
deals.  And yet a lot of founders are surprised by it.
&lt;blockquote&gt;
    I didn't realize how much of a role luck plays and how much is
    outside of our control.
&lt;/blockquote&gt;
If you think about famous startups, it's pretty clear how big a
role luck plays.  Where would Microsoft be if IBM insisted on an
exclusive license for DOS?&lt;br/&gt;&lt;br/&gt;Why are founders fooled by this?  Business guys probably aren't,
but hackers are used to a world where skill is paramount, and you
get what you deserve.
&lt;blockquote&gt;
    When we started our startup, I had bought the hype of the startup
    founder dream: that this is a game of skill. It is, in some
    ways.  Having skill is valuable. So is being determined as all
    hell. But being lucky is the critical ingredient.
&lt;/blockquote&gt;
Actually the best model would be to say that the outcome is the
&lt;i&gt;product&lt;/i&gt; of skill, determination, and luck.  No matter how much
skill and determination you have, if you roll a zero for luck, the
outcome is zero.&lt;br/&gt;&lt;br/&gt;These quotes about luck are not from founders whose startups failed.
Founders who fail quickly tend to blame themselves.  Founders who
succeed quickly don't usually realize how lucky they were.  It's
the ones in the middle who see how important luck is.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;17. The Value of Community&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A surprising number of founders said what surprised them most about
starting a startup was the value of community.  Some meant the
micro-community of YC founders:
&lt;blockquote&gt;
    The immense value of the peer group of YC companies, and facing
    similar obstacles at similar times.
&lt;/blockquote&gt;
which shouldn't be that surprising, because that's why it's structured
that way.  Others were surprised at the value of the startup community
in the larger sense:
&lt;blockquote&gt;
    How advantageous it is to live in Silicon Valley, where you
    can't help but hear all the cutting-edge tech and startup news,
    and run into useful people constantly.
&lt;/blockquote&gt;
The specific thing that surprised them most was the general spirit
of benevolence:
&lt;blockquote&gt;
    One of the most surprising things I saw was the willingness of
    people to help us. Even people who had nothing to gain went out
    of their way to help our startup succeed.
&lt;/blockquote&gt;
and particularly how it extended all the way to the top:
&lt;blockquote&gt;
    The surprise for me was how accessible important and interesting
    people are. It's amazing how easily you can reach out to people
    and get immediate feedback.
&lt;/blockquote&gt;
This is one of the reasons I like being part of this world.  Creating
wealth is not a zero-sum game, so you don't have to stab people in
the back to win.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;18. You Get No Respect&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There was one surprise founders mentioned that I'd forgotten about:
that outside the startup world, startup founders get no respect.
&lt;blockquote&gt;
    In social settings, I found that I got a lot more respect when
    I said, "I worked on Microsoft Office" instead of "I work at a
    small startup you've never heard of called x."
&lt;/blockquote&gt;
Partly this is because the rest of the world just doesn't get
startups, and partly it's yet another consequence of the fact that
most good startup ideas seem bad:
&lt;blockquote&gt;
    If you pitch your idea to a random person, 95% of the time
    you'll find the person instinctively thinks the idea will be a
    flop and you're wasting your time (although they probably won't
    say this directly).
&lt;/blockquote&gt;
Unfortunately this extends even to dating:
&lt;blockquote&gt;
    It surprised me that being a startup founder does not get you
    more admiration from women.
&lt;/blockquote&gt;
I did know about that, but I'd forgotten.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;19. Things Change as You Grow&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The last big surprise founders mentioned is how much things changed
as they grew.  The biggest change was that you got to program even
less:
&lt;blockquote&gt;
    Your job description as technical founder/CEO is completely
    rewritten every 6-12 months. Less coding, more
    managing/planning/company building, hiring, cleaning up messes,
    and generally getting things in place for what needs to happen
    a few months from now.
&lt;/blockquote&gt;
In particular, you now have to deal with employees, who often have
different motivations:
&lt;blockquote&gt;
    I knew the founder equation and had been focused on it since I
    knew I wanted to start a startup as a 19 year old.  The employee
    equation is quite different so it took me a while to get it
    down.
&lt;/blockquote&gt;
Fortunately, it can become a lot less stressful once you reach
cruising altitude:
&lt;blockquote&gt;
    I'd say 75% of the stress is gone now from when we first started.
    Running a business is so much more enjoyable now.  We're more
    confident. We're more patient. We fight less. We sleep more.
&lt;/blockquote&gt;
I wish I could say it was this way for every startup that succeeded,
but 75% is probably on the high side.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;The Super-Pattern&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There were a few other patterns, but these were the biggest.  One's
first thought when looking at them all is to ask if there's a
super-pattern, a pattern to the patterns.&lt;br/&gt;&lt;br/&gt;I saw it immediately, and so did a YC founder I read the list to.
These are supposed to be the surprises, the things I didn't tell
people.  What do they all have in common?  They're all things I
tell people.  If I wrote a new essay with the same outline as this
that wasn't summarizing the founders' responses, everyone would say
I'd run out of ideas and was just repeating myself.&lt;br/&gt;&lt;br/&gt;What is going on here?&lt;br/&gt;&lt;br/&gt;When I look at the responses, the common theme is that
starting a startup was like I said, but way more so.  People just
don't seem to get how different it is till they do it.  Why?  The
key to that mystery is to ask, how different &lt;i&gt;from what?&lt;/i&gt;  Once you
phrase it that way, the answer is obvious: from a job.  Everyone's
model of work is a job.  It's completely pervasive.  Even if you've
never had a job, your parents probably did, along with practically
every other adult you've met.&lt;br/&gt;&lt;br/&gt;Unconsciously, everyone expects a startup to be like a job, and
that explains most of the surprises.  It explains why people are
surprised how carefully you have to choose cofounders and how hard
you have to work to maintain your relationship.  You don't have to
do that with coworkers.  It explains why the ups and downs are
surprisingly extreme.  In a job there is much more damping.  But
it also explains why the good times are surprisingly good: most
people can't imagine such freedom.  As you go down the list, almost
all the surprises are surprising in how much a startup differs from
a job.&lt;br/&gt;&lt;br/&gt;You probably can't overcome anything so pervasive as the model of
work you grew up with.  So the best solution is to be consciously
aware of that.  As you go into a startup, you'll be thinking "everyone
says it's really extreme."  Your next thought will probably be "but
I can't believe it will be that bad."  If you want to avoid being
surprised, the next thought after that should be: "and the reason
I can't believe it will be that bad is that my model of work is a
job."&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Graduate students might understand it.  In grad school you
always feel you should be working on your thesis.  It doesn't end
every semester like classes do.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
The best way for a startup to engage with slow-moving
organizations is to fork off separate processes to deal with them.
It's when they're on the critical path that they kill youâ€”when
you depend on closing a deal to move forward.  It's worth taking
extreme measures to avoid that.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
This is a variant of Reid Hoffman's principle that if you
aren't embarrassed by what you launch with, you waited too long to
launch.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
The question to ask about what you've built is not whether it's
good, but whether it's good enough to supply the activation energy
required.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Some VCs seem to understand technology because they actually
do, but that's overkill; the defining test is whether you can talk
about it well enough to convince limited partners.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
This is the same phenomenon you see with defense contractors
or fashion brands.  The dumber the customers, the more effort you
expend on the process of selling things to them rather than making
the things you sell.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks:&lt;/b&gt; to Jessica Livingston for reading drafts of this,
and to all the founders who responded to my email.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Related:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//really.html</guid>
      <pubDate>Thu, 01 Oct 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Persuade xor Discover</title>
      <link>https://paulgraham.com//discover.html</link>
      <description>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;When meeting people you don't know very well, the convention is
to seem extra friendly.  You smile and say "pleased to meet you,"
whether you are or not.  There's nothing dishonest about this.
Everyone knows that these little social lies aren't meant
to be taken literally, just as everyone knows that 
"Can you pass the salt?" is only grammatically a question.&lt;br/&gt;&lt;br/&gt;I'm perfectly willing to smile and say "pleased to meet you"
when meeting n&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;When meeting people you don't know very well, the convention is
to seem extra friendly.  You smile and say "pleased to meet you,"
whether you are or not.  There's nothing dishonest about this.
Everyone knows that these little social lies aren't meant
to be taken literally, just as everyone knows that 
"Can you pass the salt?" is only grammatically a question.&lt;br/&gt;&lt;br/&gt;I'm perfectly willing to smile and say "pleased to meet you"
when meeting new people.  But there is another set of 
customs for being ingratiating in print that are not so
harmless.&lt;br/&gt;&lt;br/&gt;The reason there's a convention of being ingratiating in print
is that most essays are written to persuade.
And as any politician could tell
you, the way to persuade people is not just to baldly state the
facts.  You have to add a spoonful of sugar to make the medicine
go down.&lt;br/&gt;&lt;br/&gt;For example, a politician announcing the cancellation of 
a government program will not merely say "The
program is canceled." That would seem offensively
curt.  Instead he'll spend most of his time talking about the
noble effort made by the people who worked on it.&lt;br/&gt;&lt;br/&gt;The reason these conventions are more dangerous is that they
interact with the ideas.  Saying "pleased to meet you" is just
something you prepend to a conversation, but the sort of spin 
added by politicians is woven through it.  We're starting to
move from social lies to real lies.&lt;br/&gt;&lt;br/&gt;Here's an example of a paragraph from an essay I wrote about
&lt;a href="https://paulgraham.com/unions.html"&gt;labor unions&lt;/a&gt;.  As written,
it tends to offend people who like unions.
&lt;blockquote&gt;
  People who think the labor movement was the creation of heroic
  union organizers have a problem to explain: why are unions shrinking
  now?  The best they can do is fall back on the default explanation
  of people living in fallen civilizations. Our ancestors were
  giants.  The workers of the early twentieth century must have had
  a moral courage that's lacking today.
&lt;/blockquote&gt;
Now here's the same paragraph rewritten to please instead of
offending them:
&lt;blockquote&gt;
  Early union organizers made heroic sacrifices to improve conditions
  for workers.  But though
  labor unions are shrinking now, it's not because present union
  leaders are any less courageous.  An employer couldn't get away
  with hiring thugs to beat up union leaders today, but if they
  did, I see no reason to believe today's union leaders would shrink
  from the challenge.  So I think it would be a mistake to attribute
  the decline of unions to some kind of decline in the people who
  run them.  Early union leaders were heroic, certainly, but we
  should not suppose that if unions have declined, it's because
  present union leaders are somehow inferior.  The cause must be
  external.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/discover.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
&lt;/blockquote&gt;
It makes the same point: that it can't have been the personal
qualities of early union organizers that made unions successful,
but must have been some external factor, or otherwise present-day
union leaders would have to be inferior people.  But written this
way it seems like a defense of present-day union organizers rather
than an attack on early ones.  That makes it more persuasive to
people who like unions, because it seems sympathetic to their cause.&lt;br/&gt;&lt;br/&gt;I believe everything I wrote in the second version.  Early union
leaders did make heroic sacrifices.   And
present union leaders probably would rise to the occasion if
necessary.  People tend to; I'm skeptical about the idea of "the
greatest generation." 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/discover.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If I believe everything I said in the second version, why didn't I
write it that way?  Why offend people needlessly?&lt;br/&gt;&lt;br/&gt;Because I'd rather offend people than pander to them, 
and if you write about controversial topics you have to choose one or the other.  The degree of
courage of past or present union leaders is beside the point; all
that matters for the argument is that they're the same.
But if you want to please
people who are mistaken, you can't simply tell the truth.  You're
always going to have to add some sort of padding to protect their
misconceptions from bumping against reality.&lt;br/&gt;&lt;br/&gt;Most writers do.  Most writers write to persuade, if only out of
habit or politeness.  But I don't write to persuade; I write to
figure out.  I write to persuade a hypothetical perfectly unbiased
reader.&lt;br/&gt;&lt;br/&gt;Since the custom is to write to persuade the actual reader, someone
who doesn't will seem arrogant.  In fact, worse than arrogant: since
readers are used to essays that try to please someone, an essay
that displeases one side in a dispute reads as an attempt to pander
to the other.  To a lot of pro-union readers, the first paragraph
sounds like the sort of thing a right-wing radio talk show host
would say to stir up his followers.  But it's not.  Something that
curtly contradicts one's beliefs can be hard to distinguish from a
partisan attack on them, but though they can end up in the same
place they come from different sources.&lt;br/&gt;&lt;br/&gt;Would it be so bad to add a few extra words, to make people feel
better?  Maybe not.  Maybe I'm excessively attached to conciseness.
I write &lt;a href="https://paulgraham.com/power.html"&gt;code&lt;/a&gt; the same way I write essays, 
making pass after pass
looking for anything I can cut.  But I have a legitimate reason for
doing this.  You don't know what the ideas are until you get them
down to the fewest words.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/discover.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The danger of the second paragraph
is not merely that it's longer.  It's that you start to lie to
yourself.  The ideas start to get mixed together with the spin
you've added to get them past the readers' misconceptions.&lt;br/&gt;&lt;br/&gt;I think the goal of an essay should be to discover 
&lt;a href="https://paulgraham.com/essay.html"&gt;surprising&lt;/a&gt; things.  That's my goal, at least.
And most surprising means most different from what people currently
believe.  So writing to persuade and writing to discover are
diametrically opposed.  The more your conclusions disagree with
readers' present beliefs, the more effort you'll have to expend on
selling your ideas rather than having them.  As you accelerate,
this drag increases, till eventually you reach a point where 100%
of your energy is devoted to overcoming it and you can't go any
faster.&lt;br/&gt;&lt;br/&gt;It's hard enough to overcome one's own misconceptions without having
to think about how to get the resulting ideas past other people's.
I worry that if I wrote to persuade, I'd start to shy away unconsciously
from ideas I knew would be hard to sell.  When I notice something
surprising, it's usually very faint at first.  There's nothing more
than a slight stirring of discomfort.  I don't want anything to get
in the way of noticing it consciously.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I had a strange feeling of being back in high school writing
this.  To get a good grade you had to both write the sort of pious
crap you were expected to, but also seem to be writing with conviction.
The solution was a kind of method acting.  It was revoltingly
familiar to slip back into it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Exercise for the reader:
rephrase that thought to please the same people the first version
would offend.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Come to think of it, there is one way in which I deliberately
pander to readers, because it doesn't change the number of words:
I switch person.  This flattering distinction seems so natural to
the average reader that they probably don't notice even when I
switch in mid-sentence, though you tend to notice when it's done
as conspicuously as this.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Jessica Livingston and Robert Morris
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Note:&lt;/b&gt; An earlier version of this essay began by talking
about why people dislike Michael Arrington.  I now believe that
was mistaken, and that most people don't dislike him for the
same reason I did when I first met him, but simply because
he writes about controversial things.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//discover.html</guid>
      <pubDate>Tue, 01 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Post-Medium Publishing</title>
      <link>https://paulgraham.com//publishing.html</link>
      <description>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;Publishers of all types, from news to music, are unhappy that
consumers won't pay for content anymore.  At least, that's how they
see it.&lt;br/&gt;&lt;br/&gt;In fact consumers never really were paying for content, and publishers
weren't really selling it either.  If the content was what they
were selling, why has the price of books or music or movies always
depended mostly on the format?  Why didn't better content cost more?
&lt;font color="#999999"&gt;[&amp;lt;a hr&lt;/font&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;Publishers of all types, from news to music, are unhappy that
consumers won't pay for content anymore.  At least, that's how they
see it.&lt;br/&gt;&lt;br/&gt;In fact consumers never really were paying for content, and publishers
weren't really selling it either.  If the content was what they
were selling, why has the price of books or music or movies always
depended mostly on the format?  Why didn't better content cost more?
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/publishing.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;A copy of &lt;i&gt;Time&lt;/i&gt; costs $5 for 58 pages, or 8.6 cents a page.  
&lt;i&gt;The Economist&lt;/i&gt; costs $7 for 86 pages, or 8.1 cents a page.  Better
journalism is actually slightly cheaper.&lt;br/&gt;&lt;br/&gt;Almost every form of publishing has been organized as if the medium
was what they were selling, and the content was irrelevant.  Book
publishers, for example, set prices based on the cost of producing
and distributing books.  They treat the words printed in the book
the same way a textile manufacturer treats the patterns printed on
its fabrics.&lt;br/&gt;&lt;br/&gt;Economically, the print media are in the business of marking up
paper.  We can all imagine an old-style editor getting a scoop and
saying "this will sell a lot of papers!" Cross out that final S and
you're describing their business model.  The reason they make less
money now is that people don't need as much paper.&lt;br/&gt;&lt;br/&gt;A few months ago I ran into a friend in a cafe.  I had a copy of
the &lt;i&gt;New York Times&lt;/i&gt;, which I still occasionally buy on weekends.  As
I was leaving I offered it to him, as I've done countless times
before in the same situation.  But this time something new happened.
I felt that sheepish feeling you get when you offer someone something
worthless.  "Do you, er, want a printout of yesterday's news?" I
asked.  (He didn't.)&lt;br/&gt;&lt;br/&gt;Now that the medium is evaporating, publishers have nothing left
to sell.  Some seem to think they're going to sell contentâ€”that
they were always in the content business, really.  But they weren't,
and it's unclear whether anyone could be.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Selling&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There have always been people in the business of selling information,
but that has historically been a distinct business from publishing.
And the business of selling information to consumers has always
been a marginal one.  When I was a kid there were people who used
to sell newsletters containing stock tips, printed on colored paper
that made them hard for the copiers of the day to reproduce.  That
is a different world, both culturally and economically, from the
one publishers currently inhabit.&lt;br/&gt;&lt;br/&gt;People will pay for information they think they can make money from.
That's why they paid for those stock tip newsletters, and why
companies pay now for Bloomberg terminals and Economist Intelligence
Unit reports.  But will people pay for information otherwise?
History offers little encouragement.&lt;br/&gt;&lt;br/&gt;If audiences were willing to pay more for better content, why wasn't
anyone already selling it to them?  There was no reason you couldn't
have done that in the era of physical media.  So were the print
media and the music labels simply overlooking this opportunity?  Or
is it, rather, nonexistent?&lt;br/&gt;&lt;br/&gt;What about iTunes?  Doesn't that show people will pay for content?
Well, not really. iTunes is more of a tollbooth than a store.  Apple
controls the default path onto the iPod.  They offer a convenient
list of songs, and whenever you choose one they ding your credit
card for a small amount, just below the threshold of attention.
Basically, iTunes makes money by taxing people, not selling them
stuff.  You can only do that if you own the channel, and even then
you don't make much from it, because a toll has to be ignorable to
work.  Once a toll becomes painful, people start to find ways around
it, and that's pretty easy with digital content.&lt;br/&gt;&lt;br/&gt;The situation is much the same with digital books.  Whoever controls
the device sets the terms.  It's in their interest for content to
be as cheap as possible, and since they own the channel, there's a
lot they can do to drive prices down.  Prices will fall even further
once writers realize they don't need publishers.  Getting a book
printed and distributed is a daunting prospect for a writer, but
most can upload a file.&lt;br/&gt;&lt;br/&gt;Is software a counterexample?  People pay a lot for desktop software,
and that's just information.  True, but I don't think publishers
can learn much from software.  Software companies can charge a lot
because (a) many of the customers are businesses, who get in 
&lt;a href="http://www.bsa.org/country/News%20and%20Events/News%20Archives/en/2009/en-08312009-mueller.aspx?sc_lang=en"&gt;trouble&lt;/a&gt;
if they use pirated versions, and (b) though in form merely
information, software is treated by both maker and purchaser as a
different type of thing from a song or an article.   A Photoshop
user needs Photoshop in a way that no one needs a particular song
or article.&lt;br/&gt;&lt;br/&gt;That's why there's a separate word, "content," for information
that's not software.  Software is a different business.  Software
and content blur together in some of the most lightweight software,
like casual games.  But those are usually free.   To make money the
way software companies do, publishers would have to become software
companies, and being publishers gives them no particular head start
in that domain. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/publishing.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The most promising countertrend is the premium cable channel.  People
still pay for those.  But broadcasting isn't publishing: you're not
selling a copy of something.  That's one reason the movie business
hasn't seen their revenues decline the way the news and music
businesses have.  They only have one foot in publishing.&lt;br/&gt;&lt;br/&gt;To the extent the movie business can avoid becoming publishers,
they may avoid publishing's problems.  But there are limits to how
well they'll be able to do that.  Once publishingâ€”giving people
copiesâ€”becomes the most natural way of distributing your content,
it probably doesn't work to stick to old forms of distribution just
because you make more that way.  If free copies of your content are
available online, then you're competing with publishing's form of
distribution, and that's just as bad as being a publisher.&lt;br/&gt;&lt;br/&gt;Apparently some people in the music business hope to retroactively
convert it away from publishing, by getting listeners to pay for
subscriptions.  It seems unlikely that will work if they're just
streaming the same files you can get as mp3s.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Next&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;What happens to publishing if you can't sell content?  You have two
choices: give it away and make money from it indirectly, or find
ways to embody it in things people will pay for.&lt;br/&gt;&lt;br/&gt;The first is probably the future of most current media.  
&lt;a href="http://thesixtyone.com"&gt;Give music
away&lt;/a&gt; and make money from concerts and t-shirts.  Publish articles
for free and make money from one of a dozen permutations of
advertising.  Both publishers and investors are down on advertising
at the moment, but it has more potential than they realize.&lt;br/&gt;&lt;br/&gt;I'm not claiming that potential will be realized by the existing
players.  The &lt;a href="http://ycombinator.com/rfs1.html"&gt;optimal&lt;/a&gt;
ways to make money from the written word
probably require different words written by different people.&lt;br/&gt;&lt;br/&gt;It's harder to say what will happen to movies.  They could evolve
into ads.  Or they could return to their roots and make going to
the theater a treat.  If they made the experience good enough,
audiences might start to prefer it to watching pirated movies at
home. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/publishing.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Or maybe the movie business will dry up, and the people
working in it will go to work for game developers.&lt;br/&gt;&lt;br/&gt;I don't know how big embodying information in physical form will
be.  It may be surprisingly large; people overvalue 
&lt;a href="https://paulgraham.com/stuff.html"&gt;physical stuff&lt;/a&gt;.
There should remain some market for printed books, at least.&lt;br/&gt;&lt;br/&gt;I can see the evolution of book publishing in the books on my
shelves.  Clearly at some point in the 1960s the big publishing
houses started to ask: how cheaply can we make books before people
refuse to buy them?  The answer turned out to be one step short of
phonebooks.  As long as it isn't floppy, consumers still perceive
it as a book.&lt;br/&gt;&lt;br/&gt;That worked as long as buying printed books was the only way to
read them.  If printed books are optional, publishers will have to
work harder to entice people to buy them.  There should be some
market, but it's hard to foresee how big, because its size will
depend not on macro trends like the amount people read, but on the
ingenuity of individual publishers. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/publishing.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Some magazines may thrive by focusing on the magazine as a physical
object.  Fashion magazines could be made lush in a way that would
be hard to match digitally, at least for a while.  But this is
probably not an option for most magazines.&lt;br/&gt;&lt;br/&gt;I don't know exactly what the future will look like, but I'm not
too worried about it.  This sort of change tends to create as many
good things as it kills.  Indeed, the really interesting question is not
what will happen to existing forms, but what new forms will appear.&lt;br/&gt;&lt;br/&gt;The reason I've been writing about existing forms is that I don't
&lt;i&gt;know&lt;/i&gt; what new forms will appear.  But though I can't predict
specific winners, I can offer a recipe for recognizing them.  When
you see something that's taking advantage of new technology to give
people something they want that they couldn't have before, you're
probably looking at a winner.  And when you see something that's
merely reacting to new technology in an attempt to preserve some
existing source of revenue, you're probably looking at a loser.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I don't like the word "content" and tried for a while to avoid
using it, but I have to admit there's no other word that means the
right thing.  "Information" is too general.&lt;br/&gt;&lt;br/&gt;Ironically, the main reason I don't like "content" is the thesis
of this essay.  The word suggests an undifferentiated slurry, but
economically that's how both publishers and audiences treat it.
Content is information you don't need.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Some types of publishers would be at a disadvantage trying
to enter the software business.  Record labels, for example, would
probably find it more natural to expand into casinos than software,
because the kind of people who run them would be more at home at
the mafia end of the business spectrum than the don't-be-evil end.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
I never watch movies in theaters anymore.  The tipping point
for me was the ads they show first.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Unfortunately, making physically nice books will only be a
niche within a niche.  Publishers are more likely to resort to
expedients like selling autographed copies, or editions with the
buyer's picture on the cover.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Michael Arrington, Trevor Blackwell, Steven Levy, Robert
Morris, and Geoff Ralston for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//publishing.html</guid>
      <pubDate>Tue, 01 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The List of N Things</title>
      <link>https://paulgraham.com//nthings.html</link>
      <description>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;I bet you the current issue of &lt;i&gt;Cosmopolitan&lt;/i&gt; has an article
whose title begins with a number. "7 Things He Won't Tell You about
Sex," or something like that.  Some popular magazines
feature articles of this type on the cover of every
issue.  That can't be happening by accident.  Editors must know
they attract readers.&lt;br/&gt;&lt;br/&gt;Why do readers like the list of n things so much?   Mainly because
it's easier to read than a regular article. &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;September 2009&lt;br/&gt;&lt;br/&gt;I bet you the current issue of &lt;i&gt;Cosmopolitan&lt;/i&gt; has an article
whose title begins with a number. "7 Things He Won't Tell You about
Sex," or something like that.  Some popular magazines
feature articles of this type on the cover of every
issue.  That can't be happening by accident.  Editors must know
they attract readers.&lt;br/&gt;&lt;br/&gt;Why do readers like the list of n things so much?   Mainly because
it's easier to read than a regular article.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/nthings.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Structurally, the list of n things is a degenerate case of essay.
An essay can go anywhere the writer wants.  In a list of n things
the writer agrees to constrain himself to a collection of points
of roughly equal importance, and he tells the reader explicitly
what they are.&lt;br/&gt;&lt;br/&gt;Some of the work of reading an article is understanding its
structureâ€”figuring out what in high school we'd have called
its "outline." Not explicitly, of course, but someone who really
understands an article probably has something in his brain afterward
that corresponds to such an outline.  In a list of n things, this
work is done for you.  Its structure is an exoskeleton.&lt;br/&gt;&lt;br/&gt;As well as being explicit, the structure is guaranteed to be of the
simplest possible type: a few main points with few to no subordinate
ones, and no particular connection between them.&lt;br/&gt;&lt;br/&gt;Because the main points are unconnected, the list of n things is
random access.  There's no thread of reasoning you have to follow.  You could
read the list in any order.  And because the points are independent
of one another, they work like watertight compartments in an
unsinkable ship.  If you get bored with, or can't understand, or
don't agree with one point, you don't have to give up on the article.
You can just abandon that one and skip to the next.  A list of n
things is parallel and therefore fault tolerant.&lt;br/&gt;&lt;br/&gt;There are times when this format is what a writer wants.  One, obviously,
is when what you have to say actually is a list of n
things.  I once wrote an essay about the &lt;a href="https://paulgraham.com/startupmistakes.html"&gt;mistakes that kill startups&lt;/a&gt;, and a few people made fun of me
for writing something whose title began with a number.  But in that
case I really was trying to make a complete catalog of a number of
independent things.  In fact, one of the questions I was trying to
answer was how many there were.&lt;br/&gt;&lt;br/&gt;There are other less legitimate reasons for using this format.  For
example, I use it when I get close to a deadline.  If I have to
give a talk and I haven't started it a few days beforehand, I'll
sometimes play it safe and make the talk a list of n things.&lt;br/&gt;&lt;br/&gt;The list of n things is easier for writers as well as readers.  When
you're writing a real essay, there's always a chance you'll hit a
dead end.  A real essay is a train of thought, and some trains of
thought just peter out.  That's an alarming possibility when you
have to give a talk in a few days.  What if you run out of ideas?
The compartmentalized structure of the list of n things protects
the writer from his own stupidity in much the same way it protects
the reader.  If you run out of ideas on one point, no problem: it
won't kill the essay.  You can take out the whole point if you need
to, and the essay will still survive.&lt;br/&gt;&lt;br/&gt;Writing a list of n things is so relaxing.  You think of n/2 of
them in the first 5 minutes.  So bang, there's the structure, and
you just have to fill it in.  As you think of more points, you just
add them to the end.  Maybe you take out or rearrange or combine a
few, but at every stage you have a valid (though initially low-res)
list of n things.  It's like the sort of programming where you write
a version 1 very quickly and then gradually modify it, but at every
point have working codeâ€”or the style of painting where you begin
with a complete but very blurry sketch done in an hour, then spend
a week cranking up the resolution.&lt;br/&gt;&lt;br/&gt;Because the list of n things is easier for writers too, it's not
always a damning sign when readers prefer it.  It's not necessarily
evidence readers are lazy; it could also mean they don't have
much confidence in the writer.  The list of n things is in that
respect the cheeseburger of essay forms.  If you're eating at a
restaurant you suspect is bad, your best bet is to order the
cheeseburger.  Even a bad cook can make a decent cheeseburger.  And
there are pretty strict conventions about what a cheeseburger should
look like.  You can assume the cook isn't going to try something
weird and artistic.  The list of n things similarly limits the
damage that can be done by a bad writer.  You know it's going to
be about whatever the title says, and the format prevents the writer
from indulging in any flights of fancy.&lt;br/&gt;&lt;br/&gt;Because the list of n things is the easiest essay form, it should
be a good one for beginning writers.  And in fact it is what most
beginning writers are taught.  The classic 5 paragraph essay is
really a list of n things for n = 3.  But the students writing them
don't realize they're using the same structure as the articles they
read in &lt;i&gt;Cosmopolitan&lt;/i&gt;. They're not allowed to include the numbers,
and they're expected to spackle over the gaps with gratuitous
transitions ("Furthermore...") and cap the thing at either end with
introductory and concluding paragraphs so it will look superficially
like a real essay.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/nthings.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;It seems a fine plan to start students off with the list of n things.
It's the easiest form.  But if we're going to do that, why not do
it openly?  Let them write lists of n things like the pros, with
numbers and no transitions or "conclusion."&lt;br/&gt;&lt;br/&gt;There is one case where the list of n things is a dishonest format:
when you use it to attract attention by falsely claiming the list
is an exhaustive one.  I.e. if you write an article that purports
to be about &lt;i&gt;the&lt;/i&gt; 7 secrets of success.  That kind of title is the
same sort of reflexive challenge as a whodunit. You have to at least
look at the article to check whether they're the same 7 you'd list.
Are you overlooking one of the secrets of success?  Better check.&lt;br/&gt;&lt;br/&gt;It's fine to put "The" before the number if you really believe
you've made an exhaustive list.  But evidence suggests most things
with titles like this are linkbait.&lt;br/&gt;&lt;br/&gt;The greatest weakness of the list of n things is that there's so
little room for new thought.  The main point of essay writing, when
done right, is the new ideas you have while doing it.  A real essay,
as the name implies, is 
&lt;a href="https://paulgraham.com/essay.html"&gt;dynamic&lt;/a&gt;: you don't know what you're going
to write when you start.  It will be about whatever you discover
in the course of writing it.&lt;br/&gt;&lt;br/&gt;This can only happen in a very limited way in a list of n things.
You make the title first, and that's what it's going to be about.
You can't have more new ideas in the writing than will fit in the
watertight compartments you set up initially.  And your brain seems
to know this: because you don't have room for new ideas, you don't
have them.&lt;br/&gt;&lt;br/&gt;Another advantage of admitting to beginning writers that the 5
paragraph essay is really a list of n things is that we can warn
them about this.  It only lets you experience the defining
characteristic of essay writing on a small scale: in thoughts of a
sentence or two.  And it's particularly dangerous that the 5 paragraph
essay buries the list of n things within something that looks like
a more sophisticated type of essay.  If you don't know you're using
this form, you don't know you need to escape it.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Articles of this type are also startlingly popular on Delicious,
but I think that's because 
&lt;a href="http://delicious.com/popular"&gt;delicious/popular&lt;/a&gt; 
is driven by bookmarking,
not because Delicious users are stupid.  Delicious users are
collectors, and a list of n things seems particularly collectible
because it's a collection itself.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Most "word problems" in school math textbooks are similarly
misleading.  They look superficially like the application of math
to real problems, but they're not.  So if anything they reinforce
the impression that math is merely a complicated but pointless
collection of stuff to be memorized.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//nthings.html</guid>
      <pubDate>Tue, 01 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Anatomy of Determination</title>
      <link>https://paulgraham.com//determination.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2009&lt;br/&gt;&lt;br/&gt;Like all investors, we spend a lot of time trying to learn how to
p&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
September 2009&lt;br/&gt;&lt;br/&gt;Like all investors, we spend a lot of time trying to learn how to
predict which startups will succeed.  We probably spend more time
thinking about it than most, because we invest the earliest.
Prediction is usually all we have to rely on.&lt;br&gt;&lt;br/&gt;We learned quickly that the most important predictor of success is
determination.  At first we thought it might be intelligence.
Everyone likes to believe that's what makes startups succeed.  It
makes a better story that a company won because its founders were
so smart.  The PR people and reporters who spread such stories
probably believe them themselves.  But while it certainly helps to
be smart, it's not the deciding factor.  There are plenty of people
as smart as Bill Gates who achieve nothing.&lt;br/&gt;&lt;br/&gt;In most domains, talent is overrated compared to determinationâ€”partly
because it makes a better story, partly because it gives onlookers
an excuse for being lazy, and partly because after a while determination
starts to look like talent.&lt;br/&gt;&lt;br/&gt;I can't think of any field in which determination is overrated, but
the relative importance of determination and talent probably do
vary somewhat.  Talent probably matters more in types of work that
are purer, in the sense that one is solving mostly a single type
of problem instead of many different types.   I suspect determination
would not take you as far in math as it would in, say, organized
crime.&lt;br/&gt;&lt;br/&gt;I don't mean to suggest by this comparison that types of work that
depend more on talent are always more admirable.  Most people would
agree it's more admirable to be good at math than memorizing long
strings of digits, even though the latter depends more on natural
ability.&lt;br/&gt;&lt;br/&gt;Perhaps one reason people believe startup founders win by being
smarter is that intelligence does matter more in technology startups
than it used to in earlier types of companies.  You probably do
need to be a bit smarter to dominate Internet search than you had
to be to dominate railroads or hotels or newspapers.  And that's
probably an ongoing trend.  But even in the highest of high tech
industries, success still depends more on determination than brains.&lt;br/&gt;&lt;br/&gt;If determination is so important, can we isolate its components?
Are some more important than others?  Are there some you can
cultivate?&lt;br/&gt;&lt;br/&gt;The simplest form of determination is sheer willfulness.  When you
want something, you must have it, no matter what.&lt;br/&gt;&lt;br/&gt;A good deal of willfulness must be inborn, because it's common to
see families where one sibling has much more of it than another.
Circumstances can alter it, but at the high end of the scale, nature
seems to be more important than nurture.  Bad circumstances can
break the spirit of a strong-willed person, but I don't think there's
much you can do to make a weak-willed person stronger-willed.&lt;br/&gt;&lt;br/&gt;Being strong-willed is not enough, however.  You also have to be
hard on yourself.  Someone who was strong-willed but self-indulgent
would not be called determined.  Determination implies your willfulness
is balanced by discipline.&lt;br/&gt;&lt;br/&gt;That word balance is a significant one.  The more willful you are,
the more disciplined you have to be.  The stronger your will, the
less anyone will be able to argue with you except yourself.  And
someone has to argue with you, because everyone has base impulses,
and if you have more will than discipline you'll just give into
them and end up on a local maximum like drug addiction.&lt;br/&gt;&lt;br/&gt;We can imagine will and discipline as two fingers squeezing a
slippery melon seed.  The harder they squeeze, the further the seed
flies, but they must both squeeze equally or the seed spins off
sideways.&lt;br/&gt;&lt;br/&gt;If this is true it has interesting implications, because discipline
can be cultivated, and in fact does tend to vary quite a lot in the
course of an individual's life.  If determination is effectively
the product of will and discipline, then you can become more
determined by being more disciplined.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/determination.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Another consequence of the melon seed model is that the more willful
you are, the more dangerous it is to be undisciplined.  There seem
to be plenty of examples to confirm that.  In some very energetic
people's lives you see something like wing flutter, where they
alternate between doing great work and doing absolutely nothing.
Externally this would look a lot like bipolar disorder.&lt;br/&gt;&lt;br/&gt;The melon seed model is inaccurate in at least one respect, however:
it's static.  In fact the dangers of indiscipline increase with
temptation.  Which means, interestingly, that determination tends
to erode itself.  If you're sufficiently determined to achieve great
things, this will probably increase the number of temptations around
you.  Unless you become proportionally more disciplined, willfulness
will then get the upper hand, and your achievement will revert to
the mean.&lt;br/&gt;&lt;br/&gt;That's why Shakespeare's Caesar thought thin men so dangerous.  They weren't
tempted by the minor perquisites of power.&lt;br/&gt;&lt;br/&gt;The melon seed model implies it's possible to be too disciplined.
Is it?  I think there probably are people whose willfulness is
crushed down by excessive discipline, and who would achieve more
if they weren't so hard on themselves.  One reason the young sometimes
succeed where the old fail is that they don't realize how incompetent
they are.  This lets them do a kind of deficit spending.  When they
first start working on something, they overrate their achievements.
But that gives them confidence to keep working, and their performance
improves.  Whereas someone clearer-eyed would see their initial
incompetence for what it was, and perhaps be discouraged from
continuing.&lt;br/&gt;&lt;br/&gt;There's one other major component of determination: ambition.  If
willfulness and discipline are what get you to your destination,
ambition is how you choose it.&lt;br/&gt;&lt;br/&gt;I don't know if it's exactly right to say that ambition is a component
of determination, but they're not entirely orthogonal.  It would
seem a misnomer if someone said they were very determined to do
something trivially easy.&lt;br/&gt;&lt;br/&gt;And fortunately ambition seems to be quite malleable; there's a lot
you can do to increase it.  Most people don't know how ambitious
to be, especially when they're young.  They don't know what's hard,
or what they're capable of.  And this problem is exacerbated by
having few peers.  Ambitious people are rare, so if everyone is
mixed together randomly, as they tend to be early in people's lives,
then the ambitious ones won't have many ambitious peers.  When you
take people like this and put them together with other ambitious
people, they bloom like dying plants given water.  Probably most
ambitious people are starved for the sort of encouragement they'd
get from ambitious peers, whatever their age.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/determination.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Achievements also tend to increase your ambition.  With each step
you gain confidence to stretch further next time.&lt;br/&gt;&lt;br/&gt;So here in sum is how determination seems to work: it consists of
willfulness balanced with discipline, aimed by ambition.   And
fortunately at least two of these three qualities can be cultivated.
You may be able to increase your strength of will somewhat; you can
definitely learn self-discipline; and almost everyone is practically
malnourished when it comes to ambition.&lt;br/&gt;&lt;br/&gt;I feel like I understand determination a bit better now.  But only
a bit: willfulness, discipline, and ambition are all concepts almost
as complicated as determination.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/determination.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Note too that determination and talent are not the whole story.
There's a third factor in achievement: how much you like the work.
If you really &lt;a href="https://paulgraham.com/love.html"&gt;love&lt;/a&gt; working on something,
you don't need determination to drive you; it's what you'd do anyway.
But most types of work have aspects one doesn't like, because most
types of work consist of doing things for other people, and it's
very unlikely that the tasks imposed by their needs will happen to
align exactly with what you want to do.&lt;br/&gt;&lt;br/&gt;Indeed, if you want to create the most &lt;a href="https://paulgraham.com/wealth.html"&gt;wealth&lt;/a&gt;,
the way to do it is to focus more on their needs than your interests,
and make up the difference with determination.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Loosely speaking.  What I'm claiming with the melon seed model
is more like determination is proportionate to wd^m - k|w - d|^n,
where w is will and d discipline.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Which means one of the best ways to help a society generally
is to create &lt;a href="http://startupschool.org"&gt;events&lt;/a&gt; and &lt;a href="http://ycombinator.com"&gt;institutions&lt;/a&gt; that bring ambitious
people together.  It's like pulling the control rods out of a
reactor: the energy they emit encourages other ambitious people,
instead of being absorbed by the normal people they're usually
surrounded with.&lt;br/&gt;&lt;br/&gt;Conversely, it's probably a mistake to do as some European countries
have done and try to ensure none of your universities is significantly
better than the others.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
For example, willfulness clearly has two subcomponents,
stubbornness and energy.  The first alone yields someone who's
stubbornly inert.  The second alone yields someone flighty.
As willful people get older or otherwise lose their energy, they
tend to become merely stubborn.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Jessica Livingston, and Robert Morris
for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//determination.html</guid>
      <pubDate>Tue, 01 Sep 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What Kate Saw in Silicon Valley</title>
      <link>https://paulgraham.com//kate.html</link>
      <description>&lt;font face="verdana" size="2"&gt;August 2009&lt;br/&gt;&lt;br/&gt;Kate Courteau is the architect who designed Y Combinator's office.
Recently we managed to recruit her to help us run YC when she's not
busy with architectural projects.  Though she'd heard a lot about
YC since the beginning, the last 9 months have been a total immersion.&lt;br/&gt;&lt;br/&gt;I've been around the startup world for so long that it seems normal
to me, so I was curious to hear what had surprised her most about
it.  This was her list:&lt;br/&gt;&lt;br/&gt;&amp;lt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;August 2009&lt;br/&gt;&lt;br/&gt;Kate Courteau is the architect who designed Y Combinator's office.
Recently we managed to recruit her to help us run YC when she's not
busy with architectural projects.  Though she'd heard a lot about
YC since the beginning, the last 9 months have been a total immersion.&lt;br/&gt;&lt;br/&gt;I've been around the startup world for so long that it seems normal
to me, so I was curious to hear what had surprised her most about
it.  This was her list:&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. How many startups fail.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Kate knew in principle that startups
were very risky, but she was surprised to see how constant the
threat of failure was â€” not just for the minnows, but even for the
famous startups whose founders came to speak at YC dinners.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;2. How much startups' ideas change.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;As usual, by Demo Day about
half the startups were doing something significantly different than
they started with.  We encourage that.  Starting a startup is like
science in that you have to follow the truth wherever it leads.  In
the rest of the world, people don't start things till they're sure
what they want to do, and once started they tend to continue on their
initial path even if it's mistaken.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;3. How little money it can take to start a startup.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;In Kate's
world, everything is still physical and expensive.  You can barely
renovate a bathroom for the cost of starting a startup.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;4. How scrappy founders are.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;That was her actual word.  I agree
with her, but till she mentioned this it never occurred to me how
little this quality is appreciated in most of the rest of the world.
It wouldn't be a compliment in most organizations to call someone
scrappy.&lt;br/&gt;&lt;br/&gt;What does it mean, exactly?  It's basically the diminutive form of
belligerent.  Someone who's scrappy manages to be both threatening
and undignified at the same time.   Which seems to me exactly what
one would want to be, in any kind of work.  If you're not threatening,
you're probably not doing anything new, and dignity is merely a
sort of plaque.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;5. How tech-saturated Silicon Valley is.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;"It seems like everybody
here is in the industry."  That isn't literally true, but there is
a qualitative difference between Silicon Valley and other places.
You tend to keep your voice down, because there's a good chance the
person at the next table would know some of the people you're talking
about.  I never felt that in Boston.  The good news is, there's
also a good chance the person at the next table could help you in
some way.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;6. That the speakers at YC were so consistent in their advice.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;
Actually, I've noticed this too.  I always worry the speakers will
put us in an embarrassing position by contradicting what we tell the
startups, but it happens surprisingly rarely.&lt;br/&gt;&lt;br/&gt;When I asked her what specific things she remembered speakers always
saying, she mentioned: that the way to succeed was to launch something
fast, listen to users, and then iterate; that startups required
resilience because they were always an emotional rollercoaster; and
that most VCs were sheep.&lt;br/&gt;&lt;br/&gt;I've been impressed by how consistently the speakers advocate
launching fast and iterating.  That was contrarian advice 10 years
ago, but it's clearly now the established practice.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;7. How casual successful startup founders are.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Most of the famous
founders in Silicon Valley are people you'd overlook on the street.
It's not merely that they don't dress up.  They don't project any
kind of aura of power either.  "They're not trying to impress
anyone."&lt;br/&gt;&lt;br/&gt;Interestingly, while Kate said that she could never pick out
successful founders, she could recognize VCs, both by the way they
dressed and the way they carried themselves.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;8. How important it is for founders to have people to ask for advice.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;(I swear I didn't prompt this one.)  Without advice "they'd just
be sort of lost."  Fortunately, there are a lot of people to help
them.  There's a strong tradition within YC of helping other YC-funded
startups.  But we didn't invent that idea: it's just a slightly
more concentrated form of existing Valley culture.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;9. What a solitary task startups are.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Architects are constantly
interacting face to face with other people, whereas doing a technology
startup, at least, tends to require long stretches of uninterrupted
time to work.  "You could do it in a box."&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;By inverting this list, we can get a portrait of the "normal" world.
It's populated by people who talk a lot with one another as they
work slowly but harmoniously on conservative, expensive projects
whose destinations are decided in advance, and who carefully adjust
their manner to reflect their position in the hierarchy.&lt;br/&gt;&lt;br/&gt;That's also a fairly accurate description of the past.  So startup
culture may not merely be different in the way you'd expect any
subculture to be, but a leading indicator.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//kate.html</guid>
      <pubDate>Sat, 01 Aug 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Trouble with the Segway</title>
      <link>https://paulgraham.com//segway.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2009&lt;br/&gt;&lt;br/&gt;The Segway hasn't delivered on its initial promise, to put it mildly.
There are several reasons why, but one is that people don't want
to be seen riding them. Someone riding a Segway looks like a dork.&lt;br/&gt;&lt;br/&gt;My friend Trevor Blackwell built 
&lt;a href="http://tlb.org/#scooter"&gt;his own Segway&lt;/a&gt;, 
which we called
the Segwell. He also built a one-wheeled version, 
&lt;a href="http://tlb.org/#eunicycle"&gt;the Eunicycle&lt;/a&gt;,
which looks exactly like a re&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2009&lt;br/&gt;&lt;br/&gt;The Segway hasn't delivered on its initial promise, to put it mildly.
There are several reasons why, but one is that people don't want
to be seen riding them. Someone riding a Segway looks like a dork.&lt;br/&gt;&lt;br/&gt;My friend Trevor Blackwell built 
&lt;a href="http://tlb.org/#scooter"&gt;his own Segway&lt;/a&gt;, 
which we called
the Segwell. He also built a one-wheeled version, 
&lt;a href="http://tlb.org/#eunicycle"&gt;the Eunicycle&lt;/a&gt;,
which looks exactly like a regular unicycle till you realize the
rider isn't pedaling.  He has ridden them both to downtown Mountain
View to get coffee.  When he rides the Eunicycle, people smile at
him.  But when he rides the Segwell, they shout abuse from their
cars: "Too lazy to walk, ya fuckin homo?"&lt;br/&gt;&lt;br/&gt;Why do Segways provoke this reaction?  The reason you look like a
dork riding a Segway is that you look &lt;i&gt;smug&lt;/i&gt;.  You don't seem to
be working hard enough.&lt;br/&gt;&lt;br/&gt;Someone riding a motorcycle isn't working any harder. But because
he's sitting astride it, he seems to be making an effort.  When
you're riding a Segway you're just standing there.  And someone who's
being whisked along while seeming to do no work â€” someone in a sedan
chair, for example â€” can't help but look smug.&lt;br/&gt;&lt;br/&gt;Try this thought experiment and it becomes clear: imagine something
that worked like the Segway, but that you rode with one foot in
front of the other, like a skateboard.  That wouldn't seem nearly
as uncool.&lt;br/&gt;&lt;br/&gt;So there may be a way to capture more of the market Segway hoped
to reach: make a version that doesn't look so easy for the rider.
It would also be helpful if the styling was in the tradition of
skateboards or bicycles rather than medical devices.&lt;br/&gt;&lt;br/&gt;Curiously enough, what got Segway into this problem was that the
company was itself a kind of Segway.  It was too easy for them;
they were too successful raising money.  If they'd had to grow the
company gradually, by iterating through several versions they sold
to real users, they'd have learned pretty quickly that people looked
stupid riding them. Instead they had enough to work in secret.  They
had focus groups aplenty, I'm sure, but they didn't have the people
yelling insults out of cars.  So they never realized they were
zooming confidently down a blind alley.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//segway.html</guid>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Ramen Profitable</title>
      <link>https://paulgraham.com//ramenprofitable.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
July 2009&lt;br/&gt;&lt;br/&gt;Now that the term "ramen profitable" has become widespread, I ought
to e&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
July 2009&lt;br/&gt;&lt;br/&gt;Now that the term "ramen profitable" has become widespread, I ought
to explain precisely what the idea entails.&lt;br&gt;&lt;br/&gt;Ramen profitable means a startup makes just enough to pay the
founders' living expenses.  This is a different form of profitability
than startups have traditionally aimed for.  Traditional profitability
means a big bet is finally paying off, whereas the main importance
of ramen profitability is that it buys you time.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ramenprofitable.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;In the past, a startup would usually become profitable only
after raising and spending quite a lot of money.  A company making
computer hardware might not become profitable for 5 years, during
which they spent $50 million.  But when they did
they might have revenues of $50 million a year.   This kind of
profitability means the startup has succeeded.&lt;br/&gt;&lt;br/&gt;Ramen profitability is the other extreme: a startup that becomes
profitable after 2 months, even though its revenues are only $3000
a month, because the only employees are a couple 25 year old founders
who can live on practically nothing.  Revenues of $3000 a month do
not mean the company has succeeded.
But it does share something with the one
that's profitable in the traditional way: they don't need to raise
money to survive.&lt;br/&gt;&lt;br/&gt;Ramen profitability is an unfamiliar idea to most people because
it only recently became feasible.  It's still not feasible for a
lot of startups; it would not be for most biotech startups, for
example; but it is for many software startups because they're now
so cheap.  For many, the only real cost is the founders'
living expenses.&lt;br/&gt;&lt;br/&gt;The main significance of this type of profitability is that you're
no longer at the mercy of investors.  If you're still losing money,
then eventually you'll either have to raise more
or shut down.  Once you're
ramen profitable this painful choice goes away.
You can still raise money, but you don't have to do it now.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;The most obvious advantage of not needing money is that
you can get better terms.  If investors know you need money, they'll
sometimes take advantage of you.  Some may even deliberately
stall, because they know that as you run out of money you'll become
increasingly pliable.&lt;br/&gt;&lt;br/&gt;But there are also three less obvious advantages of ramen profitability.
One is that it makes you more attractive to investors.  If you're
already profitable, on however small a scale, it shows that (a) you
can get at least someone to pay you, (b) you're serious about
building things people want, and (c) you're disciplined enough to
keep expenses low.&lt;br/&gt;&lt;br/&gt;This is reassuring to investors, because you've addressed three of
their biggest worries.  It's common for them to fund companies that
have smart founders and a big market, and yet still fail.  When
these companies fail, it's usually because (a) people wouldn't pay
for what they made, e.g. because it was too hard to sell to them,
or the market wasn't ready yet, (b) the founders solved the wrong
problem, instead of paying attention to what users needed, or (c)
the company spent too much and burned through their funding before
they started to make money.  If you're ramen profitable, you're
already avoiding these mistakes.&lt;br/&gt;&lt;br/&gt;Another advantage of ramen profitability is that it's good for
morale.  A company
tends to feel rather theoretical when you first start it.  It's
legally a company, but you feel like you're lying when you call it
one.  When people start to pay you significant amounts, the company
starts to feel real.  And your own living expenses are the milestone
you feel most, because at that point the future flips state.  Now
survival is the default, instead of dying.&lt;br/&gt;&lt;br/&gt;A morale boost on that scale is very valuable in a startup, because
the moral weight of running a startup is what makes it hard.  Startups
are still very rare.  Why don't more people do it?  The financial
risk?  Plenty of 25 year olds save nothing anyway.  The long hours?
Plenty of people work just as long hours in regular jobs. What keeps
people from starting startups is the fear of having so much
responsibility.  And this is not an irrational fear: it really is
hard to bear.  Anything that takes some of that weight off you will 
greatly increase your chances of surviving.&lt;br/&gt;&lt;br/&gt;A startup that reaches ramen profitability may be more likely
to succeed than not.  Which is pretty exciting, considering the
bimodal distribution of outcomes in startups: you either fail or
make a lot of money.&lt;br/&gt;&lt;br/&gt;The fourth advantage of ramen profitability is the least obvious
but may be the most important.  If you don't need to raise money,
you don't have to interrupt working on the company to do it.&lt;br/&gt;&lt;br/&gt;&lt;a href="https://paulgraham.com/fundraising.html"&gt;Raising money&lt;/a&gt; is terribly distracting.  
You're lucky if your
productivity is a third of what it was before.  And it can last for
months.&lt;br/&gt;&lt;br/&gt;I didn't understand (or rather, remember) precisely why raising
money was so distracting till earlier this year.  I'd noticed that
startups we funded would usually grind to a halt when they switched
to raising money, but I didn't remember exactly why till YC raised
money itself.  We had a comparatively easy time of it; the first
people I asked said yes; but it took months to work out the
details, and during that time I got hardly any real work done.  Why?
Because I thought about it all the time.&lt;br/&gt;&lt;br/&gt;At any given time there tends to be one problem that's the most
urgent for a startup.  This is what you think about as you fall
asleep at night and when you take a shower in the morning.  And
when you start raising money, that becomes the problem you think
about.  You only take one shower in the morning, and if you're
thinking about investors during it, then you're not thinking about
the product.&lt;br/&gt;&lt;br/&gt;Whereas if you can choose when you raise money, you can pick a time
when you're not in the middle of something else, and you can probably
also insist that the round close fast.  You may even be able to
avoid having the round occupy your thoughts, if you don't care
whether it closes.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;* * *&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Ramen profitable means no more than the definition implies.  It
does not, for example, imply that you're "bootstrapping" the
startupâ€”that you're never going to take money from investors.
Empirically that doesn't seem to work very well.  Few startups
succeed without taking investment.  Maybe as startups get cheaper
it will become more common.  On the other hand, the money is there,
waiting to be invested.  If startups need it less, they'll be able
to get it on better terms, which will make them more inclined to
take it.  That will tend to produce an equilibrium.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ramenprofitable.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Another thing ramen profitability doesn't imply is Joe Kraus's idea
that you should put your 
&lt;a href="http://www.brendonwilson.com/blog/2006/04/30/joe-kraus-confessions-of-a-startup-addict/"&gt;business model&lt;/a&gt; in beta when you put your
product in beta.  He believes you should get
people to pay you from the beginning.  I think that's too constraining.
Facebook didn't, and they've done better than most startups.  Making
money right away was not only unnecessary for them, but probably
would have been harmful.  I do think Joe's rule could be useful for
many startups, though.  When founders seem unfocused, I sometimes
suggest they try to get customers to pay them for something, in the
hope that this constraint will prod them into action.&lt;br/&gt;&lt;br/&gt;The difference between Joe's idea and ramen profitability is that
a ramen profitable company doesn't have to be making money the way
it ultimately will.  It just has to be making money.  The most
famous example is Google, which initially made money by licensing
search to sites like Yahoo.&lt;br/&gt;&lt;br/&gt;Is there a downside to ramen profitability?  Probably the biggest
danger is that it might turn you into a consulting firm.  Startups
have to be product companies, in the sense of making a single thing
that everyone uses.  The defining quality of startups is that they
grow fast, and consulting just can't scale the way a product can.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/ramenprofitable.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But it's pretty easy to make $3000 a month consulting; in
fact, that would be a low rate for contract programming.  So there
could be a temptation to slide into consulting, and telling
yourselves you're a ramen profitable startup, when in fact
you're not a startup at all.&lt;br/&gt;&lt;br/&gt;It's ok to do a little consulting-type work at first.  Startups
usually have to do something weird at first.  But remember
that ramen profitability is not the destination.  A startup's
destination is to grow really big; ramen profitability is a trick
for &lt;a href="https://paulgraham.com/die.html"&gt;not dying&lt;/a&gt; en route.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
The "ramen" in "ramen profitable" refers to instant ramen,
which is just about the cheapest food available.&lt;br/&gt;&lt;br/&gt;Please do not take the term literally.  Living on instant ramen
would be very unhealthy.  Rice and beans are a better source of
food.  Start by investing in a rice cooker, if you don't have one.&lt;br/&gt;&lt;br/&gt;Rice and Beans for 2n
&lt;pre&gt;
  olive oil or butter
  n yellow onions
  other fresh vegetables; experiment
  3n cloves garlic
  n 12-oz cans white, kidney, or black beans
  n cubes Knorr beef or vegetable bouillon
  n teaspoons freshly ground black pepper
  3n teaspoons ground cumin
  n cups dry rice, preferably brown
&lt;/pre&gt;
Put rice in rice cooker. Add water as specified on rice package.
(Default: 2 cups water per cup of rice.) Turn on rice cooker and
forget about it.&lt;br/&gt;&lt;br/&gt;Chop onions and other vegetables and fry in oil, over fairly low
heat, till onions are glassy. Put in chopped garlic, pepper, cumin,
and a little more fat, and stir.  Keep heat low. Cook another 2 or
3 minutes, then add beans (don't drain the beans), and stir. Throw
in the bouillon cube(s), cover, and cook on lowish heat for at least
10 minutes more. Stir vigilantly to avoid sticking.&lt;br/&gt;&lt;br/&gt;If you want to save money, buy beans in giant cans from discount
stores.  Spices are also much cheaper when bought in bulk.
If there's an Indian grocery store near you, they'll have big 
bags of cumin for the same price as the little jars in supermarkets.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
There's a good chance that a shift in power from investors
to founders would actually increase the size of the venture business.
I think investors currently err too far on the side of being harsh
to founders.  If they were forced to stop, the whole venture business
would work better, and you might see something like the increase
in trade you always see when restrictive laws are removed.&lt;br/&gt;&lt;br/&gt;Investors
are one of the biggest sources of pain for founders; if they stopped
causing so much pain, it would be better to be a founder; and if
it were better to be a founder, more people would do it.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
It's conceivable that a startup could grow big by transforming
consulting into a form that would scale.  But if they did that
they'd really be a product company.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Jessica Livingston for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//ramenprofitable.html</guid>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Maker's Schedule, Manager's Schedule</title>
      <link>https://paulgraham.com//makersschedule.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;!--&lt;table width=100% cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ff9922&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif"
height=15 width=1&gt;&lt;font size=2&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif" height=5 width=1&gt;&lt;/td
&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt; --&gt;
&lt;table cellpadding="6" cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ffffdd"&gt;
&amp;lt;table cellpadding="&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;!--&lt;table width=100% cellspacing=0&gt;
&lt;tr&gt;&lt;td bgcolor=#ff9922&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif"
height=15 width=1&gt;&lt;font size=2&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif" height=5 width=1&gt;&lt;/td
&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt; --&gt;
&lt;table cellpadding="6" cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ffffdd"&gt;
&lt;table cellpadding="0" cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ffffdd"&gt;&lt;font size="2"&gt;
"...the mere consciousness of an engagement will sometimes worry a whole day."&lt;br/&gt;&lt;br/&gt;Â– Charles Dickens
&lt;/font&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
July 2009&lt;br/&gt;&lt;br/&gt;One reason programmers dislike meetings so much is that they're on
a different type of schedule from other people.  Meetings cost them
more.&lt;br/&gt;&lt;br/&gt;There are two types of schedule, which I'll call the manager's
schedule and the maker's schedule.  The manager's schedule is for
bosses.  It's embodied in the traditional appointment book, with
each day cut into one hour intervals.  You can block off several
hours for a single task if you need to, but by default you change
what you're doing every hour.&lt;br/&gt;&lt;br/&gt;When you use time that way, it's merely a practical problem to meet
with someone.  Find an open slot in your schedule, book them, and
you're done.&lt;br/&gt;&lt;br/&gt;Most powerful people are on the manager's schedule.  It's the
schedule of command.  But there's another way of using time that's
common among people who make things, like programmers and writers.
They generally prefer to use time in units of half a day at least.
You can't write or program well in units of an hour.  That's barely
enough time to get started.&lt;br/&gt;&lt;br/&gt;When you're operating on the maker's schedule, meetings are a
disaster.  A single meeting can blow a whole afternoon, by breaking
it into two pieces each too small to do anything hard in.  Plus you
have to remember to go to the meeting.  That's no problem for someone
on the manager's schedule.  There's always something coming on the
next hour; the only question is what.  But when someone on the
maker's schedule has a meeting, they have to think about it.&lt;br/&gt;&lt;br/&gt;For someone on the maker's schedule, having a meeting is like
throwing an exception.  It doesn't merely cause you to switch from
one task to another; it changes the mode in which you work.&lt;br/&gt;&lt;br/&gt;I find one meeting can sometimes affect a whole day.   A meeting
commonly blows at least half a day, by breaking up a morning or
afternoon.  But in addition there's sometimes a cascading effect.
If I know the afternoon is going to be broken up, I'm slightly less
likely to start something ambitious in the morning.  I know this
may sound oversensitive, but if you're a maker, think of your own
case.  Don't your spirits rise at the thought of having an entire
day free to work, with no appointments at all?  Well, that means
your spirits are correspondingly depressed when you don't.  And
ambitious projects are by definition close to the limits of your
capacity.  A small decrease in morale is enough to kill them off.&lt;br/&gt;&lt;br/&gt;Each type of schedule works fine by itself.  Problems arise when
they meet.  Since most powerful people operate on the manager's
schedule, they're in a position to make everyone resonate at their
frequency if they want to.  But the smarter ones restrain themselves,
if they know that some of the people working for them need long
chunks of time to work in.&lt;br/&gt;&lt;br/&gt;Our case is an unusual one.  Nearly all investors, including all
VCs I know, operate on the manager's schedule.  But 
&lt;a href="http://ycombinator.com"&gt;Y Combinator&lt;/a&gt;
runs on the maker's schedule.  Rtm and Trevor and I do because we
always have, and Jessica does too, mostly, because she's gotten
into sync with us.&lt;br/&gt;&lt;br/&gt;I wouldn't be surprised if there start to be more companies like
us.  I suspect founders may increasingly be able to resist, or at
least postpone, turning into managers, just as a few decades ago
they started to be able to resist switching from jeans
to suits.&lt;br/&gt;&lt;br/&gt;How do we manage to advise so many startups on the maker's schedule?
By using the classic device for simulating the manager's schedule
within the maker's: office hours.  Several times a week I set aside
a chunk of time to meet founders we've funded.  These chunks of
time are at the end of my working day, and I wrote a signup program
that ensures all the appointments within a given set of office hours
are clustered at the end.  Because they come at the end of my day
these meetings are never an interruption.  (Unless their working
day ends at the same time as mine, the meeting presumably interrupts
theirs, but since they made the appointment it must be worth it to
them.)  During busy periods, office hours sometimes get long enough
that they compress the day, but they never interrupt it.&lt;br/&gt;&lt;br/&gt;
When we were working on &lt;a href="https://paulgraham.com/start.html"&gt;&lt;font color="#000099"&gt;our own startup&lt;/font&gt;&lt;/a&gt;, back in the 90s, I evolved
another trick for partitioning the day.  I used to program from
dinner till about 3 am every day, because at night no one could
interrupt me.  Then I'd sleep till about 11 am, and come in and
work until dinner on what I called "business stuff."  I never thought
of it in these terms, but in effect I had two workdays each day,
one on the manager's schedule and one on the maker's.&lt;br/&gt;&lt;br/&gt;When you're operating on the manager's schedule you can do something
you'd never want to do on the maker's: you can have speculative
meetings.  You can meet someone just to get to know one another.
If you have an empty slot in your schedule, why not?  Maybe it will
turn out you can help one another in some way.&lt;br/&gt;&lt;br/&gt;Business people in Silicon Valley (and the whole world, for that
matter) have speculative meetings all the time.  They're effectively
free if you're on the manager's schedule.  They're so common that
there's distinctive language for proposing them: saying that you
want to "grab coffee," for example.&lt;br/&gt;&lt;br/&gt;Speculative meetings are terribly costly if you're on the maker's
schedule, though.  Which puts us in something of a bind.  Everyone
assumes that, like other investors, we run on the manager's schedule.
So they introduce us to someone they think we ought to meet, or
send us an email proposing we grab coffee.  At this point we have
two options, neither of them good: we can meet with them, and lose
half a day's work; or we can try to avoid meeting them, and probably
offend them.&lt;br/&gt;&lt;br/&gt;Till recently we weren't clear in our own minds about the source
of the problem.  We just took it for granted that we had to either
blow our schedules or offend people.  But now that I've realized
what's going on, perhaps there's a third option: to write something
explaining the two types of schedule.  Maybe eventually, if the
conflict between the manager's schedule and the maker's schedule
starts to be more widely understood, it will become less of a
problem.&lt;br/&gt;&lt;br/&gt;Those of us on the maker's schedule are willing to compromise.   We
know we have to have some number of meetings.  All we ask from those
on the manager's schedule is that they understand the cost.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Paul Buchheit, Jessica Livingston,
and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Related:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//makersschedule.html</guid>
      <pubDate>Wed, 01 Jul 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Local Revolution?</title>
      <link>https://paulgraham.com//revolution.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;Recently I realized I'd been holding two ideas in my head that would explode if combined.&lt;br/&gt;&lt;br/&gt;The first is that startups may represent a &lt;a href="https://paulgraham.com/highres.html"&gt;new economic phase&lt;/a&gt;, on the scale of the Industrial Revolution. I'm not sure of this, but there seems a decent chance it's true.  People are dramatically more 
productive as founders or early employees of startupsâ€”imagine how much less Larry and Sergey would &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;Recently I realized I'd been holding two ideas in my head that would explode if combined.&lt;br/&gt;&lt;br/&gt;The first is that startups may represent a &lt;a href="https://paulgraham.com/highres.html"&gt;new economic phase&lt;/a&gt;, on the scale of the Industrial Revolution. I'm not sure of this, but there seems a decent chance it's true.  People are dramatically more 
productive as founders or early employees of startupsâ€”imagine how much less Larry and Sergey would have achieved if they'd gone to work for a big companyâ€”and that scale of improvement can change social customs.&lt;br/&gt;&lt;br/&gt;The second idea is that startups are a type of business that flourishes in certain places that &lt;a href="https://paulgraham.com/startuphubs.html"&gt;specialize&lt;/a&gt; in itâ€”that Silicon Valley specializes in startups in the same way Los Angeles specializes in movies, or New York in finance. &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/revolution.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;What if both are true?  What if startups are both a new economic phase and also a type of business that only flourishes in certain centers?&lt;br/&gt;&lt;br/&gt;If so, this revolution is going to be particularly revolutionary. All previous revolutions have spread.  Agriculture, cities, and industrialization all spread widely. If startups end up being like the movie business, with just a handful of centers and one dominant one, that's going to have novel consequences.&lt;br/&gt;&lt;br/&gt;There are already signs that startups may not spread particularly well.  The spread of startups seems to be proceeding slower than the spread of the Industrial Revolution, despite the fact that communication is so much faster now.&lt;br/&gt;&lt;br/&gt;Within a few decades of the founding of Boulton &amp;amp; Watt there were steam engines scattered over northern Europe and North America.  Industrialization didn't spread much beyond those regions for a while. It only spread to places where there was a strong middle classâ€”countries where a private citizen could make a fortune without having it confiscated. Otherwise it wasn't worth investing in factories.  But in a country with a strong middle class it was easy for industrial techniques to take root.  An individual mine or factory owner could decide to install a steam engine, and within a few years he could probably find someone local to make him one.  So steam engines spread fast.  And they spread widely, because the locations of mines and factories were determined by features like rivers, harbors, and sources of raw materials. 
 &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/revolution.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Startups don't seem to spread so well, partly because they're more a social than a technical phenomenon, and partly because they're not tied to geography.  An individual European manufacturer could import industrial techniques and they'd work fine.  This doesn't seem to work so well with startups: you need a community of expertise, as you do in the movie business.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/revolution.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
 Plus there aren't the same forces driving startups to spread.  Once railroads or electric power grids were invented, every region had to have them.  An area without railroads or power was a rich potential market.  But this isn't true with startups.  There's no need for a Microsoft of France or Google of Germany.&lt;br/&gt;&lt;br/&gt;Governments may decide they want to encourage startups locally, but government policy can't call them into being the way a genuine need could.&lt;br/&gt;&lt;br/&gt;How will this all play out?  If I had to predict now, I'd say that startups will spread, but very slowly, because their spread will be driven not by government policies (which won't work) or by market need (which doesn't exist) but, to the extent that it happens at all, by the same random factors that have caused startup culture to spread thus far.  And such random factors will increasingly be outweighed by the pull of existing startup hubs.&lt;br/&gt;&lt;br/&gt;Silicon Valley is where it is because William Shockley wanted to move back to Palo Alto, where he grew up, and the experts he lured west to work with him liked it so much they stayed.  Seattle owes much of its position as a tech center to the same cause: Gates and Allen wanted to move home.  Otherwise Albuquerque might have Seattle's place in the rankings.  Boston is a tech center because it's the intellectual capital of the US and probably the world.  And if Battery Ventures hadn't turned down Facebook, Boston would be significantly bigger now on the startup radar screen.&lt;br/&gt;&lt;br/&gt;But of course it's not a coincidence that Facebook got funded in the Valley and not Boston.  There are more and bolder investors in Silicon Valley than in Boston, and even undergrads know it.&lt;br/&gt;&lt;br/&gt;Boston's case illustrates the difficulty you'd have establishing a new startup hub this late in the game.  If you wanted to create a startup hub by reproducing the way existing ones happened, the 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;way to do it&lt;/a&gt; would be to establish a first-rate research university in a place so nice that rich people wanted to live there.  Then the town would be hospitable to both groups you need: both founders and investors.  That's the combination that yielded Silicon Valley.  But Silicon Valley didn't have Silicon Valley to compete with.  If you tried now to create a startup hub by planting a great university in a nice place, it would have a harder time getting started, because many of the best startups it produced would be sucked away to existing startup hubs.&lt;br/&gt;&lt;br/&gt;Recently I suggested a potential shortcut: 
&lt;a href="https://paulgraham.com/maybe.html"&gt;pay startups to move&lt;/a&gt;.  Once you had enough good startups in one place, it would create a self-sustaining chain reaction.  Founders would start to move there without being paid, because that was where their peers were, and investors would appear too, because that was where the deals were.&lt;br/&gt;&lt;br/&gt;In practice I doubt any government would have the balls to try this, or the brains to do it right.  I didn't mean it as a practical suggestion, but more as an exploration of the lower bound of what it would take to create a startup hub deliberately.&lt;br/&gt;&lt;br/&gt;The most likely scenario is (1) that no government will successfully establish a startup hub, and (2) that the spread of startup culture will thus be driven by the random factors that have driven it so far, but (3) that these factors will be increasingly outweighed by the pull of existing startup hubs.  Result: this revolution, if it is one, will be unusually localized.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
There are two very different types of startup: one kind that evolves naturally, and one kind that's called into being to "commercialize" a scientific discovery.  Most computer/software startups are now the first type, and most pharmaceutical startups the second.  When I talk about startups in this essay, I mean type I startups.  There is no difficulty making type II startups spread: all you have to do is fund medical research labs; commercializing whatever new discoveries the boffins throw off is as straightforward as building a new airport.  Type II startups neither require nor produce startup culture. But that means having type II startups won't get you type I startups.  Philadelphia is a case in point: lots of type II startups, but hardly any type I.&lt;br/&gt;&lt;br/&gt;Incidentally, Google may appear to be an instance of a type II startup, but it wasn't.  Google is not pagerank commercialized.  They could have used another algorithm and everything would have turned out the same.  What made Google Google is that they cared about doing search well at a critical point in the evolution of the web.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
 Watt didn't invent the steam engine.  His critical invention was a refinement that made steam engines dramatically more efficient: the separate condenser.  But that oversimplifies his role.  He had such a different attitude to the problem and approached it with such energy that he transformed the field.  Perhaps the most accurate way to put it would be to say that Watt reinvented the steam engine.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
The biggest counterexample here is Skype.  If you're doing
something that would get shut down in the US, it becomes an 
advantage to be located elsewhere.  That's why Kazaa took
the place of Napster.  And the expertise and connections the 
founders gained from running Kazaa helped ensure the success
of Skype.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Patrick Collison, Jessica Livingston, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//revolution.html</guid>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Twitter is a Big Deal</title>
      <link>https://paulgraham.com//twitter.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;&lt;a href="http://gigaom.com/2009/04/03/google-may-buy-twitter-or-not-but-why-is-twitter-so-hot/"&gt;Om Malik&lt;/a&gt; is the most recent of many people
to ask why Twitter is such a big deal.&lt;br/&gt;&lt;br/&gt;The reason is that it's a new messaging 
protocol, where you don't specify the recipients.
New protocols are rare.  Or more precisely, new
protocols that take off are.
There are only a handful of commonly used ones: TCP/IP 
(the Internet), SMTP (email), HTTP &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;&lt;a href="http://gigaom.com/2009/04/03/google-may-buy-twitter-or-not-but-why-is-twitter-so-hot/"&gt;Om Malik&lt;/a&gt; is the most recent of many people
to ask why Twitter is such a big deal.&lt;br/&gt;&lt;br/&gt;The reason is that it's a new messaging 
protocol, where you don't specify the recipients.
New protocols are rare.  Or more precisely, new
protocols that take off are.
There are only a handful of commonly used ones: TCP/IP 
(the Internet), SMTP (email), HTTP (the web), and so on.  So any
new protocol is a big deal.  But Twitter is a protocol owned
by a private company.  That's even rarer.&lt;br/&gt;&lt;br/&gt;Curiously, the fact that the founders of Twitter 
have been slow to monetize it may in the long run
prove to be an advantage.  Because they haven't tried
to control it too much, Twitter feels to everyone like
previous protocols.  One forgets it's owned by a
private company.  That must have made it easier for
Twitter to spread.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//twitter.html</guid>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Founder Visa</title>
      <link>https://paulgraham.com//foundervisa.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;!-- &lt;tr&gt;&lt;td bgcolor=#cccc99&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif"
height=15 width=1&gt;&lt;font size=2&gt;
Watch how this essay was
written on
&lt;a href="http://etherpad.com/ep/pad/slider/foundervisa"&gt;Etherpad&lt;/a&gt;.
&lt;/font&gt;
&lt;br&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif" height=5 width=1&gt;&lt;/td
&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt; --&gt;
April 2009&lt;br/&gt;&lt;br/&gt;I usually avoid politics, but since we now seem to have an administration that&lt;/table&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;!-- &lt;tr&gt;&lt;td bgcolor=#cccc99&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif"
height=15 width=1&gt;&lt;font size=2&gt;
Watch how this essay was
written on
&lt;a href="http://etherpad.com/ep/pad/slider/foundervisa"&gt;Etherpad&lt;/a&gt;.
&lt;/font&gt;
&lt;br&gt;&lt;img src="http://www.virtumundo.com/images/spacer.gif" height=5 width=1&gt;&lt;/td
&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt; --&gt;
April 2009&lt;br/&gt;&lt;br/&gt;I usually avoid politics, but since we now seem to have an administration that's open to suggestions, I'm going to risk making one.  The single biggest thing the government could do to increase the number of startups in this country is a policy that would cost nothing: establish a new class of visa for startup founders.&lt;br/&gt;&lt;br/&gt;The biggest constraint on the number of new startups that get created in the US is not tax policy or employment law or even Sarbanes-Oxley.  It's that we won't let the people who want to start them into the country.&lt;br/&gt;&lt;br/&gt;Letting just 10,000 startup founders into the country each year could have a visible effect on the economy.  If we assume 4 people per startup, which is probably an overestimate, that's 2500 new companies.  &lt;i&gt;Each year.&lt;/i&gt;  They wouldn't all grow as big as Google, but out of 2500 some would come close.&lt;br/&gt;&lt;br/&gt;By definition these 10,000 founders wouldn't be taking jobs from Americans: it could be part of the terms of the visa that they couldn't work for existing companies, only new ones they'd founded.  In fact they'd cause there to be 
more jobs for Americans, because the companies they started would hire more employees as they grew.&lt;br/&gt;&lt;br/&gt;The tricky part might seem to be how one defined a startup. But that could be solved quite easily: let the market decide.  Startup investors work hard to find the best startups.  The government could not do better than to piggyback on their expertise, and use investment by recognized startup investors as the test of whether a company was a real startup.&lt;br/&gt;&lt;br/&gt;How would the government decide who's a startup investor?  The same way they decide what counts as a university for student visas. We'll establish our own accreditation procedure. We know who one another are.&lt;br/&gt;&lt;br/&gt;10,000 people is a drop in the bucket by immigration standards, but would represent a huge increase in the pool of startup founders.  I think this would have such a visible effect on the economy that it would make the legislator who introduced the bill famous.  The only way to know for sure would be to try it, and that would cost practically nothing.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Paul Buchheit, Jeff Clavier, David Hornik, Jessica Livingston, Greg Mcadoo, Aydin Senkut, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Related:&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;&lt;/table&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//foundervisa.html</guid>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Five Founders</title>
      <link>https://paulgraham.com//5founders.html</link>
      <description>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Inc&lt;/i&gt; recently asked me who I thought were the 5 most
interesting startup founders of the last 30 years.  How do
you decide who's the most interesting?  The best test seemed
to be influence: who are the 5
who've influenced me most?  Who do I use as examples when I'm
talking to companies we fund?  Who do I find myself quoting?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Steve Jobs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'd guess Steve is the most influential founder not just for me but
for most p&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;April 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Inc&lt;/i&gt; recently asked me who I thought were the 5 most
interesting startup founders of the last 30 years.  How do
you decide who's the most interesting?  The best test seemed
to be influence: who are the 5
who've influenced me most?  Who do I use as examples when I'm
talking to companies we fund?  Who do I find myself quoting?&lt;br/&gt;&lt;br/&gt;&lt;b&gt;1. Steve Jobs&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'd guess Steve is the most influential founder not just for me but
for most people you could ask.  A lot of startup culture is Apple
culture.  He was the original young founder.  And while the concept
of "insanely great" already existed in the arts, it was a novel
idea to introduce into a company in the 1980s.&lt;br/&gt;&lt;br/&gt;More remarkable still, he's stayed interesting for 30 years.  People
await new Apple products the way they'd await new books by a popular
novelist.  Steve may not literally design them, but they wouldn't
happen if he weren't CEO.&lt;br/&gt;&lt;br/&gt;Steve is clever and driven, but so are a lot of people in the Valley.
What makes him unique is his 
&lt;a href="https://paulgraham.com/taste.html"&gt;sense of 
design&lt;/a&gt;.  Before him, most
companies treated design as a frivolous extra.  Apple's competitors
now know better.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. TJ Rodgers&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;TJ Rodgers isn't as famous as Steve Jobs, but he may be the best
writer among Silicon Valley CEOs.  I've probably learned more from
him about the startup way of thinking than from anyone else.  Not
so much from specific things he's written as by reconstructing the
mind that produced them: brutally candid; aggressively garbage-collecting
outdated ideas; and yet driven by pragmatism rather than ideology.&lt;br/&gt;&lt;br/&gt;The first essay of his that I read was so electrifying that I
remember exactly where I was at the time.  It was 
&lt;a href="http://www.cypress.com/?rID=34993"&gt;High
Technology Innovation: Free Markets or Government Subsidies?&lt;/a&gt; and
I was downstairs in the Harvard Square T Station.  It felt as if
someone had flipped on a light switch inside my head.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Larry &amp;amp; Sergey&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'm sorry to treat Larry and Sergey as one person.  I've always
thought that was unfair to them.  But it does seem as if Google was a
collaboration.&lt;br/&gt;&lt;br/&gt;Before Google, companies in Silicon Valley already knew it was
important to have the best hackers.  So they claimed, at least.
But Google pushed this idea further than anyone had before.  Their
hypothesis seems to have been that, in the initial stages at least,
&lt;i&gt;all&lt;/i&gt; you need is good hackers: if you hire all the smartest people
and put them to work on a problem where their success can be measured,
you win.  All the other stuffâ€”which includes all the stuff that
business schools think business consists ofâ€”you can figure out
along the way.  The results won't be perfect, but they'll be optimal.
If this was their hypothesis, it's now been verified experimentally.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Paul Buchheit&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Few know this, but one person, Paul Buchheit, is responsible for
three of the best things Google has done.  He was the original
author of GMail, which is the most impressive thing Google has after
search.  He also wrote the first prototype of AdSense, and was the
author of Google's mantra "Don't be evil."&lt;br/&gt;&lt;br/&gt;PB made a point in a talk once that I now mention to every startup
we fund: that it's better, initially, to make a small number of
users really love you than a large number kind of like you.   If I
could tell startups only 
&lt;a href="https://paulgraham.com/13sentences.html"&gt;ten sentences&lt;/a&gt;, 
this would be one of them.&lt;br/&gt;&lt;br/&gt;Now he's cofounder of a startup called Friendfeed.  It's only a
year old, but already everyone in the Valley is watching them.
Someone responsible for three of the biggest ideas at Google is
going to come up with more.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Sam Altman&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I was told I shouldn't mention founders of YC-funded companies in
this list.   But Sam Altman can't be stopped by such flimsy rules.
If he wants to be on this list, he's going to be.&lt;br/&gt;&lt;br/&gt;Honestly, Sam is, along with Steve Jobs, the founder I refer to
most when I'm advising startups.  On questions of design, I ask
"What would Steve do?" but on questions of strategy or ambition I
ask "What would Sama do?"&lt;br/&gt;&lt;br/&gt;What I learned from meeting Sama is that the doctrine of the elect
applies to startups.  It applies way less than most people think:
startup investing does not consist of trying to pick winners the
way you might in a horse race.  But there are a few people with
such force of will that they're going to get whatever they want.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//5founders.html</guid>
      <pubDate>Wed, 01 Apr 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Relentlessly Resourceful</title>
      <link>https://paulgraham.com//relres.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by&#13;
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.&#13;
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;&#13;
March 2009&lt;br/&gt;&lt;br/&gt;A couple days ago I finally got being a good startup founder down&#13;
t&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by&#13;
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.&#13;
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;&#13;
March 2009&lt;br/&gt;&lt;br/&gt;A couple days ago I finally got being a good startup founder down&#13;
to two words:  relentlessly resourceful.&lt;br&gt;&lt;br/&gt;Till then the best I'd managed was to get the opposite quality down&#13;
to one: hapless.  Most dictionaries say hapless means unlucky.  But&#13;
the dictionaries are not doing a very good job.  A team that outplays&#13;
its opponents but loses because of a bad decision by the referee&#13;
could be called unlucky, but not hapless.  Hapless implies passivity.&#13;
To be hapless is to be battered by circumstances â€” to let the world&#13;
have its way with you, instead of having your way with the world.&#13;
&lt;!--Unlucky is a bad synonym, because it emphasizes the role of chance&#13;
in bad outcomes.  Hapless overlaps more with the other component&#13;
of bad outcomes, the half that makes them deserved. --&gt;
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/relres.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Unfortunately there's no antonym of hapless, which makes it difficult&#13;
to tell founders what to aim for.  "Don't be hapless" is not much&#13;
of a rallying cry.&lt;br/&gt;&lt;br/&gt;It's not hard to express the quality we're looking for in metaphors.&#13;
The best is probably a running back.  A good running back is not&#13;
merely determined, but flexible as well.  They want to get downfield,&#13;
but they adapt their plans on the fly.&lt;br/&gt;&lt;br/&gt;Unfortunately this is just a metaphor, and not a useful one to most&#13;
people outside the US.   "Be like a running back" is no better than&#13;
"Don't be hapless."&lt;br/&gt;&lt;br/&gt;But finally I've figured out how to express this quality directly.&#13;
I was writing a talk for &#13;
&lt;a href="https://paulgraham.com/angelinvesting.html"&gt;investors&lt;/a&gt;, and I had to explain what to&#13;
look for in founders.  What would someone who was the opposite of&#13;
hapless be like?  They'd be relentlessly resourceful.  Not merely&#13;
relentless.  That's not enough to make things go your way except&#13;
in a few mostly uninteresting domains.  In any interesting domain,&#13;
the difficulties will be novel.  Which means you can't simply plow&#13;
through them, because you don't know initially how hard they are;&#13;
you don't know whether you're about to plow through a block of foam&#13;
or granite.  So you have to be resourceful. You have to keep&#13;
trying new things.&lt;br/&gt;&lt;br/&gt;Be relentlessly resourceful.&lt;br/&gt;&lt;br/&gt;That sounds right, but is it simply a description&#13;
of how to be successful in general?  I don't think so.  This isn't&#13;
the recipe for success in writing or painting, for example.  In&#13;
that kind of work the recipe is more to be actively curious.&#13;
Resourceful implies the obstacles are external, which they generally&#13;
are in startups. But in writing and painting they're mostly internal;&#13;
the obstacle is your own obtuseness.&#13;
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/relres.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;There probably are other fields where "relentlessly resourceful"&#13;
is the recipe for success.  But though other fields may share it,&#13;
I think this is the best short description we'll find of what makes&#13;
a good startup founder.  I doubt it could be made more precise.&lt;br/&gt;&lt;br/&gt;Now that we know what we're looking for, that leads to other&#13;
questions.  For example, can this quality be taught?  After four&#13;
years of trying to teach it to people, I'd say that yes, surprisingly&#13;
often it can.  Not to everyone, but to many people. &#13;
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/relres.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&#13;
Some&#13;
people are just constitutionally passive, but others have a latent&#13;
ability to be relentlessly resourceful that only needs to be brought&#13;
out.&lt;br/&gt;&lt;br/&gt;This is particularly true of young people who have till now always&#13;
been under the thumb of some kind of authority.  Being relentlessly&#13;
resourceful is definitely not the recipe for success in big companies,&#13;
or in most schools.  I don't even want to think what the recipe is&#13;
in big companies, but it is certainly longer and messier, involving&#13;
some combination of resourcefulness, obedience, and building&#13;
alliances.&lt;br/&gt;&lt;br/&gt;Identifying this quality also brings us closer to answering a&#13;
question people often wonder about: how many startups there could&#13;
be.  There is not, as some people seem to think, any economic upper&#13;
bound on this number.  There's no reason to believe there is any&#13;
limit on the amount of newly created wealth consumers can absorb,&#13;
any more than there is a limit on the number of theorems that can&#13;
be proven.  So probably the limiting factor on the number of startups&#13;
is the pool of potential founders.  Some people would make good&#13;
founders, and others wouldn't.  And now that we can say what makes&#13;
a good founder, we know how to put an upper bound on the size of&#13;
the pool.&lt;br/&gt;&lt;br/&gt;This test is also useful to individuals.  If you want to know whether&#13;
you're the right sort of person to start a startup, ask yourself&#13;
whether you're relentlessly resourceful.  And if you want to know&#13;
whether to recruit someone as a cofounder, ask if they are.&lt;br/&gt;&lt;br/&gt;You can even use it tactically.  If I were running a startup, this&#13;
would be the phrase I'd tape to the mirror.  "Make something people&#13;
want" is the destination, but "Be relentlessly resourceful" is how&#13;
you get there.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]&#13;
I think the reason the dictionaries are wrong is that the&#13;
meaning of the word has shifted.  No one writing a dictionary from&#13;
scratch today would say that hapless meant unlucky.  But a couple&#13;
hundred years ago they might have.  People were more at the mercy&#13;
of circumstances in the past, and as a result a lot of the words&#13;
we use for good and bad outcomes have origins in words about luck.&lt;br/&gt;&lt;br/&gt;When I was living in Italy, I was once trying to tell someone&#13;
that I hadn't had much success in doing something, but I couldn't&#13;
think of the Italian word for success.  I spent some time trying&#13;
to describe the word I meant.  Finally she said "Ah! Fortuna!"&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]&#13;
There are aspects of startups where the recipe is to be&#13;
actively curious.  There can be times when what you're doing is&#13;
almost pure discovery.  Unfortunately these times are a small&#13;
proportion of the whole.  On the other hand, they are in research&#13;
too.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]&#13;
I'd almost say to most people, but I realize (a) I have no&#13;
idea what most people are like, and (b) I'm pathologically optimistic&#13;
about people's ability to change.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell and Jessica Livingston for reading drafts&#13;
of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//relres.html</guid>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How to Be an Angel Investor</title>
      <link>https://paulgraham.com//angelinvesting.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at &lt;a href="http://angelconf.org"&gt;AngelConf&lt;/a&gt;.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I thought one day I'd do some angel
investing.  Seven years later I still hadn't started.  I put it off
because it seemed mysterious and complicated.   It turns out to be 
easier than I expected, and also more interesting.&lt;br/&gt;&lt;br/&gt;The part I thought was hard, the mechanics of investing, really
isn't. You give a st&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2009&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(This essay is derived from a talk at &lt;a href="http://angelconf.org"&gt;AngelConf&lt;/a&gt;.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;When we sold our startup in 1998 I thought one day I'd do some angel
investing.  Seven years later I still hadn't started.  I put it off
because it seemed mysterious and complicated.   It turns out to be 
easier than I expected, and also more interesting.&lt;br/&gt;&lt;br/&gt;The part I thought was hard, the mechanics of investing, really
isn't. You give a startup money and they give you stock.  You'll
probably get either preferred stock, which means stock with extra
rights like getting your money back first in a sale, or convertible
debt, which means (on paper) you're lending the company money, and
the debt converts to stock at the next sufficiently big funding
round. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;There are sometimes minor tactical advantages to using one or the
other.  The paperwork for convertible debt is simpler.  But really
it doesn't matter much which you use.  Don't spend much time worrying
about the details of deal terms, especially when you first start
angel investing.  That's not how you win at this game.  When you
hear people talking about a successful angel investor, they're not
saying "He got a 4x liquidation preference." They're saying "He
invested in Google."&lt;br/&gt;&lt;br/&gt;That's how you win: by investing in the right startups.  That is
so much more important than anything else that I worry I'm misleading
you by even talking about other things.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Mechanics&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Angel investors often syndicate deals, which means they join together
to invest on the same terms.  In a syndicate there is usually a
"lead" investor who negotiates the terms with the startup.  But not
always: sometimes the startup cobbles together a syndicate of
investors who approach them independently, and the startup's lawyer
supplies the paperwork.&lt;br/&gt;&lt;br/&gt;The easiest way to get started in angel investing is to find a
friend who already does it, and try to get included in his syndicates.
Then all you have to do is write checks.&lt;br/&gt;&lt;br/&gt;Don't feel like you have to join a syndicate, though.  It's not that
hard to do it yourself.  You can just use the standard 
&lt;a href="http://ycombinator.com/seriesaa.html"&gt;series AA&lt;/a&gt;
documents Wilson Sonsini and Y Combinator published online.
You should of course have your lawyer review everything.  Both you
and the startup should have lawyers.  But the lawyers don't have
to create the agreement from scratch.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
When you negotiate terms with a startup, there are two numbers you
care about: how much money you're putting in, and the valuation of
the company.  The valuation determines how much stock you get.  If
you put $50,000 into a company at a pre-money valuation of $1
million, then the post-money valuation is $1.05 million, and you
get .05/1.05, or 4.76% of the company's stock.&lt;br/&gt;&lt;br/&gt;If the company raises more money later, the new investor will take
a chunk of the company away from all the existing shareholders just
as you did.  If in the next round they sell 10% of the company to
a new investor, your 4.76% will be reduced to 4.28%.&lt;br/&gt;&lt;br/&gt;That's ok.  Dilution is normal.  What saves you from being mistreated
in future rounds, usually, is that you're in the same boat as the
founders.  They can't dilute you without diluting themselves just
as much.  And they won't dilute themselves unless they end up 
&lt;a href="https://paulgraham.com/equity.html"&gt;net ahead&lt;/a&gt;.  So in theory, each further 
round of investment leaves you
with a smaller share of an even more valuable company, till after
several more rounds you end up with .5% of the company at the point
where it IPOs, and you are very happy because your $50,000 has
become $5 million. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The agreement by which you invest should have provisions that 
let you contribute to
future rounds to maintain your percentage.  So it's your choice
whether you get diluted.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
If the company does really well,
you eventually will, because eventually the valuations will get so
high it's not worth it for you.&lt;br/&gt;&lt;br/&gt;How much does an angel invest?  That varies enormously, from $10,000
to hundreds of thousands or in rare cases even millions.  The upper
bound is obviously the total amount the founders want to raise.
The lower bound is 5-10% of the total or $10,000, whichever
is greater.  A typical angel round these days might be $150,000
raised from 5 people.&lt;br/&gt;&lt;br/&gt;Valuations don't vary as much.  For angel rounds it's rare to see
a valuation lower than half a million or higher than 4 or 5 million.
4 million is starting to be VC territory.&lt;br/&gt;&lt;br/&gt;How do you decide what valuation to offer?  If you're part of a
round led by someone else, that problem is solved for you.  But
what if you're investing by yourself?  There's no real answer.
There is no rational way to value an early stage startup.  The
valuation reflects nothing more than the strength of the company's
bargaining position.  If they really want you, either because they
desperately need money, or you're someone who can help them a lot,
they'll let you invest at a low valuation.  If they don't need you,
it will be higher.  So guess.  The startup may not have any more
idea what the number should be than you do. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Ultimately it doesn't matter much.  When angels make a lot of money
from a deal, it's not because they invested at a valuation of $1.5
million instead of $3 million.  It's because the company was really
successful.&lt;br/&gt;&lt;br/&gt;I can't emphasize that too much.  Don't get hung up on mechanics
or deal terms.  What you should spend your time thinking about is
whether the company is good.&lt;br/&gt;&lt;br/&gt;(Similarly, founders also should not get hung up on deal
terms, but should spend their time thinking about how to make the
company good.)&lt;br/&gt;&lt;br/&gt;There's a second less obvious component of an angel investment: how
much you're expected to help the startup.  Like the amount you
invest, this can vary a lot.  You don't have to do anything if you
don't want to; you could simply be a source of money.  Or you can
become a de facto employee of the company.  Just make sure that you
and the startup agree in advance about roughly how much you'll do
for them.&lt;br/&gt;&lt;br/&gt;Really hot companies sometimes have high standards for angels.  The
ones everyone wants to invest in practically audition investors,
and only take money from people who are famous and/or will work
hard for them.  But don't feel like you have to put in a lot of
time or you won't get to invest in any good startups.  There is a
surprising lack of correlation between how hot a deal a startup is
and how well it ends up doing.  Lots of hot startups will end up
failing, and lots of startups no one likes will end up succeeding.
And the latter are so desperate for money that they'll take it from
anyone at a low valuation. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Picking Winners&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It would be nice to be able to pick those out, wouldn't it?  The
part of angel investing that has most effect on your returns, picking
the right companies, is also the hardest.  So you should practically
ignore (or more precisely, archive, in the Gmail sense) everything
I've told you so far.  You may need to refer to it at some point,
but it is not the central issue.&lt;br/&gt;&lt;br/&gt;The central issue is picking the right startups.  What "Make something
people want" is for startups, "Pick the right startups" is for
investors.  Combined they yield "Pick the startups that will make
something people want."&lt;br/&gt;&lt;br/&gt;How do you do that?  It's not as simple as picking startups that
are already making something wildly popular.  By then it's
too late for angels.  VCs will already be onto them.  As an angel,
you have to pick startups before they've got a hitâ€”either
because they've made something great but users don't realize it
yet, like Google early on, or because they're still an iteration
or two away from the big hit, like Paypal when they were making
software for transferring money between PDAs.&lt;br/&gt;&lt;br/&gt;To be a good angel investor, you have to be a good judge of potential.
That's what it comes down to.  VCs can be fast followers.  Most of
them don't try to predict what will win.  They just try to notice
quickly when something already is winning.  But angels have to be
able to predict.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;One interesting consequence of this fact is that there are a lot
of people out there who have never even made an angel investment
and yet are already better angel investors than they realize.
Someone who doesn't know the first thing about the mechanics of
venture funding but knows what a successful startup founder looks
like is actually far ahead of someone who knows termsheets inside
out, but thinks 
&lt;a href="https://paulgraham.com/gba.html"&gt;"hacker"&lt;/a&gt; means someone who breaks into computers.
If you can recognize good startup founders by empathizing with
themâ€”if you both resonate at the same frequencyâ€”then
you may already be a better startup picker than the median professional
VC.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f8n"&gt;&lt;font color="#999999"&gt;8&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Paul Buchheit, for example, started angel investing about a year
after me, and he was pretty much immediately as good as me at picking
startups.  My extra year of experience was rounding error compared
to our ability to empathize with founders.&lt;br/&gt;&lt;br/&gt;What makes a good founder?  If there were a word that meant the
opposite of hapless, that would be the one.  Bad founders seem
hapless.  They may be smart, or not, but somehow events overwhelm
them and they get discouraged and give up.  Good founders make
things happen the way they want.  Which is not to say they force
things to happen in a predefined way.  Good founders have a healthy
respect for reality.  But they are relentlessly resourceful.  That's
the closest I can get to the opposite of hapless.  You want to fund
people who are relentlessly resourceful.&lt;br/&gt;&lt;br/&gt;Notice we started out talking about things, and now we're talking
about people.  There is an ongoing debate between investors which
is more important, the people, or the ideaâ€”or more precisely,
the market. Some, like Ron Conway, say it's the peopleâ€”that
the idea will change, but the people are the foundation of the
company.  Whereas Marc Andreessen says he'd back ok founders in a
hot market over great founders in a bad one.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f9n"&gt;&lt;font color="#999999"&gt;9&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;These two positions are not so far apart as they seem, because good
people find good markets.  Bill Gates would probably have ended up
pretty rich even if IBM hadn't happened to drop the PC standard in
his lap.&lt;br/&gt;&lt;br/&gt;I've thought a lot about the disagreement between the investors who
prefer to bet on people and those who prefer to bet on markets.
It's kind of surprising that it even exists.  You'd expect opinions
to have converged more.&lt;br/&gt;&lt;br/&gt;But I think I've figured out what's going on.  The three most
prominent people I know who favor markets are Marc, Jawed Karim,
and Joe Kraus.  And all three of them, in their own startups,
basically flew into a thermal: they hit a market growing so fast
that it was all they could do to keep up with it.  That kind of
experience is hard to ignore.  Plus I think they underestimate
themselves: they think back to how easy it felt to ride that huge
thermal upward, and they think "anyone could have done it."  But
that isn't true; they are not ordinary people.&lt;br/&gt;&lt;br/&gt;So as an angel investor I think you want to go with Ron Conway and
bet on people.  Thermals happen, yes, but no one can predict
themâ€”not even the founders, and certainly not you as an
investor.  And only good people can ride the thermals if they hit
them anyway.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Deal Flow&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Of course the question of how to choose startups presumes you
have startups to choose between.  How do you find them?  This is
yet another problem that gets solved for you by syndicates.  If you
tag along on a friend's investments, you don't have to find startups.&lt;br/&gt;&lt;br/&gt;The problem is not finding startups, exactly, but finding a stream
of reasonably high quality ones.  The traditional way to do this
is through contacts.  If you're friends with a lot of investors and
founders, they'll send deals your way.  The Valley basically runs
on referrals.  And once you start to become known as reliable,
useful investor, people will refer lots of deals to you.  I certainly
will.&lt;br/&gt;&lt;br/&gt;There's also a newer way to find startups, which is to come to
events like Y Combinator's Demo Day, where a batch of newly created
startups presents to investors all at once.   We have two Demo Days
a year, one in March and one in August.  These are basically mass
referrals.&lt;br/&gt;&lt;br/&gt;But events like Demo Day only account for a fraction of matches
between startups and investors.  The personal referral is still the
most common route.  So if you want to hear about new startups, the
best way to do it is to get lots of referrals.&lt;br/&gt;&lt;br/&gt;The best way to get lots of referrals is to invest in startups.  No
matter how smart and nice you seem, insiders will be reluctant to
send you referrals until you've proven yourself by doing a couple
investments.  Some smart, nice guys turn out to be flaky,
high-maintenance investors. But once you prove yourself as a good
investor, the deal flow, as they call it, will increase rapidly in
both quality and quantity.  At the extreme, for someone like Ron
Conway, it is basically identical with the deal flow of the whole
Valley.&lt;br/&gt;&lt;br/&gt;So if you want to invest seriously, the way to get started is to
bootstrap yourself off your existing connections, be a good investor
in the startups you meet that way, and eventually you'll start a
chain reaction.  Good investors are rare, even in Silicon Valley.
There probably aren't more than a couple hundred serious angels in the whole
Valley, and yet they're probably the single most important ingredient
in making the Valley what it is.  Angels are the limiting reagent
in startup formation.&lt;br/&gt;&lt;br/&gt;If there are only a couple hundred serious angels in the Valley, 
then by deciding to become one you could single-handedly make the pipeline
for startups in Silicon Valley significantly wider.  That is kind
of mind-blowing.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Being Good&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;How do you be a good angel investor?  The first thing you need is
to be decisive.  When we talk to founders about good and bad
investors, one of the ways we describe the good ones is to say "he
writes checks." That doesn't mean the investor says yes to everyone.
Far from it.  It means he makes up his mind quickly,
and follows through.  You may be thinking, how hard could that be?
You'll see when you try it.  It follows from the nature of angel
investing that the decisions are hard.  You have to guess early,
at the stage when the most promising ideas still seem counterintuitive,
because if they were obviously good, VCs would already have funded
them.&lt;br/&gt;&lt;br/&gt;Suppose it's 1998.  You come across a startup founded by a couple
grad students.  They say they're going to work on Internet search.
There are already a bunch of big public companies doing search.
How can these grad students possibly compete with them?  And does
search even matter anyway?  All the search engines are trying to
get people to start calling them "portals" instead.  Why would you
want to invest in a startup run by a couple of nobodies who are
trying to compete with large, aggressive companies in an area they
themselves have declared passe?  And yet the grad students seem
pretty smart.  What do you do?&lt;br/&gt;&lt;br/&gt;There's a hack for being decisive when you're inexperienced: ratchet
down the size of your investment till it's an amount you wouldn't
care too much about losing.  For every rich person (you probably
shouldn't try angel investing unless you think of yourself as rich)
there's some amount that would be painless, though annoying, to
lose.  Till you feel comfortable investing, don't invest more than
that per startup.&lt;br/&gt;&lt;br/&gt;For example, if you have $5 million in investable assets, it would
probably be painless (though annoying) to lose $15,000.  That's
less than .3% of your net worth.  So start by making 3 or 4 $15,000
investments.  Nothing will teach you about angel investing like
experience.  Treat the first few as an educational expense.  $60,000
is less than a lot of graduate programs.  Plus you get equity.&lt;br/&gt;&lt;br/&gt;What's really uncool is to be strategically indecisive: to string
founders along while trying to gather more information about the
startup's trajectory. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/angelinvesting.html#f10n"&gt;&lt;font color="#999999"&gt;10&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
 There's always a temptation to do that,
because you just have so little to go on, but you have to consciously
resist it.  In the long term it's to your advantage to be good.&lt;br/&gt;&lt;br/&gt;The other component of being a good angel investor is simply to be
a good person.  Angel investing is not a business where you make
money by screwing people over.  Startups create wealth, and
creating wealth is not a zero sum game.  No one has to lose for you
to win.  In fact, if you mistreat the founders you invest in, they'll
just get demoralized and the company will do worse.  Plus your
referrals will dry up.  So I recommend being good.&lt;br/&gt;&lt;br/&gt;The most successful angel investors I know are all basically good
people.  Once they invest in a company, all they want to do is help
it.  And they'll help people they haven't invested in too.  When
they do favors they don't seem to keep track of them.  It's too
much overhead.  They just try to help everyone, and assume good
things will flow back to them somehow. Empirically that seems to
work.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Convertible debt can be either capped at a particular valuation,
or can be done at a discount to whatever the valuation turns out
to be when it converts.  E.g. convertible debt at a discount of 30%
means when it converts you get stock as if you'd invested at a 30%
lower valuation.  That can be useful in cases where you can't or
don't want to figure out what the valuation should be.  You leave
it to the next investor.  On the other hand, a lot of investors
want to know exactly what they're getting, so they will only do
convertible debt with a cap.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
The expensive part of creating an agreement from scratch is
not writing the agreement, but bickering at several hundred
dollars an hour over the details.  That's why the series AA paperwork
aims at a middle ground.  You can just start from the compromise
you'd have reached after lots of back and forth.&lt;br/&gt;&lt;br/&gt;When you fund a startup, both your lawyers should be specialists
in startups.  Do not use ordinary corporate lawyers for this.  Their
inexperience makes them overbuild: they'll create huge, overcomplicated
agreements, and spend hours arguing over irrelevant things.&lt;br/&gt;&lt;br/&gt;In the Valley, the top startup law firms are Wilson Sonsini, Orrick,
Fenwick &amp;amp; West, Gunderson Dettmer, and Cooley Godward.  In Boston
the best are Goodwin Procter, Wilmer Hale, and Foley Hoag.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Your mileage may vary.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
These anti-dilution provisions also protect you against
tricks like a later investor trying to steal the company by doing
another round that values the company at $1.  If you have a competent
startup lawyer handle the deal for you, you should be protected
against such tricks initially.  But it could become a problem later.
If a big VC firm wants to invest in the startup after you, they may
try to make you take out your anti-dilution protections.  And if
they do the startup will be pressuring you to agree.  They'll tell
you that if you don't, you're going to kill their deal with the VC.
I recommend you solve this problem by having a gentlemen's agreement
with the founders: agree with them in advance that you're not going
to give up your anti-dilution protections.  Then it's up to them
to tell VCs early on.&lt;br/&gt;&lt;br/&gt;The reason you don't want to give them up is the following scenario.
The VCs recapitalize the company, meaning they give it additional
funding at a pre-money valuation of zero.  This wipes out the
existing shareholders, including both you and the founders.  They
then grant the founders lots of options, because they need them to
stay around, but you get nothing.&lt;br/&gt;&lt;br/&gt;Obviously this is not a nice thing to do.  It doesn't happen often.
Brand-name VCs wouldn't recapitalize a company just to steal a few
percent from an angel.  But there's a continuum here.  A less
upstanding, lower-tier VC might be tempted to do it to steal a big
chunk of stock.&lt;br/&gt;&lt;br/&gt;I'm not saying you should always absolutely refuse to give up your
anti-dilution protections.  Everything is a negotiation.  If you're
part of a powerful syndicate, you might be able to give up legal
protections and rely on social ones.  If you invest in a deal led
by a big angel like Ron Conway, for example, you're pretty well
protected against being mistreated, because any VC would think twice
before crossing him.  This kind of protection is one of the reasons
angels like to invest in syndicates.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
Don't invest so much, or at such a low valuation, that you
end up with an excessively large share of a startup, unless you're
sure your money will be the last they ever need.  Later stage
investors won't invest in a company if the founders don't have
enough equity left to motivate them.  I talked to a VC recently who
said he'd met with a company he really liked, but he turned
them down because investors already owned more than half of it.
Those investors probably thought they'd been pretty clever by getting
such a large chunk of this desirable company, but in fact they were
shooting themselves in the foot.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
At any given time I know of at least 3 or 4 YC alumni who I
believe will be big successes but who are running on vapor,
financially, because investors don't yet get what they're doing.
(And no, unfortunately, I can't tell you who they are.  I can't
refer a startup to an investor I don't know.)&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
There are some VCs who can predict instead of reacting.  Not
surprisingly, these are the most successful ones.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f8n"&gt;&lt;font color="#000000"&gt;8&lt;/font&gt;&lt;/a&gt;]
It's somewhat sneaky of me to put it this way, because the
median VC loses money.  That's one of the most surprising things
I've learned about VC while working on Y Combinator.  Only a fraction
of VCs even have positive returns.  The rest exist to satisfy demand
among fund managers for venture capital as an asset class.  Learning
this explained a lot about some of the VCs I encountered when we
were working on Viaweb.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f9n"&gt;&lt;font color="#000000"&gt;9&lt;/font&gt;&lt;/a&gt;]
VCs also generally say they prefer great markets to great
people.  But what they're really saying is they want both.  They're
so selective that they only even consider great people.  So when
they say they care above all about big markets, they mean that's
how they choose between great people.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f10n"&gt;&lt;font color="#000000"&gt;10&lt;/font&gt;&lt;/a&gt;]
Founders rightly dislike the sort of investor who says he's
interested in investing but doesn't want to lead.  There are
circumstances where this is an acceptable excuse, but more often
than not what it means is "No, but if you turn out to be a hot deal,
I want to be able to claim retroactively I said yes."&lt;br/&gt;&lt;br/&gt;If you like a startup enough to invest in it, then invest in it.
Just use the standard &lt;a href="http://ycombinator.com/seriesaa.html"&gt;series 
AA&lt;/a&gt; terms and write them a check.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Paul Buchheit, Jessica Livingston,
Robert Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/item?id=506671"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//angelinvesting.html</guid>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why TV Lost</title>
      <link>https://paulgraham.com//convergence.html</link>
      <description>&lt;font face="verdana" size="2"&gt;March 2009&lt;br/&gt;&lt;br/&gt;About twenty years ago people noticed computers and TV were on a
collision course and started to speculate about what they'd produce
when they converged.  We now know the answer: computers.  It's clear
now that even by using the word "convergence" we were giving TV too
much credit.  This won't be convergence so much as replacement.
People may still watch things they call "TV shows," but they'll
watch them mostly on computers.&lt;br/&gt;&lt;br/&gt;What decide&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;March 2009&lt;br/&gt;&lt;br/&gt;About twenty years ago people noticed computers and TV were on a
collision course and started to speculate about what they'd produce
when they converged.  We now know the answer: computers.  It's clear
now that even by using the word "convergence" we were giving TV too
much credit.  This won't be convergence so much as replacement.
People may still watch things they call "TV shows," but they'll
watch them mostly on computers.&lt;br/&gt;&lt;br/&gt;What decided the contest for computers?  Four forces, three of which
one could have predicted, and one that would have been harder to.&lt;br/&gt;&lt;br/&gt;One predictable cause of victory is that the Internet is an open
platform.  Anyone can build whatever they want on it, and the market
picks the winners.  So innovation happens at hacker speeds instead
of big company speeds.&lt;br/&gt;&lt;br/&gt;The second is Moore's Law, which has worked its usual magic on
Internet bandwidth. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convergence.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The third reason computers won is piracy. Users prefer it 
not just because it's free, but because it's
more convenient.  Bittorrent and YouTube have already trained a new
generation of viewers that the place to watch shows is on a computer
screen.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convergence.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The somewhat more surprising force was one specific type of innovation:
social applications.  The average teenage kid has a pretty much
infinite capacity for talking to their friends.  But they can't
physically be with them all the time.  When I was in high school
the solution was the telephone.  Now it's social networks, multiplayer
games, and various messaging applications.  The way you reach them
all is through a computer.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convergence.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Which means every teenage kid (a)
wants a computer with an Internet connection, (b) has an incentive
to figure out how to use it, and (c) spends countless hours in front
of it.&lt;br/&gt;&lt;br/&gt;This was the most powerful force of all.  This was what made everyone
want computers.  Nerds got computers because they liked them.  Then
gamers got them to play games on.  But it was connecting to other
people that got everyone else: that's what made even grandmas and
14 year old girls want computers.
&lt;!--
Computers still aren't really ready for prime time.  I'm pretty
comfortable with technology, but I would be horrified at the prospect
of having to deal with the virus-ridden Windows machine the average
person uses.  I can't believe they put up with it.  But they will
to reach their friends.--&gt;&lt;br/&gt;&lt;br/&gt;After decades of running an IV drip right into their audience,
people in the entertainment business had understandably come to
think of them as rather passive.  They thought they'd be able to
dictate the way shows reached audiences.  But they underestimated
the force of their desire to connect with one another.&lt;br/&gt;&lt;br/&gt;Facebook killed TV.  That is wildly oversimplified, of course, but
probably as close to the truth as you can get in three words.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;The TV networks already seem, grudgingly, to see where things are
going, and have responded by putting their stuff, grudgingly, online.
But they're still dragging their heels.  They still seem to wish
people would watch shows on TV instead, just as newspapers that put
their stories online still seem to wish people would wait till the
next morning and read them printed on paper.  They should both just
face the fact that the Internet is the primary medium.&lt;br/&gt;&lt;br/&gt;They'd be in a better position if they'd done that earlier.  When
a new medium arises that's powerful enough to make incumbents
nervous, then it's probably powerful enough to win, and the best
thing they can do is jump in immediately.&lt;br/&gt;&lt;br/&gt;Whether they like it or not, big changes are coming, because the
Internet dissolves the two cornerstones of broadcast media:
synchronicity and locality.  On the Internet, you don't have to
send everyone the same signal, and you don't have to send it to
them from a local source.  People will watch what they want when
they want it, and group themselves according to whatever shared
interest they feel most strongly.  Maybe their strongest shared
interest will be their physical location, but I'm guessing not.
Which means local TV is probably dead.  It was an artifact of
limitations imposed by old technology.  If someone were creating
an Internet-based TV company from scratch now, they might have some
plan for shows aimed at specific regions, but it wouldn't be a top
priority.&lt;br/&gt;&lt;br/&gt;Synchronicity and locality are tied together.  TV network affiliates
care what's on at 10 because that delivers viewers for local news
at 11.  This connection adds more brittleness than strength, however:
people don't watch what's on at 10 because they want to watch the
news afterward.&lt;br/&gt;&lt;br/&gt;TV networks will fight these trends, because they don't have
sufficient flexibility to adapt to them.  They're hemmed in by local
affiliates in much the same way car companies are hemmed in by
dealers and unions.  Inevitably, the people running the networks
will take the easy route and try to keep the old model running for
a couple more years, just as the record labels have done.&lt;br/&gt;&lt;br/&gt;A recent article in the &lt;i&gt;Wall Street Journal&lt;/i&gt; described how TV networks
were trying to add more live shows, partly as a way to make viewers
watch TV synchronously instead of watching recorded shows when it
suited them.  Instead of delivering what viewers want, they're
trying to force them to change their habits to suit the networks'
obsolete business model.  That never works unless you have a monopoly
or cartel to enforce it, and even then it only works temporarily.&lt;br/&gt;&lt;br/&gt;The other reason networks like live shows is that they're cheaper
to produce.  There they have the right idea, but they haven't
followed it to its conclusion.   Live content can be way cheaper
than networks realize, and the way to take advantage of dramatic
decreases in cost is to 
&lt;a href="http://justin.tv"&gt;increase volume&lt;/a&gt;.  The networks are prevented
from seeing this whole line of reasoning because they still think
of themselves as being in the broadcast businessâ€”as sending one
signal to everyone.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/convergence.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;&lt;a href="https://paulgraham.com/badeconomy.html"&gt;Now&lt;/a&gt; would be a good time to start any company that competes with
TV networks.  That's what a lot of Internet startups are, though
they may not have had this as an explicit goal.  People only have
so many leisure hours a day, and TV is premised on such long sessions
(unlike Google, which prides itself on sending users on their way
quickly) that anything that takes up their time is competing with
it.  But in addition to such indirect competitors, I think TV
companies will increasingly face direct ones.&lt;br/&gt;&lt;br/&gt;Even in cable TV, the long tail was lopped off prematurely by the
threshold you had to get over to start a new channel.  It will be
longer on the Internet, and there will be more mobility within it.
In this new world, the existing players will only have the advantages
any big company has in its market.&lt;br/&gt;&lt;br/&gt;That will change the balance of power between the networks and the
people who produce shows.  The networks used to be gatekeepers.
They distributed your work, and sold advertising on it.  Now the
people who produce a show can distribute it themselves.  The main
value networks supply now is ad sales.  Which will tend to put them
in the position of service providers rather than publishers.&lt;br/&gt;&lt;br/&gt;Shows will change even more.  On the Internet there's no reason to
keep their current format, or even the fact that they have a single
format.  Indeed, the more interesting sort of convergence that's
coming is between shows and games.  But on the question of what
sort of entertainment gets distributed on the Internet in 20 years,
I wouldn't dare to make any predictions, except that things will
change a lot.  We'll get whatever the most imaginative people can
cook up.  That's why the Internet won.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Thanks to Trevor Blackwell for this point.  He adds: "I
remember the eyes of phone companies gleaming in the early 90s when
they talked about convergence.  They thought most programming would
be on demand, and they would implement it and make a lot of money.
It didn't work out. They assumed that their local network infrastructure
would be critical to do video on-demand, because you couldn't
possibly stream it from a few data centers over the internet. At
the time (1992) the entire cross-country Internet bandwidth wasn't
enough for one video stream. But wide-area bandwidth increased more
than they expected and they were beaten by iTunes and Hulu."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Copyright owners tend to focus on the aspect they see of
piracy, which is the lost revenue.  They therefore think what drives
users to do it is the desire to get something for free.  But iTunes
shows that people will pay for stuff online, if you make it easy.
A significant component of piracy is simply that it offers a better
user experience.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Or a phone that is actually a computer.  I'm not making any
predictions about the size of the device that will replace TV, just
that it will have a browser and get data via the Internet.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Emmett Shear writes: "I'd argue the long tail for sports may
be even larger than the long tail for other kinds of content. Anyone
can broadcast a high school football game that will be interesting
to 10,000 people or so, even if the quality of production is not
so good."&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Nancy Cook, Michael Seibel,
Emmett Shear, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//convergence.html</guid>
      <pubDate>Sun, 01 Mar 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Can You Buy a Silicon Valley?  Maybe.</title>
      <link>https://paulgraham.com//maybe.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;A lot of cities look at Silicon Valley and ask "How could we make
something like that happen here?"  The 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;organic&lt;/a&gt; way to do it is to
establish a first-rate university in a place where rich people want
to live. That's how Silicon Valley happened.  But could you shortcut
the process by funding startups?&lt;br/&gt;&lt;br/&gt;Possibly. Let's consider what it would take.&lt;br/&gt;&lt;br/&gt;The first thing to unders&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;A lot of cities look at Silicon Valley and ask "How could we make
something like that happen here?"  The 
&lt;a href="https://paulgraham.com/siliconvalley.html"&gt;organic&lt;/a&gt; way to do it is to
establish a first-rate university in a place where rich people want
to live. That's how Silicon Valley happened.  But could you shortcut
the process by funding startups?&lt;br/&gt;&lt;br/&gt;Possibly. Let's consider what it would take.&lt;br/&gt;&lt;br/&gt;The first thing to understand is that encouraging startups is a
different problem from encouraging startups in a particular city.
The latter is much more expensive.&lt;br/&gt;&lt;br/&gt;People sometimes think they could improve the startup scene in their
town by starting something like &lt;a href="http://ycombinator.com"&gt;Y 
Combinator&lt;/a&gt; there, but in fact it
will have near zero effect.  I know because Y Combinator itself had
near zero effect on Boston when we were based there half the year.
The people we funded came from all over the country (indeed, the
world) and afterward they went wherever they could get more
fundingâ€”which generally meant Silicon Valley.&lt;br/&gt;&lt;br/&gt;The seed funding business is not a regional business, because at
that stage startups are mobile. They're just a couple founders with
laptops. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/maybe.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If you want to encourage startups in a particular city, you have
to fund startups that won't leave.  There are two ways to do that:
have rules preventing them from leaving, or fund them at the point
in their life when they naturally take root.  The first approach
is a mistake, because it becomes a filter for selecting bad startups.
If your terms force startups to do things they don't want to, only
the desperate ones will take your money.&lt;br/&gt;&lt;br/&gt;Good startups will move to another city as a condition of funding.
What they won't do is agree not to move the next time they need
funding.  So the only way to get them to stay is to give them enough
that they never need to leave.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;How much would that take?  If you want to keep startups from leaving
your town, you have to give them enough that they're not tempted
by an offer from Silicon Valley VCs that requires them to move.  A
startup would be able to refuse such an offer if they had grown to
the point where they were (a) rooted in your town and/or (b) so
successful that VCs would fund them even if they didn't move.&lt;br/&gt;&lt;br/&gt;How much would it cost to grow a startup to that point? A minimum
of several hundred thousand dollars.  &lt;a href="http://wufoo.com"&gt;Wufoo&lt;/a&gt; 
seem to have rooted
themselves in Tampa on $118k, but they're an extreme case.  On
average it would take at least half a million.&lt;br/&gt;&lt;br/&gt;So if it seems too good to be true to think you could grow a local
silicon valley by giving startups $15-20k each like Y Combinator,
that's because it is.  To make them stick around you'd have to give
them at least 20 times that much.&lt;br/&gt;&lt;br/&gt;However, even that is an interesting prospect.  Suppose to be on
the safe side it would cost a million dollars per startup. If you
could get startups to stick to your town for a million apiece, then
for a billion dollars you could bring in a thousand startups. That probably wouldn't push you past Silicon Valley itself, 
but it might get you second place.&lt;br/&gt;&lt;br/&gt;For the price of a football stadium, any town that was decent to
live in could make itself one of the biggest startup hubs in the
world.&lt;br/&gt;&lt;br/&gt;What's more, it wouldn't take very long.   You could probably do
it in five years.  During the term of one mayor. And it would get
easier over time, because the more startups you had in town, the
less it would take to get new ones to move there. By the time you
had a thousand startups in town, the VCs wouldn't be trying so hard
to get them to move to Silicon Valley; instead they'd be opening
local offices.  Then you'd really be in good shape.  You'd have
started a self-sustaining chain reaction like the one that drives
the Valley.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;But now comes the hard part.  You have to pick the startups.  How
do you do that?  Picking startups is a rare and valuable skill, and
the handful of people who have it are not readily hireable.  And
this skill is so hard to measure that if a government did try to
hire people with it, they'd almost certainly get the wrong ones.&lt;br/&gt;&lt;br/&gt;For example, a city could give money to a VC fund to establish a
local branch, and let them make the choices.  But only a bad VC
fund would take that deal.  They wouldn't &lt;i&gt;seem&lt;/i&gt; bad to the city
officials.  They'd seem very impressive.  But they'd be bad at
picking startups.  That's the characteristic failure mode of VCs.
All VCs look impressive to limited partners.  The difference between
the good ones and the bad ones only becomes visible in the other
half of their jobs: choosing and advising startups.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/maybe.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;What you really want is a pool of local angel investorsâ€”people
investing money they made from their own startups.  But unfortunately
you run into a chicken and egg problem here.  If your city isn't
already a startup hub, there won't be people there who got rich
from startups. And there is no way I can think of that a city could
attract angels from outside. By definition they're rich.  There's
no incentive that would make them move.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/maybe.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;However, a city could select startups by piggybacking on the expertise
of investors who weren't local.  It would be pretty straightforward
to make a list of the most eminent Silicon Valley angels and from
that to generate a list of all the startups they'd invested in.  If
a city offered these companies a million dollars each to move, a
lot of the earlier stage ones would probably take it.&lt;br/&gt;&lt;br/&gt;Preposterous as this plan sounds, it's probably the most efficient
way a city could select good startups.&lt;br/&gt;&lt;br/&gt;It would hurt the startups somewhat to be separated from their
original investors. On the other hand, the extra million dollars
would give them a lot more runway.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Would the transplanted startups survive?  Quite possibly. The only
way to find out would be to try it.  It would be a pretty cheap
experiment, as civil expenditures go.  Pick 30 startups that eminent
angels have recently invested in, give them each a million dollars
if they'll relocate to your city, and see what happens after a year.
If they seem to be thriving, you can try importing startups on a
larger scale.&lt;br/&gt;&lt;br/&gt;Don't be too legalistic about the conditions under which they're
allowed to leave.  Just have a gentlemen's agreement.&lt;br/&gt;&lt;br/&gt;Don't try to do it on the cheap and pick only 10 for the initial
experiment.  If you do this on too small a scale you'll just guarantee
failure. Startups need to be around other startups.  30 would be
enough to feel like a community.&lt;br/&gt;&lt;br/&gt;Don't try to make them all work in some renovated warehouse you've
made into an "incubator."  Real startups prefer to work in their
own spaces.&lt;br/&gt;&lt;br/&gt;In fact, don't impose any restrictions on the startups at all.
Startup founders are mostly &lt;a href="https://paulgraham.com/gba.html"&gt;hackers&lt;/a&gt;, 
and hackers are much more
constrained by gentlemen's agreements than regulations.  If they
shake your hand on a promise, they'll keep it.  But show them a
lock and their first thought is how to pick it.&lt;br/&gt;&lt;br/&gt;Interestingly, the 30-startup experiment could be done by any
sufficiently rich private citizen.  And what pressure it would 
put on the city if it worked.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/maybe.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Should the city take stock in return for the money?
In principle they're entitled to, but how would they choose valuations
for the startups?  You couldn't just give them all the same valuation:
that would be too low for some (who'd turn you down) and too high
for others (because it might make their next round a "down round").
And since we're assuming we're doing this without being able to
pick startups, we also have to assume we can't value them, since
that's practically the same thing.&lt;br/&gt;&lt;br/&gt;Another reason not to take stock in the startups is that startups
are often involved in disreputable things.  So are established
companies, but they don't get blamed for it.  If someone gets
murdered by someone they met on Facebook, the press will treat the
story as if it were about Facebook.  If someone gets murdered by
someone they met at a supermarket, the press will just treat it as
a story about a murder.  So understand that if you invest in startups,
they might build things that get used for pornography, or file-sharing,
or the expression of unfashionable opinions.  You should probably
sponsor this project jointly with your political opponents, so they
can't use whatever the startups do as a club to beat you with.&lt;br/&gt;&lt;br/&gt;It would be too much of a political liability just to give
the startups the money, though.  So the best plan would be to 
make it convertible debt, but which didn't convert except in
a really big round, like $20 million.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;___&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;How well this scheme worked would depend on the 
&lt;a href="https://paulgraham.com/cities.html"&gt;city&lt;/a&gt;.  There are
some towns, like Portland, that would be easy to turn into startup
hubs, and others, like Detroit, where it would really be an uphill
battle.  So be honest with yourself about the sort of town you have
before you try this.&lt;br/&gt;&lt;br/&gt;It will be easier in proportion to how much your town resembles San
Francisco.  Do you have good weather?  Do people live downtown, or
have they abandoned the center for the suburbs?  Would the city be
described as "hip" and "tolerant," or as reflecting "traditional
values?"  Are there good universities nearby?  Are there walkable
neighborhoods?  Would nerds feel at home?  If you answered yes to
all these questions, you might be able not only to pull off this
scheme, but to do it for less than a million per startup.&lt;br/&gt;&lt;br/&gt;I realize the chance of any city having
the political will to carry out this plan is microscopically
small.  I just wanted to explore what it would take if one did.
How hard would it be to jumpstart a silicon valley?  It's
fascinating to think this prize might be within
the reach of so many cities.  So even though they'll all still
spend the money on the stadium, at least now someone can ask them:
why did you choose to do that instead of becoming a serious
rival to Silicon Valley?&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
What people who start these supposedly local seed firms always
find is that (a) their applicants come from all over, not just the
local area, and (b) the local startups also apply to the other seed
firms.  So what ends up happening is that the applicant pool gets
partitioned by quality rather than geography.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Interestingly, the bad VCs fail by choosing startups run by
people like themâ€”people who are good presenters, but have no
real substance.   It's a case of the fake leading the fake.  And
since everyone involved is so plausible, the LPs who invest in these
funds have no idea what's happening till they measure their returns.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Not even being a tax haven, I suspect.  That makes some rich
people move, but not the type who would make good angel investors
in startups.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Thanks to Michael Keenan for pointing this out.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, Robert
Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//maybe.html</guid>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>What I've Learned from Hacker News</title>
      <link>https://paulgraham.com//hackernews.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;Hacker News was two years
old last week.  Initially it was supposed to be a side projectâ€”an
application to sharpen Arc on, and a place for current and future
Y Combinator founders to exchange news.  It's grown bigger and taken
up more time than I expected, but I don't regret that because I've
learned so much from working on it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Growth&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When we launched in February 2007, weekday traffic was around 1600
daily uniques.  It&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;Hacker News was two years
old last week.  Initially it was supposed to be a side projectâ€”an
application to sharpen Arc on, and a place for current and future
Y Combinator founders to exchange news.  It's grown bigger and taken
up more time than I expected, but I don't regret that because I've
learned so much from working on it.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Growth&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;When we launched in February 2007, weekday traffic was around 1600
daily uniques.  It's since &lt;a href="http://ycombinator.com/images/2yeartraffic.png"&gt;grown&lt;/a&gt; to around 22,000.  This growth
rate is a bit higher than I'd like.  I'd like the site to grow,
since a site that isn't growing at least slowly is probably dead.
But I wouldn't want it to grow as large as Digg or Redditâ€”mainly
because that would dilute the character of the site, but also because
I don't want to spend all my time dealing with scaling.&lt;br/&gt;&lt;br/&gt;I already have problems enough with that.  Remember, the original
motivation for HN was to test a new programming language, and
moreover one that's focused on experimenting with language design,
not performance.  Every time the site gets slow, I fortify myself
by recalling McIlroy and Bentley's famous quote
&lt;blockquote&gt;
  The key to performance is elegance, not battalions of special
  cases.
&lt;/blockquote&gt;
and look for the bottleneck I can remove with least code.  So far
I've been able to keep up, in the sense that performance has remained
consistently mediocre despite 14x growth. I don't know what I'll
do next, but I'll probably think of something.&lt;br/&gt;&lt;br/&gt;This is my attitude to the site generally.  Hacker News is an
experiment, and an experiment in a very young field.  Sites of this
type are only a few years old.  Internet conversation generally is
only a few decades old.  So we've probably only discovered a fraction
of what we eventually will.&lt;br/&gt;&lt;br/&gt;That's why I'm so optimistic about HN.  When a technology is this
young, the existing solutions are usually terrible; which means it
must be possible to do much better; which means many problems that
seem insoluble aren't. Including, I hope, the problem that has
afflicted so many previous communities: being ruined by growth.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Dilution&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Users have worried about that since the site was a few months old.
So far these alarms have been false, but they may not always be.
Dilution is a hard problem. But probably soluble; it doesn't mean
much that open conversations have "always" been destroyed by growth
when "always" equals 20 instances.&lt;br/&gt;&lt;br/&gt;But it's important to remember we're trying to solve a new problem,
because that means we're going to have to try new things, most of
which probably won't work.  A couple weeks ago I tried displaying
the names of users with the highest average comment scores in orange.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
That was a mistake.  Suddenly a culture that had been more
or less united was divided into haves and have-nots.  I didn't
realize how united the culture had been till I saw it divided.  It
was painful to watch.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;So orange usernames won't be back.  (Sorry about that.)  But there
will be other equally broken-seeming ideas in the future, and the
ones that turn out to work will probably seem just as broken as
those that don't.&lt;br/&gt;&lt;br/&gt;Probably the most important thing I've learned about dilution is
that it's measured more in behavior than users. It's bad behavior
you want to keep out more than bad people. User behavior turns out
to be surprisingly malleable.  If people are 
&lt;a href="http://ycombinator.com/newswelcome.html"&gt;expected&lt;/a&gt; to behave
well, they tend to; and vice versa.&lt;br/&gt;&lt;br/&gt;Though of course forbidding bad behavior does tend to keep away bad
people, because they feel uncomfortably constrained in a place where
they have to behave well.  But this way of keeping them out is
gentler and probably also more effective than overt barriers.&lt;br/&gt;&lt;br/&gt;It's pretty clear now that the broken windows theory applies to
community sites as well.  The theory is that minor forms of bad
behavior encourage worse ones: that a neighborhood with lots of
graffiti and broken windows becomes one where robberies occur.  I
was living in New York when Giuliani introduced the reforms that
made the broken windows theory famous, and the transformation was
miraculous. And I was a Reddit user when the opposite happened
there, and the transformation was equally dramatic.&lt;br/&gt;&lt;br/&gt;I'm not criticizing Steve and Alexis.  What happened to Reddit
didn't happen out of neglect.  From the start they had a policy of
censoring nothing except spam.  Plus Reddit had different goals
from Hacker News.  Reddit was a startup, not a side project; its
goal was to grow as fast as possible.  Combine rapid growth and
zero censorship, and the result is a free for all.  But I don't
think they'd do much differently if they were doing it again.
Measured by traffic, Reddit is much more successful than Hacker
News.&lt;br/&gt;&lt;br/&gt;But what happened to Reddit won't inevitably happen to HN. There
are several local maxima.  There can be places that are free for
alls and places that are more thoughtful, just as there are in the
real world; and people will behave differently depending on which
they're in, just as they do in the real world.&lt;br/&gt;&lt;br/&gt;I've observed this in the wild.  I've seen people cross-posting on
Reddit and Hacker News who actually took the trouble to write two
versions, a flame for Reddit and a more subdued version for HN.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Submissions&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There are two major types of problems a site like Hacker News needs
to avoid: bad stories and bad comments.  So far the danger of bad
stories seems smaller.  The stories on the frontpage now are still
roughly the ones that would have been there when HN started.&lt;br/&gt;&lt;br/&gt;I once thought I'd have to weight votes to keep crap off the
frontpage, but I haven't had to yet.  I wouldn't have predicted the
frontpage would hold up so well, and I'm not sure why it has.
Perhaps only the more thoughtful users care enough to submit and
upvote links, so the marginal cost of one random new user approaches
zero.  Or perhaps the frontpage protects itself, by advertising what type of submission is expected.&lt;br/&gt;&lt;br/&gt;The most dangerous thing for the frontpage is stuff that's too easy
to upvote.  If someone proves a new theorem, it takes some work by
the reader to decide whether or not to upvote it.  An amusing cartoon
takes less.  A rant with a rallying cry as the title takes zero,
because people vote it up without even reading it.&lt;br/&gt;&lt;br/&gt;Hence what I call the Fluff Principle: on a user-voted news site,
the links that are easiest to judge will take over unless you take
specific measures to prevent it.&lt;br/&gt;&lt;br/&gt;Hacker News has two kinds of protections against fluff.  The most
common types of fluff links are banned as off-topic.  Pictures of
kittens, political diatribes, and so on are explicitly banned.  This
keeps out most fluff, but not all of it.  Some links are both fluff,
in the sense of being very short, and also on topic.&lt;br/&gt;&lt;br/&gt;There's no single solution to that.  If a link is just an empty
rant, editors will sometimes kill it even if it's on topic in the
sense of being about hacking, because it's not on topic by the real
standard, which is to engage one's intellectual curiosity.  If the
posts on a site are characteristically of this type I sometimes ban
it, which means new stuff at that url is auto-killed.  If a post
has a linkbait title, editors sometimes rephrase it to be more
matter-of-fact.  This is especially necessary with links whose
titles are rallying cries, because otherwise they become implicit
"vote up if you believe such-and-such" posts, which are the most
extreme form of fluff.&lt;br/&gt;&lt;br/&gt;The techniques for dealing with links have to evolve, because the
links do. The existence of aggregators has already affected what
they aggregate. Writers now deliberately write things to draw traffic
from aggregatorsâ€”sometimes even specific ones.  (No, the irony
of this statement is not lost on me.)  Then there are the more
sinister mutations, like linkjackingâ€”posting a paraphrase of
someone else's article and submitting that instead of the original.
These can get a lot of upvotes, because a lot of what's good in an
article often survives; indeed, the closer the paraphrase is to
plagiarism, the more survives.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;I think it's important that a site that kills submissions provide
a way for users to see what got killed if they want to.  That keeps
editors honest, and just as importantly, makes users confident
they'd know if the editors stopped being honest. HN users can do
this by flipping a switch called showdead in their profile.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Comments&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Bad comments seem to be a harder problem than bad submissions.
While the quality of links on the frontpage of HN hasn't changed
much, the quality of the median comment may have decreased somewhat.&lt;br/&gt;&lt;br/&gt;There are two main kinds of badness in comments: meanness and
stupidity.  There is a lot of overlap between the twoâ€”mean
comments are disproportionately likely also to be dumbâ€”but
the strategies for dealing with them are different.  Meanness is
easier to control.  You can have rules saying one shouldn't be mean,
and if you enforce them it seems possible to keep a lid on meanness.&lt;br/&gt;&lt;br/&gt;Keeping a lid on stupidity is harder, perhaps because stupidity is
not so easily distinguishable.  Mean people are more likely to know
they're being mean than stupid people are to know they're being
stupid.&lt;br/&gt;&lt;br/&gt;The most dangerous form of stupid comment is not the long but
mistaken argument, but the dumb joke.  Long but mistaken arguments
are actually quite rare.  There is a strong correlation between
comment quality and length; if you wanted to compare the quality
of comments on community sites, average length would be a good
predictor.  Probably the cause is human nature rather than anything
specific to comment threads. Probably it's simply that stupidity
more often takes the form of having few ideas than wrong ones.&lt;br/&gt;&lt;br/&gt;Whatever the cause, stupid comments tend to be short.  And since
it's hard to write a short comment that's distinguished for the
amount of information it conveys, people try to distinguish them
instead by being funny.  The most tempting format for stupid comments
is the supposedly witty put-down, probably because put-downs are
the easiest form of humor. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
So one advantage of forbidding
meanness is that it also cuts down on these.&lt;br/&gt;&lt;br/&gt;Bad comments are like kudzu: they take over rapidly. Comments have
much more effect on new comments than submissions have on new
submissions.  If someone submits a lame article, the other submissions
don't all become lame.  But if someone posts a stupid comment on a
thread, that sets the tone for the region around it.  People reply
to dumb jokes with dumb jokes.&lt;br/&gt;&lt;br/&gt;Maybe the solution is to add a delay before people can respond to
a comment, and make the length of the delay inversely proportional
to some prediction of its quality.  Then dumb threads would grow
slower.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;People&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I notice most of the techniques I've described are conservative:
they're aimed at preserving the character of the site rather than
enhancing it.  I don't think that's a bias of mine.  It's due to
the shape of the problem.  Hacker News had the good fortune to start
out good, so in this case it's literally a matter of preservation.
But I think this principle would also apply to sites with different
origins.&lt;br/&gt;&lt;br/&gt;The good things in a community site come from people more than
technology; it's mainly in the prevention of bad things that
technology comes into play. Technology certainly can enhance
discussion.  Nested comments do, for example.  But I'd rather use
a site with primitive features and smart, nice users than a more
advanced one whose users were idiots or &lt;a href="https://paulgraham.com/trolls.html"&gt;trolls&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;So the most important thing a community site can do is attract the
kind of people it wants.  A site trying to be as big as possible
wants to attract everyone.  But a site aiming at a particular subset
of users has to attract just thoseâ€”and just as importantly,
repel everyone else.  I've made a conscious effort to do this on
HN.  The graphic design is as plain as possible, and the site rules
discourage dramatic link titles.  The goal is that the only thing
to interest someone arriving at HN for the first time should be the
ideas expressed there.&lt;br/&gt;&lt;br/&gt;The downside of tuning a site to attract certain people is that,
to those people, it can be too attractive.  I'm all too aware how
addictive Hacker News can be.  For me, as for many users, it's a
kind of virtual town square.  When I want to take a break from
working, I walk into the square, just as I might into Harvard Square
or University Ave in the physical world.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/hackernews.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But an online square is
more dangerous than a physical one.  If I spent half the day loitering
on University Ave, I'd notice.  I have to walk a mile to get there,
and sitting in a cafe feels different from working. But visiting
an online forum takes just a click, and feels superficially very
much like working.  You may be wasting your time, but you're not
idle.  Someone is &lt;a href="http://xkcd.com/386/"&gt;wrong&lt;/a&gt; on the Internet, and you're fixing the
problem.&lt;br/&gt;&lt;br/&gt;Hacker News is definitely useful.  I've learned a lot from things
I've read on HN.  I've written several essays that began as comments
there.  So I wouldn't want the site to go away.  But I would like
to be sure it's not a net drag on productivity.  What a disaster
that would be, to attract thousands of smart people to a site that
caused them to waste lots of time.  I wish I could be 100% sure
that's not a description of HN.&lt;br/&gt;&lt;br/&gt;I feel like the addictiveness of games and social applications is
still a mostly unsolved problem.  The situation now is like it was
with crack in the 1980s: we've invented terribly addictive new
things, and we haven't yet evolved ways to protect ourselves from
them.  We will eventually, and that's one of the problems I hope
to focus on next.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
I tried ranking users by both average and median comment
score, and average (with the high score thrown out) seemed the more
accurate predictor of high quality.  Median may be the more accurate
predictor of low quality though.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Another thing I learned from this experiment is that if you're
going to distinguish between people, you better be sure you do it
right.  This is one problem where rapid prototyping doesn't work.&lt;br/&gt;&lt;br/&gt;Indeed, that's the intellectually honest argument for not discriminating
between various types of people.  The reason not to do it is not
that everyone's the same, but that it's bad to do wrong and hard
to do right.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
When I catch egregiously linkjacked posts I replace the url
with that of whatever they copied.  Sites that habitually linkjack
get banned.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Digg is notorious for its lack of transparency.  The root of
the problem is not that the guys running Digg are especially sneaky,
but that they use the wrong algorithm for generating their frontpage.
Instead of bubbling up from the bottom as they get more votes, as
on Reddit, stories start at the top and get pushed down by new
arrivals.&lt;br/&gt;&lt;br/&gt;The reason for the difference is that Digg is derived from Slashdot,
while Reddit is derived from Delicious/popular.  Digg is Slashdot
with voting instead of editors, and Reddit is Delicious/popular
with voting instead of bookmarking.  (You can still see fossils of
their origins in their graphic design.)&lt;br/&gt;&lt;br/&gt;Digg's algorithm is very vulnerable to gaming, because any story
that makes it onto the frontpage is the new top story.  Which in
turn forces Digg to respond with extreme countermeasures.  A lot
of startups have some kind of secret about the subterfuges they had
to resort to in the early days, and I suspect Digg's is the extent
to which the top stories were de facto chosen by human editors.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
The dialog on Beavis and Butthead was composed largely of
these, and when I read comments on really bad sites I can hear them
in their voices.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
I suspect most of the techniques for discouraging stupid
comments have yet to be discovered.  Xkcd implemented a particularly
clever one in its IRC channel: don't allow the same thing twice.
Once someone has said "fail," no one can ever say it again.  This
would penalize short comments especially, because they have less
room to avoid collisions in.&lt;br/&gt;&lt;br/&gt;Another promising idea is the &lt;a href="http://stupidfilter.org"&gt;stupid 
filter&lt;/a&gt;, which is just like a
probabilistic spam filter, but trained on corpora of stupid and
non-stupid comments instead.&lt;br/&gt;&lt;br/&gt;You may not have to kill bad comments to solve the problem.  Comments
at the bottom of a long thread are rarely seen, so it may be enough
to incorporate a prediction of quality in the comment sorting
algorithm.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
What makes most suburbs so demoralizing is that there's no
center to walk to.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Justin Kan, Jessica Livingston, Robert Morris,
Alexis Ohanian, Emmet Shear, and Fred Wilson for reading drafts of
this.&lt;br/&gt;&lt;br/&gt;&lt;img src="http://ycombinator.com/images/y18.gif"/&gt;
&lt;a href="http://news.ycombinator.com/item?id=495053"&gt;Comment&lt;/a&gt; on this essay.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//hackernews.html</guid>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Startups in 13 Sentences</title>
      <link>https://paulgraham.com//13sentences.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#cccc99"&gt;&amp;lt;img height="15" src="http://ww&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#cccc99"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
Watch how this essay was
&lt;a href="https://byronm.com/13sentences.html"&gt;written&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
February 2009&lt;br/&gt;&lt;br/&gt;One of the things I always tell startups is a principle I learned
from Paul Buchheit: it's better to make a few people really happy
than to make a lot of people semi-happy.  I was saying recently to
a reporter that if I could only tell startups 10 things, this would
be one of them.  Then I thought: what would the other 9 be?&lt;br/&gt;&lt;br/&gt;When I made the list there turned out to be 13:
&lt;p style="margin-top:32px"&gt;
&lt;b&gt;1. Pick good cofounders.&lt;/b&gt;&lt;br&gt;&lt;br&gt;Cofounders are for a startup what location is for real estate.  You
can change anything about a house except where it is.  In a startup
you can change your idea easily, but changing your cofounders is
hard. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/13sentences.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
And the success of a startup is almost always a function
of its founders.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;2. Launch fast.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The reason to launch fast is not so much that it's critical to get
your product to market early, but that you haven't really started
working on it till you've launched.  Launching teaches you what you
should have been building.  Till you know that you're wasting your
time.  So the main value of whatever you launch with is as a pretext
for engaging users.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;3. Let your idea evolve.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;This is the second half of launching fast. Launch fast and iterate.
It's a big mistake to treat a startup as if it were merely a matter
of implementing some brilliant initial idea. As in an essay, most
of the ideas appear in the implementing.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;4. Understand your users.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;You can envision the wealth created by a startup as a rectangle,
where one side is the number of users and the other is how much you
improve their lives.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/13sentences.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
The second dimension is the one you have
most control over.  And indeed, the growth in the first will be
driven by how well you do in the second.  As in science, the hard
part is not answering questions but asking them: the hard part is
seeing something new that users lack. The better you understand
them the better the odds of doing that. That's why so many successful
startups make something the founders needed.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;5. Better to make a few users love you than a lot ambivalent.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Ideally you want to make large numbers of users love you, but you
can't expect to hit that right away.  Initially you have to choose
between satisfying all the needs of a subset of potential users,
or satisfying a subset of the needs of all potential users.  Take
the first. It's easier to expand userwise than satisfactionwise.
And perhaps more importantly, it's harder to lie to yourself.  If
you think you're 85% of the way to a great product, how do you know
it's not 70%?  Or 10%?  Whereas it's easy to know how many users
you have.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;6. Offer surprisingly good customer service.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Customers are used to being maltreated.  Most of the companies they
deal with are quasi-monopolies that get away with atrocious customer
service. Your own ideas about what's possible have been unconsciously
lowered by such experiences.  Try making your customer service not
merely good, but 
&lt;a href="http://www.diaryofawebsite.com/blog/2008/07/wufoo-and-the-art-of-customer-service/"&gt;surprisingly good&lt;/a&gt;.  Go out of your way to make
people happy.  They'll be overwhelmed; you'll see.  In the earliest
stages of a startup, it pays to offer customer service on a level
that wouldn't scale, because it's a way of learning about your
users.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;7. You make what you measure.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I learned this one from Joe Kraus. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/13sentences.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Merely measuring something
has an uncanny tendency to improve it.  If you want to make your
user numbers go up, put a big piece of paper on your wall and every
day plot the number of users.  You'll be delighted when it goes up
and disappointed when it goes down.  Pretty soon you'll start
noticing what makes the number go up, and you'll start to do more
of that.  Corollary: be careful what you measure.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;8. Spend little.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I can't emphasize enough how important it is for a startup to be cheap.
Most startups fail before they make something people want, and the
most common form of failure is running out of money.  So being cheap
is (almost) interchangeable with iterating rapidly.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/13sentences.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But it's
more than that.  A culture of cheapness keeps companies young in
something like the way exercise keeps people young.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;9. Get ramen profitable.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;"Ramen profitable" means a startup makes just enough to pay the
founders' living expenses.  It's not rapid prototyping for business
models (though it can be), but more a way of hacking the investment
process.  Once you cross over into ramen profitable, it completely
changes your relationship with investors.  It's also great for
morale.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;10. Avoid distractions.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Nothing kills startups like distractions.  The worst type are those
that pay money: day jobs, consulting, profitable side-projects.
The startup may have more long-term potential, but you'll always
interrupt working on it to answer calls from people paying you now.
Paradoxically, &lt;a href="https://paulgraham.com/fundraising.html"&gt;fundraising&lt;/a&gt; is this type of distraction, so try to
minimize that too.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;11. Don't get demoralized.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Though the immediate cause of death in a startup tends to be running
out of money, the underlying cause is usually lack of focus.  Either
the company is run by stupid people (which can't be fixed with
advice) or the people are smart but got demoralized.  Starting a
startup is a huge moral weight.  Understand this and make a conscious
effort not to be ground down by it, just as you'd be careful to
bend at the knees when picking up a heavy box.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;12. Don't give up.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Even if you get demoralized, &lt;a href="https://paulgraham.com/die.html"&gt;don't give up&lt;/a&gt;.  You can get surprisingly
far by just not giving up.  This isn't true in all fields.  There
are a lot of people who couldn't become good mathematicians no
matter how long they persisted.  But startups aren't like that.
Sheer effort is usually enough, so long as you keep morphing your
idea.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;13. Deals fall through.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;One of the most useful skills we learned from Viaweb was not getting
our hopes up.  We probably had 20 deals of various types fall
through.  After the first 10 or so we learned to treat deals as
background processes that we should ignore till they terminated.
It's very dangerous to morale to start to depend on deals closing,
not just because they so often don't, but because it makes them
less likely to.
&lt;p style="margin-top:32px"&gt;
Having gotten it down to 13 sentences, I asked myself which I'd
choose if I could only keep one.&lt;br/&gt;&lt;br/&gt;Understand your users.  That's the key.  The essential task in a
startup is to create wealth; the dimension of wealth you have most
control over is how much you improve users' lives; and the hardest
part of that is knowing what to make for them.  Once you know what
to make, it's mere effort to make it, and most decent hackers are
capable of that.&lt;br/&gt;&lt;br/&gt;Understanding your users is part of half the principles in this
list.  That's the reason to launch early, to understand your users.
Evolving your idea is the embodiment of understanding your users.
Understanding your users well will tend to push you toward making
something that makes a few people deeply happy.  The most important
reason for having surprisingly good customer service is that it
helps you understand your users.  And understanding your users will
even ensure your morale, because when everything else is collapsing
around you, having just ten users who love you will keep you going.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
Strictly speaking it's impossible without a time machine.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
In practice it's more like a ragged comb.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
Joe thinks one of the founders of Hewlett Packard said it first,
but he doesn't remember which.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
They'd be interchangeable if markets stood still.  Since they
don't, working twice as fast is better than having twice as much
time.&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//13sentences.html</guid>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Keep Your Identity Small</title>
      <link>https://paulgraham.com//identity.html</link>
      <description>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;I finally realized today why politics and religion yield such
uniquely useless discussions.&lt;br/&gt;&lt;br/&gt;As a rule, any mention of religion on an online forum degenerates
into a religious argument.  Why?  Why does this happen with religion
and not with Javascript or baking or other topics people talk about
on forums?&lt;br/&gt;&lt;br/&gt;What's different about religion is that people don't feel they need
to have any particular expertise to have opinions about&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;February 2009&lt;br/&gt;&lt;br/&gt;I finally realized today why politics and religion yield such
uniquely useless discussions.&lt;br/&gt;&lt;br/&gt;As a rule, any mention of religion on an online forum degenerates
into a religious argument.  Why?  Why does this happen with religion
and not with Javascript or baking or other topics people talk about
on forums?&lt;br/&gt;&lt;br/&gt;What's different about religion is that people don't feel they need
to have any particular expertise to have opinions about
it.  All they need is strongly held beliefs, and anyone can have
those.  No thread about Javascript will grow as fast as one about
religion, because people feel they have to be over some threshold
of expertise to post comments about that.  But on religion everyone's
an expert.&lt;br/&gt;&lt;br/&gt;Then it struck me: this is the problem with politics too.  Politics,
like religion, is a topic where there's no threshold of expertise
for expressing an opinion.  All you need is strong convictions.&lt;br/&gt;&lt;br/&gt;Do religion and politics have something in common that explains
this similarity?  One possible explanation is that they deal with
questions that have no definite answers, so there's no back pressure
on people's opinions.  Since no one can be proven wrong, every
opinion is equally valid, and sensing this, everyone lets fly with
theirs.&lt;br/&gt;&lt;br/&gt;But this isn't true.  There are certainly some political questions
that have definite answers, like how much a new government policy
will cost.  But the more precise political questions suffer the
same fate as the vaguer ones.&lt;br/&gt;&lt;br/&gt;I think what religion and politics have in common is that they
become part of people's identity, and people can never have a
fruitful argument about something that's part of their identity.
By definition they're partisan.&lt;br/&gt;&lt;br/&gt;Which topics engage people's identity depends on the people, not
the topic.  For example, a discussion about a battle that included
citizens of one or more of the countries involved would probably
degenerate into a political argument.  But a discussion today about
a battle that took place in the Bronze Age probably wouldn't.  No
one would know what side to be on.  So it's not politics that's the
source of the trouble, but identity.  When people say a discussion
has degenerated into a religious war, what they really mean is that
it has started to be driven mostly by people's identities.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/identity.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Because the point at which this happens depends on the people rather
than the topic, it's a mistake to conclude that because a question
tends to provoke religious wars, it must have no answer. For example,
the question of the relative merits of programming languages often
degenerates into a religious war, because so many programmers
identify as X programmers or Y programmers.  This sometimes leads
people to conclude the question must be unanswerableâ€”that all
languages are equally good.  Obviously that's false: anything else
people make can be well or badly designed; why should this be
uniquely impossible for programming languages?  And indeed, you can
have a fruitful discussion about the relative merits of programming
languages, so long as you exclude people who respond from identity.&lt;br/&gt;&lt;br/&gt;More generally, you can have a fruitful discussion about a topic
only if it doesn't engage the identities of any of the
participants.  What makes politics and religion such minefields is
that they engage so many people's identities.  But you could in
principle have a useful conversation about them with some people.
And there are other topics that might seem harmless, like the
relative merits of Ford and Chevy pickup trucks, that you couldn't
safely talk about with &lt;a href="http://www.theledger.com/apps/pbcs.dll/article?AID=/20060418/NEWS/604180378/1039"&gt;others&lt;/a&gt;.&lt;br/&gt;&lt;br/&gt;The most intriguing thing about this theory, if it's right, is that
it explains not merely which kinds of discussions to avoid, but how
to have better ideas.  If people can't think clearly about anything
that has become part of their identity, then all other things being
equal, the best plan is to let as few things into your identity as
possible. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/identity.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Most people reading this will already be fairly tolerant.  But there
is a step beyond thinking of yourself as x but tolerating y: not
even to consider yourself an x.  The more labels you have for
yourself, the dumber they make you.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
When that happens, it tends to happen fast, like a core going
critical.  The threshold for participating goes down to zero, which
brings in more people.  And they tend to say incendiary things,
which draw more and angrier counterarguments.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
There may be some things it's a net win to include in your
identity.  For example, being a scientist.  But arguably that is
more of a placeholder than an actual labelâ€”like putting NMI on a
form that asks for your middle initialâ€”because it doesn't commit
you to believing anything in particular.   A scientist isn't committed
to believing in natural selection in the same way a biblical
literalist is committed to rejecting it.  All he's committed to is
following the evidence wherever it leads.&lt;br/&gt;&lt;br/&gt;Considering yourself a scientist is equivalent to putting a sign
in a cupboard saying "this cupboard must be kept empty."  Yes,
strictly speaking, you're putting something in the cupboard, but
not in the ordinary sense.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, Paul Buchheit, and Robert
Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//identity.html</guid>
      <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>After Credentials</title>
      <link>https://paulgraham.com//credentials.html</link>
      <description>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;A few months ago I read a &lt;i&gt;New York Times&lt;/i&gt; article on South
Korean cram schools that said &lt;blockquote&gt;
  Admission to the right university can make or break an ambitious
  young South Korean.
&lt;/blockquote&gt; A parent added: &lt;blockquote&gt;
  "In our country, college entrance exams determine 70 to 80 percent
  of a person's future."
&lt;/blockquote&gt; It was striking how old fashioned this sounded.  And
yet when I was in high school it wouldn't have&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;A few months ago I read a &lt;i&gt;New York Times&lt;/i&gt; article on South
Korean cram schools that said &lt;blockquote&gt;
  Admission to the right university can make or break an ambitious
  young South Korean.
&lt;/blockquote&gt; A parent added: &lt;blockquote&gt;
  "In our country, college entrance exams determine 70 to 80 percent
  of a person's future."
&lt;/blockquote&gt; It was striking how old fashioned this sounded.  And
yet when I was in high school it wouldn't have seemed too far off
as a description of the US.  Which means things must have been
changing here.&lt;br/&gt;&lt;br/&gt;The course of people's lives in the US now seems to be determined
less by credentials and more by performance than it was 25 years
ago.  Where you go to college still matters, but not like it used
to.&lt;br/&gt;&lt;br/&gt;What happened?&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Judging people by their academic credentials was in its time an
advance.  The practice seems to have begun in China, where starting
in 587 candidates for the imperial civil service had to take an
exam on classical literature.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/credentials.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt; It was also a test of wealth,
because the knowledge it tested was so specialized that passing
required years of expensive training.  But though wealth was a
necessary condition for passing, it was not a sufficient one.  By
the standards of the rest of the world in 587, the Chinese system
was very enlightened.  Europeans didn't introduce formal civil
service exams till the nineteenth century, and even then they seem
to have been influenced by the Chinese example.&lt;br/&gt;&lt;br/&gt;Before credentials, government positions were obtained mainly by
family influence, if not outright bribery.   It was a great step
forward to judge people by their performance on a test.  But by no
means a perfect solution.  When you judge people that way, you tend
to get cram schoolsâ€”which they did in Ming China and nineteenth
century England just as much as in present day South Korea.&lt;br/&gt;&lt;br/&gt;What cram schools are, in effect, is leaks in a seal.  The use of
credentials
was an attempt to seal off the direct transmission of power between
generations, and cram schools represent that power finding holes
in the seal.  Cram schools turn wealth in one generation into
credentials in the next.&lt;br/&gt;&lt;br/&gt;It's hard to beat this phenomenon, because the schools adjust to suit
whatever the tests measure.  When the tests are narrow and
predictable, you get cram schools on the classic model, like those
that prepared candidates for Sandhurst (the British West Point) or
the classes American students take now to improve their SAT scores.
But as the tests get broader, the schools do too.  Preparing a
candidate for the Chinese imperial civil service exams took years,
as prep school does today.  But the raison d'etre of all these
institutions has been the same: to beat the system.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/credentials.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;History suggests that, all other things being equal, a society
prospers in proportion to its ability to prevent parents from
influencing their children's success directly.  It's a fine thing
for parents to help their children indirectlyâ€”for example,
by helping them to become smarter or more disciplined, which then
makes them more successful.  The problem comes when parents use
direct methods: when they are able to use their own wealth or power
as a substitute for their children's qualities.&lt;br/&gt;&lt;br/&gt;Parents will tend to do this when they can.  Parents will die for
their kids, so it's not surprising to find they'll also push their
scruples to the limits for them.  Especially if other parents are
doing it.&lt;br/&gt;&lt;br/&gt;Sealing off this force has a double advantage.  Not only does a
society get "the best man for the job," but
parents' ambitions are diverted from direct methods to indirect
onesâ€”to actually trying to raise their kids well.&lt;br/&gt;&lt;br/&gt;But we should expect it to be very hard to contain parents' efforts
to obtain an unfair advantage for their kids.  We're dealing with
one of the most powerful forces in human nature.  We shouldn't expect
naive solutions to work, any more than we'd expect naive solutions
for keeping heroin out of a prison to work.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;The obvious way to solve the problem is to make credentials better.
If the tests a society uses are currently hackable, we can study
the way people beat them and try to plug the holes.  You can use
the cram schools to show you where most of the holes are.  They
also tell you when you're succeeding in fixing them: when cram
schools become less popular.&lt;br/&gt;&lt;br/&gt;A more general solution
would be to push for increased transparency, especially at critical
social bottlenecks like college admissions.  In the US this process
still shows many outward signs of corruption.  For example, legacy
admissions.  The official story is that legacy status doesn't carry
much weight, because all it does is break ties: applicants are
bucketed by ability, and legacy status is only used to decide between
the applicants in the bucket that straddles the cutoff.  But what
this means is that a university can make legacy status have as much
or as little weight as they want, by adjusting the size of the
bucket that straddles the cutoff.&lt;br/&gt;&lt;br/&gt;By gradually chipping away at the abuse of credentials, you could
probably make them more airtight.  But what a long fight it would
be.  Especially when the institutions administering the tests don't
really want them to be airtight.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Fortunately there's a better way to prevent the direct transmission
of power between generations.  Instead of trying to make credentials
harder to hack, we can also make them matter less.&lt;br/&gt;&lt;br/&gt;Let's think about what credentials are for.  What they are,
functionally, is a way of predicting performance.  If you could
measure actual performance, you wouldn't need them.&lt;br/&gt;&lt;br/&gt;So why did they even evolve?  Why haven't we just been measuring
actual performance?  Think about where credentialism first appeared:
in selecting candidates for large organizations.  Individual
performance is hard to measure in large organizations, and the
harder performance is to measure, the more important it is
to predict it.  If an organization could immediately and cheaply
measure the performance of recruits, they wouldn't need to examine
their credentials.  They could take everyone and keep just the good
ones.&lt;br/&gt;&lt;br/&gt;Large organizations can't do this.  But a bunch of small organizations
in a market can come close.  A market takes every organization and
keeps just the good ones.  As organizations get smaller, this
approaches taking every person and keeping just the good ones.  So
all other things being equal, a society consisting of more, smaller
organizations will care less about credentials.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;That's what's been happening in the US.  That's why those quotes
from Korea sound so old fashioned.  They're talking about an economy
like America's a few decades ago, dominated by a few big companies.
The route for the ambitious in that sort of environment is to join
one and climb to the top.  Credentials matter a lot then.  In the 
culture of a large organization, an elite pedigree becomes a self-fulfilling
prophecy.&lt;br/&gt;&lt;br/&gt;This doesn't work in small companies.  Even if your colleagues were
impressed by your credentials, they'd soon be parted from you if
your performance didn't match, because the company would go out of
business and the people would be dispersed.&lt;br/&gt;&lt;br/&gt;In a world of small companies, performance is all anyone cares
about.  People hiring for a startup don't care whether you've even
graduated from college, let alone which one.  All they care about
is what you can do.  Which is in fact all that should matter, even
in a large organization.  The reason credentials have such prestige
is that for so long the large organizations
in a society tended to be the most powerful.  But in the US at least
they don't have the monopoly on power they once did, precisely
because they can't measure (and thus reward) individual performance.
Why spend twenty years climbing the corporate ladder when you can
get rewarded directly by the market?&lt;br/&gt;&lt;br/&gt;I realize I see a more exaggerated version of the change than most
other people.  As a partner at an early stage venture funding firm,
I'm like a jumpmaster shoving people out of the old world of
credentials and into the new one of performance.  I'm an agent of
the change I'm seeing.  But I don't think I'm imagining it.  It was
not so easy 25 years ago for an ambitious person to choose to be
judged directly by the market.  You had to go through bosses, and
they were influenced by where you'd been to college.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;What made it possible for small organizations to succeed in America?
I'm still not entirely sure.  Startups are certainly a large part
of it.  Small organizations can develop new ideas faster than large
ones, and new ideas are increasingly valuable.&lt;br/&gt;&lt;br/&gt;But I don't think startups account for all the shift from credentials
to measurement.  My friend Julian Weber told me that when he went
to work for a New York law firm in the 1950s they paid associates
far less than firms do today.  Law firms then made no pretense of
paying people according to the value of the work they'd done.  Pay
was based on seniority.  The younger employees were paying their
dues.  They'd be rewarded later.&lt;br/&gt;&lt;br/&gt;The same principle prevailed at industrial companies.  When my
father was working at Westinghouse in the 1970s, he had people
working for him who made more than he did, because they'd been there
longer.&lt;br/&gt;&lt;br/&gt;Now companies increasingly have to pay employees market price for
the work they do.   One reason is that employees no longer trust
companies to deliver 
&lt;a href="https://paulgraham.com/ladder.html"&gt;deferred rewards&lt;/a&gt;: why work to accumulate
deferred rewards at a company that might go bankrupt, or be taken
over and have all its implicit obligations wiped out?  The other
is that some companies broke ranks and started to pay young employees
large amounts.  This was particularly true in consulting, law, and
finance, where it led to the phenomenon of yuppies.  The word is
rarely used today because it's no longer surprising to see a 25
year old with money, but in 1985 the sight of a 25 year old
&lt;i&gt;professional&lt;/i&gt; able to afford a new BMW was so novel that it
called forth a new word.&lt;br/&gt;&lt;br/&gt;The classic yuppie worked for a small organization.  He didn't work
for General Widget, but for the law firm that handled General
Widget's acquisitions or the investment bank that floated their
bond issues.&lt;br/&gt;&lt;br/&gt;Startups and yuppies entered the American conceptual vocabulary
roughly simultaneously in the late 1970s and early 1980s.  I don't
think there was a causal connection.  Startups happened because
technology started to change so fast that big companies could no
longer keep a lid on the smaller ones.  I don't think the rise of
yuppies was inspired by it; it seems more as if there was a change
in the social conventions (and perhaps the laws) governing the way
big companies worked.  But the two phenomena rapidly fused to produce
a principle that now seems obvious: paying energetic young people
market rates, and getting correspondingly high performance from
them.&lt;br/&gt;&lt;br/&gt;At about the same time the US economy rocketed out of the doldrums
that had afflicted it for most of the 1970s.  Was there a connection?
I don't know enough to say, but it felt like it at the time.  There
was a lot of energy released.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Countries worried about their competitiveness are right to be
concerned about the number of startups started within them.  But
they would do even better to examine the underlying principle.  Do
they let energetic young people get paid market rate for the work
they do?  The young are the test, because when people aren't rewarded
according to performance, they're invariably rewarded according to
seniority instead.&lt;br/&gt;&lt;br/&gt;All it takes is a few beachheads in your economy that pay for
performance.  Measurement spreads like heat.  If one part of a
society is better at measurement than others, it tends to push the
others to do better.  If people who are young but smart and driven
can make more by starting their own companies than by working for
existing ones, the existing companies are forced to pay more to
keep them.  So market rates gradually permeate every organization,
even the government.  &lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/credentials.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;The measurement of performance will tend to push even the organizations
issuing credentials into line.  When we were kids I used to annoy
my sister by ordering her to do things I knew she was about to do
anyway.  As credentials are superseded by performance, a similar
role is the best former gatekeepers can hope for.  Once credential
granting institutions are no longer in the self-fullfilling prophecy
business, they'll have to work harder to predict the future.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Credentials are a step beyond bribery and influence.  But they're
not the final step.  There's an even better way to block the
transmission of power between generations: to encourage the trend
toward an economy made of more, smaller units.  Then you can measure
what credentials merely predict.&lt;br/&gt;&lt;br/&gt;No one likes the transmission of power between generationsâ€”not
the left or the right.  But the market forces favored by the right
turn out to be a better way of preventing it than the credentials
the left are forced to fall back on.&lt;br/&gt;&lt;br/&gt;The era of credentials began to end when the power of large
organizations &lt;a href="https://paulgraham.com/highres.html"&gt;peaked&lt;/a&gt; 
in the late twentieth century.  Now we seem
to be entering a new era based on measurement.  The reason the new
model has advanced so rapidly is that it works so much better.  It
shows no sign of slowing.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;] Miyazaki, Ichisada
(Conrad Schirokauer trans.), &lt;i&gt;China's Examination Hell: The Civil
Service Examinations of Imperial China,&lt;/i&gt; Yale University Press,
1981.&lt;br/&gt;&lt;br/&gt;Scribes in ancient Egypt took exams, but they were more the type
of proficiency test any apprentice might have to pass.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;] When I say the
raison d'etre of prep schools is to get kids into better colleges,
I mean this in the narrowest sense.  I'm not saying that's all prep
schools do, just that if they had zero effect on college admissions
there would be far less demand for them.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;] Progressive tax
rates will tend to damp this effect, however, by decreasing the
difference between good and bad measurers.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Sarah Harlin, Jessica Livingston, and David
Sloo for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;br clear="all"/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//credentials.html</guid>
      <pubDate>Mon, 01 Dec 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Could VC be a Casualty of the Recession?</title>
      <link>https://paulgraham.com//divergence.html</link>
      <description>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(I originally wrote this at the request of a company producing
a report about entrepreneurship.  Unfortunately after reading it
they decided  it was too controversial to include.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;
VC funding will probably dry up somewhat during the present recession,
like it usually does in bad times.  But this time the result may
be different.  This time the number of new startups may not decrease.
And that could be dangerous for VCs.&lt;br/&gt;&amp;lt;br&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;&lt;i&gt;(I originally wrote this at the request of a company producing
a report about entrepreneurship.  Unfortunately after reading it
they decided  it was too controversial to include.)&lt;/i&gt;&lt;br/&gt;&lt;br/&gt;
VC funding will probably dry up somewhat during the present recession,
like it usually does in bad times.  But this time the result may
be different.  This time the number of new startups may not decrease.
And that could be dangerous for VCs.&lt;br/&gt;&lt;br/&gt;When VC funding dried up after the Internet Bubble, startups dried
up too.   There were not a lot of new startups being founded in
2003.  But startups aren't tied to VC the way they were 10 years
ago.  It's now possible for VCs and startups to diverge.  And if
they do, they may not reconverge once the economy gets better.&lt;br/&gt;&lt;br/&gt;The reason startups no longer depend so much on VCs is one that
everyone in the startup business knows by now: it has gotten much
cheaper to start a startup.  There are four main reasons: Moore's
law has made hardware cheap; open source has made software free;
the web has made marketing and distribution free; and more powerful
programming languages mean development teams can be smaller.  These
changes have pushed the cost of starting a startup down into the
noise.  In a lot of startupsâ€”probaby most startups funded by
Y Combinatorâ€”the biggest expense is simply the founders'
living expenses.  We've had startups that were profitable on revenues
of $3000 a month.&lt;br/&gt;&lt;br/&gt;$3000 is insignificant as revenues go.  Why should anyone care about
a startup making $3000 a month?  Because, although insignificant
as &lt;i&gt;revenue&lt;/i&gt;, this amount of money can change a startup's
&lt;i&gt;funding&lt;/i&gt; situation completely.&lt;br/&gt;&lt;br/&gt;Someone running a startup is always calculating in the back of their
mind how much "runway" they haveâ€”how long they have till the
money in the bank runs out and they either have to be profitable,
raise more money, or go out of business.  Once you cross the threshold
of profitability, however low, your runway becomes infinite.  It's
a qualitative change, like the stars turning into lines and
disappearing when the Enterprise accelerates to warp speed.  Once
you're profitable you don't need investors' money.  And because
Internet startups have become so cheap to run, the threshold of
profitability can be trivially low.  Which means many Internet
startups don't need VC-scale investments anymore.  For many startups,
VC funding has, in the language of VCs, gone from a must-have to a
nice-to-have.&lt;br/&gt;&lt;br/&gt;This change happened while no one was looking, and its effects have
been largely masked so far.  It was during the trough after the
Internet Bubble that it became trivially cheap to start a startup,
but few realized it because startups were so out of fashion.   When
startups came back into fashion, around 2005, investors were starting
to write checks again.  And while founders may not have needed VC
money the way they used to, they were willing to take it if
offeredâ€”partly because there was a tradition of startups
taking VC money, and partly because startups, like dogs, tend to
eat when given the opportunity.  As long as VCs were writing checks,
founders were never forced to explore the limits of how little they
needed them.  There were a few startups who hit these limits
accidentally because of their unusual circumstancesâ€”most
famously 37signals, which hit the limit because they crossed into
startup land from the other direction: they started as a consulting
firm, so they had revenue before they had a product.&lt;br/&gt;&lt;br/&gt;VCs and founders are like two components that used to be bolted
together.  Around 2000 the bolt was removed.  Because the components
have so far been subjected to the same forces, they still seem to
be joined together, but really one is just resting on the other.
A sharp impact would make them fly apart.  And the present recession
could be that impact.&lt;br/&gt;&lt;br/&gt;Because of Y Combinator's position at the extreme end of the spectrum,
we'd be the first to see signs of a separation between founders and
investors, and we are in fact seeing it.  For example, though the
stock market crash does seem to have made investors more cautious,
it doesn't seem to have had any effect on the number of people who
want to start startups.  We take applications for funding every 6
months.  Applications for the current funding cycle closed on October
17, well after the markets tanked, and even so we got a record
number, up 40% from the same cycle a year before.&lt;br/&gt;&lt;br/&gt;Maybe things will be different a year from now, if the economy
continues to get worse, but so far there is zero slackening of
interest among potential founders.  That's different from the way
things felt in 2001.  Then there was a widespread feeling among
potential founders that startups were over, and that one should
just go to grad school.   That isn't happening this time, and part
of the reason is that even in a bad economy it's not that hard to
build something that makes $3000 a month.  If investors stop writing
checks, who cares?&lt;br/&gt;&lt;br/&gt;We also see signs of a divergence between founders and investors
in the attitudes of existing startups we've funded.  I was talking
to one recently that had a round fall through at the last minute
over the sort of trifle that breaks deals when investors feel they
have the upper handâ€”over an uncertainty about whether the
founders had correctly filed their 83(b) forms, if you can believe
that.  And yet this startup is obviously going to succeed: their
traffic and revenue graphs look like a jet taking off.  So I asked
them if they wanted me to introduce them to more investors.  To my
surprise, they said noâ€”that they'd just spent four months
dealing with investors, and they were actually a lot happier now
that they didn't have to.  There was a friend they wanted to hire
with the investor money, and now they'd have to postpone that.  But
otherwise they felt they had enough in the bank to make it to
profitability.  To make sure, they were moving to a cheaper apartment.
And in this economy I bet they got a good deal on it.&lt;br/&gt;&lt;br/&gt;I've detected this "investors aren't worth the trouble" vibe from
several YC founders I've talked to recently.  At least one startup
from the most recent (summer) cycle may not even raise angel money,
let alone VC.  &lt;a href="http://ticketstumbler.com"&gt;Ticketstumbler&lt;/a&gt;
made it to profitability on Y Combinator's $15,000 investment and
they hope not to need more.  This surprised even us.  Although YC
is based on the idea of it being cheap to start a startup, we never
anticipated that founders would grow successful startups on nothing
more than YC funding.&lt;br/&gt;&lt;br/&gt;If founders decide VCs aren't worth the trouble, that could be bad
for VCs.  When the economy bounces back in a few years and they're
ready to write checks again, they may find that founders have moved
on.&lt;br/&gt;&lt;br/&gt;There is a founder community just as there's a VC community.  They
all know one another, and techniques spread rapidly between them.
If one tries a new programming language or a new hosting provider
and gets good results, 6 months later half of them are using it.
And the same is true for funding.  The current generation of founders
want to raise money from VCs, and Sequoia specifically, because
Larry and Sergey took money from VCs, and Sequoia specifically.
Imagine what it would do to the VC business if the next hot company
didn't take VC at all.&lt;br/&gt;&lt;br/&gt;VCs think they're playing a zero sum game.  In fact, it's not even
that.  If you lose a deal to Benchmark, you lose that deal, but VC
as an industry still wins.  If you lose a deal to None, all VCs
lose.&lt;br/&gt;&lt;br/&gt;This recession may be different from the one after the Internet
Bubble.  This time founders may keep starting startups.  And if
they do, VCs will have to keep writing checks, or they could become
irrelevant.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Sam Altman, Trevor Blackwell, David Hornik, Jessica
Livingston, Robert Morris, and Fred Wilson for reading drafts of
this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//divergence.html</guid>
      <pubDate>Mon, 01 Dec 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The High-Res Society</title>
      <link>https://paulgraham.com//highres.html</link>
      <description>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;For nearly all of history the success of a society was proportionate
to its ability to assemble large and disciplined organizations.
Those who bet on economies of scale generally won, which meant the
largest organizations were the most successful ones.&lt;br/&gt;&lt;br/&gt;Things have already changed so much that this is hard for us to
believe, but till just a few decades ago the largest organizations
tended to be the most progressive.  An ambitious kid g&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;December 2008&lt;br/&gt;&lt;br/&gt;For nearly all of history the success of a society was proportionate
to its ability to assemble large and disciplined organizations.
Those who bet on economies of scale generally won, which meant the
largest organizations were the most successful ones.&lt;br/&gt;&lt;br/&gt;Things have already changed so much that this is hard for us to
believe, but till just a few decades ago the largest organizations
tended to be the most progressive.  An ambitious kid graduating
from college in 1960 wanted to work in the huge, gleaming offices
of Ford, or General Electric, or NASA.  Small meant small-time.
Small in 1960 didn't mean a cool little startup.  It meant uncle
Sid's shoe store.&lt;br/&gt;&lt;br/&gt;When I grew up in the 1970s, the idea of the "corporate ladder" was
still very much alive.  The standard plan was to try to get into a
good college, from which one would be drafted into some organization
and then rise to positions of gradually increasing responsibility.
The more ambitious merely hoped to climb the same ladder faster.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/highres.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;But in the late twentieth century something changed.  It turned out
that economies of scale were not the only force at work.  Particularly
in technology, the increase in speed one could get from smaller
groups started to trump the advantages of size.&lt;br/&gt;&lt;br/&gt;The future turned out to be different from the one we were expecting
in 1970.  The domed cities and flying cars we expected have failed
to materialize.  But fortunately so have the jumpsuits with badges
indicating our specialty and rank.  Instead of being dominated by
a few, giant tree-structured organizations, it's now looking like
the economy of the future will be a fluid network of smaller,
independent units.&lt;br/&gt;&lt;br/&gt;It's not so much that large organizations stopped working.  There's
no evidence that famously successful organizations like the Roman
army or the British East India Company were any less afflicted by
protocol and politics than organizations of the same size today.
But they were competing against opponents who couldn't change the
rules on the fly by discovering new technology.  Now it turns out
the rule "large and disciplined organizations win" needs to have a
qualification appended: "at games that change slowly." No one knew
till change reached a sufficient speed.&lt;br/&gt;&lt;br/&gt;Large organizations &lt;i&gt;will&lt;/i&gt; start to do worse now, though,
because for the first time in history they're no longer getting the
best people.  An ambitious kid graduating from college now doesn't
want to work for a big company.  They want to work for the hot
startup that's rapidly growing into one.  If they're really ambitious,
they want to start it. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/highres.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;This doesn't mean big companies will disappear.  To say that
startups will succeed implies that big companies will exist, because
startups that succeed either become big companies or are acquired
by them. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/highres.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
But large organizations will probably never again
play the leading role they did up till the last quarter of the
twentieth century.&lt;br/&gt;&lt;br/&gt;It's kind of surprising that a trend that lasted so long would ever
run out.  How often does it happen that a rule works for thousands
of years, then switches polarity?&lt;br/&gt;&lt;br/&gt;The millennia-long run of bigger-is-better left us with a lot of
&lt;a href="https://paulgraham.com/credentials.html"&gt;traditions&lt;/a&gt; that are now obsolete, 
but extremely deeply rooted.
Which means the ambitious can now do arbitrage on them.  It will
be very valuable to understand precisely which ideas to keep and
which can now be discarded.&lt;br/&gt;&lt;br/&gt;The place to look is where the spread of smallness began: in the
world of startups.&lt;br/&gt;&lt;br/&gt;There have always been occasional cases, particularly in the US,
of ambitious people who grew the ladder under them instead of
climbing it.  But till recently this was an anomalous route that
tended to be followed only by outsiders.  It was no coincidence
that the great industrialists of the nineteenth century had so
little formal education.  As huge as their companies eventually
became, they were all essentially mechanics and shopkeepers at
first.  That was a social step no one with a college education would
take if they could avoid it.  Till the rise of technology startups,
and in particular, Internet startups, it was very unusual for
educated people to start their own businesses.&lt;br/&gt;&lt;br/&gt;The eight men who left Shockley Semiconductor to found Fairchild
Semiconductor, the original Silicon Valley startup, weren't even
trying to start a company at first.  They were just looking for a
company willing to hire them as a group.  Then one of their parents
introduced them to a small investment bank that offered to find
funding for them to start their own, so they did.  But starting a
company was an alien idea to them; it was something they backed
into.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/highres.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;Now I would guess that practically every Stanford or Berkeley
undergrad who knows how to program has at least considered the idea
of starting a startup.  East Coast universities are not far behind,
and British universities only a little behind them.  This pattern
suggests that attitudes at Stanford and Berkeley are not an anomaly,
but a leading indicator.  This is the way the world is going.&lt;br/&gt;&lt;br/&gt;Of course, Internet startups are still only a fraction of the world's
economy.  Could a trend based on them be that powerful?&lt;br/&gt;&lt;br/&gt;I think so.  There's no reason to suppose there's any limit to the
amount of work that could be done in this area.  Like science,
wealth seems to expand fractally.  Steam power was a sliver of the
British economy when Watt started working on it.  But his work led
to more work till that sliver had expanded into something bigger
than the whole economy of which it had initially been a part.&lt;br/&gt;&lt;br/&gt;The same thing could happen with the Internet.  If Internet startups
offer the best opportunity for ambitious people, then a lot of
ambitious people will start them, and this bit of the economy will
balloon in the usual fractal way.&lt;br/&gt;&lt;br/&gt;Even if Internet-related applications only become a tenth of the
world's economy, this component will set the tone for the rest.
The most dynamic part of the economy always does, in everything
from salaries to standards of dress.  Not just because of its
prestige, but because the principles underlying the most dynamic
part of the economy tend to be ones that work.&lt;br/&gt;&lt;br/&gt;For the future, the trend to bet on seems to be networks of small,
autonomous groups whose performance is measured individually.  And
the societies that win will be the ones with the least impedance.&lt;br/&gt;&lt;br/&gt;As with the original industrial revolution, some societies are going
to be better at this than others.  Within a generation of its birth
in England, the Industrial Revolution had spread to continental
Europe and North America.  But it didn't spread everywhere.  This
new way of doing things could only take root in places that were
prepared for it.  It could only spread to places that already had
a vigorous middle class.&lt;br/&gt;&lt;br/&gt;There is a similar social component to the transformation that began
in Silicon Valley in the 1960s.  Two new kinds of techniques were
developed there: techniques for building integrated circuits, and
techniques for building a new type of company designed to grow fast
by creating new technology.  The techniques for building integrated
circuits spread rapidly to other countries.  But the techniques for
building startups didn't.  Fifty years later, startups are ubiquitous
in Silicon Valley and common in a handful of other US cities, but
they're still an anomaly in most of the world.&lt;br/&gt;&lt;br/&gt;Part of the reasonâ€”possibly the main reasonâ€”that startups
have not spread as broadly as the Industrial Revolution did is their
social disruptiveness.  Though it brought many social changes, the
Industrial Revolution was not fighting the principle that bigger
is better.  Quite the opposite: the two dovetailed beautifully.
The new industrial companies adapted the customs of existing large
organizations like the military and the civil service, and the
resulting hybrid worked well.  "Captains of industry" issued orders
to "armies of workers," and everyone knew what they were supposed
to do.&lt;br/&gt;&lt;br/&gt;Startups seem to go more against the grain, socially.  It's hard
for them to flourish in societies that value hierarchy and stability,
just as it was hard for industrialization to flourish in societies
ruled by people who stole at will from the merchant class.  But
there were already a handful of countries past that stage when the
Industrial Revolution happened.   There do not seem to be that many
ready this time.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
One of the bizarre consequences of this model was that the usual
way to make more money was to become a manager.  This is one of the
things startups fix.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
There are a lot of reasons American car companies have been
doing so much worse than Japanese car companies, but at least one
of them is a cause for optimism: American graduates have more
options.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
It's possible that companies will one day be able to grow big
in revenues without growing big in people, but we are not very far
along that trend yet.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
Lecuyer, Christophe, &lt;i&gt;Making Silicon Valley&lt;/i&gt;, MIT Press, 2006.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Paul Buchheit, Jessica Livingston,
and Robert Morris for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//highres.html</guid>
      <pubDate>Mon, 01 Dec 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Other Half of "Artists Ship"</title>
      <link>https://paulgraham.com//artistsship.html</link>
      <description>&lt;font face="verdana" size="2"&gt;November 2008&lt;br/&gt;&lt;br/&gt;One of the differences between big companies and startups is that
big companies tend to have developed procedures to protect themselves
against mistakes.  A startup walks like a toddler, bashing
into things and falling over all the time.  A big company is more
deliberate.&lt;br/&gt;&lt;br/&gt;The gradual accumulation of checks in an organization is a kind of
learning, based on disasters that have happened to it or others
like it.  After giving a contract &lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;November 2008&lt;br/&gt;&lt;br/&gt;One of the differences between big companies and startups is that
big companies tend to have developed procedures to protect themselves
against mistakes.  A startup walks like a toddler, bashing
into things and falling over all the time.  A big company is more
deliberate.&lt;br/&gt;&lt;br/&gt;The gradual accumulation of checks in an organization is a kind of
learning, based on disasters that have happened to it or others
like it.  After giving a contract to a supplier who goes bankrupt
and fails to deliver, for example, a company might require all
suppliers to prove they're solvent before submitting bids.&lt;br/&gt;&lt;br/&gt;As companies grow they invariably get more such checks, either in
response to disasters they've suffered, or (probably more often)
by hiring people from bigger companies who bring with them customs
for protecting against new types of disasters.&lt;br/&gt;&lt;br/&gt;It's natural for organizations to learn from mistakes.  The problem
is, people who propose new checks almost never consider that the
check itself has a cost.&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Every check has a cost.&lt;/i&gt; For example, consider the case of making
suppliers verify their solvency.  Surely that's mere prudence?  But
in fact it could have substantial costs.  There's obviously the
direct cost in time of the people on both sides who supply and check
proofs of the supplier's solvency.  But the real costs are the ones
you never hear about: the company that would be the best supplier,
but doesn't bid because they can't spare the effort to get verified.
Or the company that would be the best supplier, but falls just short
of the threshold for solvencyâ€”which will of course have been set
on the high side, since there is no apparent cost of increasing it.&lt;br/&gt;&lt;br/&gt;Whenever someone in an organization proposes to add a new check,
they should have to explain not just the benefit but the cost.  No
matter how bad a job they did of analyzing it, this meta-check would
at least remind everyone there had to &lt;i&gt;be&lt;/i&gt; a cost, and send them
looking for it.&lt;br/&gt;&lt;br/&gt;If companies started doing that, they'd find some surprises.  Joel
Spolsky recently spoke at Y Combinator about selling software to
corporate customers.  He said that in most companies software costing
up to about $1000 could be bought by individual managers without
any additional approvals.  Above that threshold, software purchases
generally had to be approved by a committee.  But babysitting this
process was so expensive for software vendors that it didn't make
sense to charge less than $50,000.  Which means if you're making
something you might otherwise have charged $5000 for, you have to
sell it for $50,000 instead.&lt;br/&gt;&lt;br/&gt;The purpose of the committee is presumably to ensure that the company
doesn't waste money. And yet the result is that the company pays
10 times as much.&lt;br/&gt;&lt;br/&gt;Checks on purchases will always be expensive, because the harder
it is to sell something to you, the more it has to cost.  And not
merely linearly, either.  If you're hard enough to sell to, the
people who are best at making things don't want to bother.  The
only people who will sell to you are companies that specialize in
selling to you.  Then you've sunk to a whole new level of inefficiency.
Market mechanisms no longer protect you, because the good suppliers
are no longer in the market.&lt;br/&gt;&lt;br/&gt;Such things happen constantly to the biggest organizations of all,
governments.  But checks instituted by governments can cause much
worse problems than merely overpaying.  Checks instituted by
governments can cripple a country's whole economy.  Up till about
1400, China was richer and more technologically advanced than Europe.
One reason Europe pulled ahead was that the Chinese government
restricted long trading voyages.  So it was left to the Europeans
to explore and eventually to dominate the rest of the world, including
China.&lt;br/&gt;&lt;br/&gt;In more recent times, Sarbanes-Oxley has practically destroyed the
US IPO market.  That wasn't the intention of the legislators who
wrote it.  They just wanted to add a few more checks on public
companies.  But they forgot to consider the cost.  They forgot that
companies about to go public are usually rather stretched, and that
the weight of a few extra checks that might be easy for General
Electric to bear are enough to prevent younger companies from being
public at all.&lt;br/&gt;&lt;br/&gt;Once you start to think about the cost of checks, you can start to
ask other interesting questions. Is the cost increasing or decreasing?
Is it higher in some areas than others?  Where does it increase
discontinuously?  If large organizations started to ask questions
like that, they'd learn some frightening things.&lt;br/&gt;&lt;br/&gt;I think the cost of checks may actually be increasing.  The reason
is that software plays an increasingly important role in companies,
and the people who write software are particularly harmed by checks.&lt;br/&gt;&lt;br/&gt;Programmers are unlike many types of workers in that the best ones
actually prefer to work hard.  This doesn't seem to be the case in
most types of work.  When I worked in fast food, we didn't prefer
the busy times.  And when I used to mow lawns, I definitely didn't
prefer it when the grass was long after a week of rain.&lt;br/&gt;&lt;br/&gt;Programmers, though, like it better when they write more code.  Or
more precisely, when they release more code.  Programmers like to
make a difference.  Good ones, anyway.&lt;br/&gt;&lt;br/&gt;For good programmers, one of the best things about working for a
startup is that there are few checks on releases.  In true startups,
there are no external checks at all.  If you have an idea for a new
feature in the morning, you can write it and push it to the production
servers before lunch.  And when you can do that, you have more
ideas.&lt;br/&gt;&lt;br/&gt;At big companies, software has to go through various approvals
before it can be launched.  And the cost of doing this can be
enormousâ€”in fact, discontinuous.  I was talking recently to a
group of three programmers whose startup had been acquired a few
years before by a big company.  When they'd been independent, they
could release changes instantly.  Now, they said, the absolute
fastest they could get code released on the production servers was
two weeks.&lt;br/&gt;&lt;br/&gt;This didn't merely make them less productive.  It made them hate
working for the acquirer.&lt;br/&gt;&lt;br/&gt;Here's a sign of how much programmers like to be able to work hard:
these guys would have &lt;i&gt;paid&lt;/i&gt; to be able to release code immediately,
the way they used to.  I asked them if they'd trade 10% of the
acquisition price for the ability to release code immediately, and
all three instantly said yes.  Then I asked what was the maximum
percentage of the acquisition price they'd trade for it.  They said
they didn't want to think about it, because they didn't want to
know how high they'd go, but I got the impression it might be as
much as half.&lt;br/&gt;&lt;br/&gt;They'd have sacrificed hundreds of thousands of dollars, perhaps
millions, just to be able to deliver more software to users.  And
you know what?  It would have been perfectly safe to let them.  In
fact, the acquirer would have been better off; not only wouldn't
these guys have broken anything, they'd have gotten a lot more done.
So the acquirer is in fact getting worse performance at greater
cost.  Just like the committee approving software purchases.&lt;br/&gt;&lt;br/&gt;And just as the greatest danger of being hard to sell to is not
that you overpay but that the best suppliers won't even sell to
you, the greatest danger of applying too many checks to your
programmers is not that you'll make them unproductive, but that
good programmers won't even want to work for you.&lt;br/&gt;&lt;br/&gt;Steve Jobs's famous maxim "artists ship" works both ways.  Artists
aren't merely capable of shipping.  They insist on it.  So if you
don't let people ship, you won't have any artists.&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//artistsship.html</guid>
      <pubDate>Sat, 01 Nov 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why to Start a Startup in a Bad Economy</title>
      <link>https://paulgraham.com//badeconomy.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2008&lt;br/&gt;&lt;br/&gt;The economic situation is apparently so grim that some experts fear
w&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
October 2008&lt;br/&gt;&lt;br/&gt;The economic situation is apparently so grim that some experts fear
we may be in for a stretch as bad as the mid seventies.&lt;br&gt;&lt;br/&gt;When Microsoft and Apple were founded.&lt;br/&gt;&lt;br/&gt;As those examples suggest, a recession may not be such a bad time
to start a startup.  I'm not claiming it's a particularly good time
either.  The truth is more boring: the state of the economy doesn't
matter much either way.&lt;br/&gt;&lt;br/&gt;If we've learned one thing from funding so many startups, it's that
they succeed or fail based on the qualities of the founders.  The
economy has some effect, certainly, but as a predictor of success
it's rounding error compared to the founders.&lt;br/&gt;&lt;br/&gt;Which means that what matters is who you are, not when you do it.
If you're the right sort of person, you'll win even in a bad economy.
And if you're not, a good economy won't save you.  Someone who
thinks "I better not start a startup now, because the economy is
so bad" is making the same mistake as the people who thought during
the Bubble "all I have to do is start a startup, and I'll be rich."&lt;br/&gt;&lt;br/&gt;So if you want to improve your chances, you should think far more
about who you can recruit as a cofounder than the state of the
economy.  And if you're worried about threats to the survival of
your company, don't look for them in the news.  Look in the mirror.&lt;br/&gt;&lt;br/&gt;But for any given team of founders, would it not pay to wait till
the economy is better before taking the leap?  If you're starting
a restaurant, maybe, but not if you're working on technology.
Technology progresses more or less independently of the stock market.
So for any given idea, the payoff for acting fast in a bad economy
will be higher than for waiting.  Microsoft's first product was a
Basic interpreter for the Altair.  That was exactly what the world
needed in 1975, but if Gates and Allen had decided to wait a few
years, it would have been too late.&lt;br/&gt;&lt;br/&gt;Of course, the idea you have now won't be the last you have.  There
are always new ideas.  But if you have a specific idea you want to
act on, act now.&lt;br/&gt;&lt;br/&gt;That doesn't mean you can ignore the economy.  Both customers and investors
will be feeling pinched.  It's not necessarily a problem if customers
feel pinched: you may even be able to benefit from it, by making
things that &lt;a href="http://bountii.com"&gt;save money&lt;/a&gt;.  
Startups often make things cheaper, so in
that respect they're better positioned to prosper in a recession
than big companies.&lt;br/&gt;&lt;br/&gt;Investors are more of a problem.  Startups generally need to raise
some amount of external funding, and investors tend to be less
willing to invest in bad times.  They shouldn't be.  Everyone knows
you're supposed to buy when times are bad and sell when times are
good.  But of course what makes investing so counterintuitive is
that in equity markets, good times are defined as everyone thinking
it's time to buy.  You have to be a contrarian to be correct, and
by definition only a minority of investors can be.&lt;br/&gt;&lt;br/&gt;So just as investors in 1999 were tripping over one another trying
to buy into lousy startups, investors in 2009 will presumably be
reluctant to invest even in good ones.&lt;br/&gt;&lt;br/&gt;You'll have to adapt to this.  But that's nothing new: startups
always have to adapt to the whims of investors.  Ask any founder
in any economy if they'd describe investors as fickle, and watch
the face they make.  Last year you had to be prepared to explain
how your startup was viral.  Next year you'll have to explain how
it's recession-proof.&lt;br/&gt;&lt;br/&gt;(Those are both good things to be.  The mistake investors make is
not the criteria they use but that they always tend to focus on one
to the exclusion of the rest.)&lt;br/&gt;&lt;br/&gt;Fortunately the way to make a startup recession-proof is to do
exactly what you should do anyway: run it as cheaply as possible.
For years I've been telling founders that the surest route to success
is to be the cockroaches of the corporate world.  The immediate
cause of death in a startup is always running out of money. So the
cheaper your company is to operate, the harder it is to kill.
And fortunately it has gotten very cheap to run a startup. A recession
will if anything make it cheaper still.&lt;br/&gt;&lt;br/&gt;If nuclear winter really is here, it may be safer to be a cockroach
even than to keep your job.  Customers may drop off individually
if they can no longer afford you, but you're not going to lose them
all at once; markets don't "reduce headcount."&lt;br/&gt;&lt;br/&gt;What if you quit your job to start a startup that fails, and you
can't find another?  That could be a problem if you work in sales or
marketing.  In those fields it can take months to find a new
job in a bad economy.  But hackers seem to be more liquid.  Good
hackers can always get some kind of job.  It might not be your dream
job, but you're not going to starve.&lt;br/&gt;&lt;br/&gt;Another advantage of bad times is that there's less competition.
Technology trains leave the station at regular intervals.  If 
everyone else is cowering in a corner, you may have a whole car to
yourself.&lt;br/&gt;&lt;br/&gt;You're an investor too.  As a founder, you're buying stock with
work: the reason Larry and Sergey are so rich is not so much that
they've done work worth tens of billions of dollars, but that they
were the first investors in Google.  And like any investor you
should buy when times are bad.&lt;br/&gt;&lt;br/&gt;Were you nodding in agreement, thinking "stupid investors" a few
paragraphs ago when I was talking about how investors are reluctant
to put money into startups in bad markets, even though that's the
time they should rationally be most willing to buy?  Well, founders
aren't much better.  When times get bad, hackers go to grad school.
And no doubt that will happen this time too.  In fact, what makes
the preceding paragraph true is that most readers won't believe
itâ€”at least to the extent of acting on it.&lt;br/&gt;&lt;br/&gt;So maybe a recession is a good time to start a startup.  It's hard
to say whether advantages like lack of competition outweigh
disadvantages like reluctant investors.  But it doesn't matter much
either way.   It's the people that matter.  And for a given set of
people working on a given technology, the time to act is always
now.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//badeconomy.html</guid>
      <pubDate>Wed, 01 Oct 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Fundraising Survival Guide</title>
      <link>https://paulgraham.com//fundraising.html</link>
      <description>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2008&lt;br/&gt;&lt;br/&gt;Raising money is the second hardest part of starting a startup.
The ha&lt;/p&gt;&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;&lt;table cellspacing="0" width="100%"&gt;
&lt;tr&gt;&lt;td bgcolor="#ff9922"&gt;&lt;img height="15" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;font size="2"&gt;
&lt;b&gt;Want to start a startup?&lt;/b&gt;  Get funded by
&lt;a href="http://ycombinator.com/apply.html"&gt;Y Combinator&lt;/a&gt;.
&lt;/font&gt;
&lt;br/&gt;&lt;img height="5" src="http://www.virtumundo.com/images/spacer.gif" width="1"/&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;
August 2008&lt;br/&gt;&lt;br/&gt;Raising money is the second hardest part of starting a startup.
The hardest part is making something people want: most startups
that die, die because they didn't do that.  But the second biggest
cause of death is probably the difficulty of raising money.
Fundraising is brutal.&lt;br&gt;&lt;br/&gt;One reason it's so brutal is simply the brutality of markets.  People
who've spent most of their lives in schools or big companies may
not have been exposed to that.  Professors and bosses usually feel
some sense of responsibility toward you; if you make a valiant
effort and fail, they'll cut you a break.  Markets are less forgiving.
Customers don't care how hard you worked, only whether you solved
their problems.&lt;br/&gt;&lt;br/&gt;Investors evaluate startups the way customers evaluate products,
not the way bosses evaluate employees.  If you're making a valiant
effort and failing, maybe they'll invest in your next startup, but
not this one.&lt;br/&gt;&lt;br/&gt;But raising money from investors is harder than selling to
customers, because there are so few of them.  There's
nothing like an efficient market.  You're unlikely to have more
than 10 who are interested; it's difficult to talk to more.  So the
randomness of any one investor's behavior can really affect you.&lt;br/&gt;&lt;br/&gt;Problem number 3: investors are very random.  All investors, including
us, are by ordinary standards incompetent.  We constantly have to
make decisions about things we don't understand, and more often
than not we're wrong.&lt;br/&gt;&lt;br/&gt;And yet a lot is at stake.  The amounts invested by different types
of investors vary from five thousand dollars to fifty million, but
the amount usually seems large for whatever type of investor it is.
Investment decisions are big decisions.&lt;br/&gt;&lt;br/&gt;That combinationâ€”making big decisions about things they don't
understandâ€”tends to make investors very skittish.  VCs are notorious
for leading founders on.  Some of the more unscrupulous do it
deliberately.  But even the most well-intentioned investors can
behave in a way that would seem crazy in everyday life.  One day
they're full of enthusiasm and seem ready to write you a check on
the spot; the next they won't return your phone calls.  They're not
playing games with you.  They just can't make up their minds.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f1n"&gt;&lt;font color="#999999"&gt;1&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;If that weren't bad enough, these wildly fluctuating nodes are all
linked together.  Startup investors all know one another, and (though
they hate to admit it) the biggest factor in their opinion of you
is the opinion of other investors.  
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f2n"&gt;&lt;font color="#999999"&gt;2&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Talk about a recipe for
an unstable system.  You get the opposite of the damping that the
fear/greed balance usually produces in markets.  No one is interested
in a startup that's a "bargain" because everyone else hates it.&lt;br/&gt;&lt;br/&gt;So the inefficient market you get because there are so few players
is exacerbated by the fact that they act less than independently.
The result is a system like some kind of primitive, multi-celled
sea creature, where you irritate one extremity and the whole thing
contracts violently.&lt;br/&gt;&lt;br/&gt;Y Combinator is working to fix this.  We're trying to increase the
number of investors just as we're increasing the number of startups.
We hope that as the number of both increases we'll get something
more like an efficient market.  As t approaches infinity, Demo Day
approaches an auction.&lt;br/&gt;&lt;br/&gt;Unfortunately, t is still very far from infinity.  What does a
startup do now, in the imperfect world we currently inhabit? The
most important thing is not to let fundraising get you down.  Startups
live or die on morale.  If you let the difficulty of raising money
destroy your morale, it will become a self-fulfilling prophecy.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Bootstrapping (= Consulting)&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Some would-be founders may by now be thinking, why deal with investors
at all?  If raising money is so painful, why do it?&lt;br/&gt;&lt;br/&gt;One answer to that is obvious: because you need money to live on.
It's a fine idea in principle to finance your startup with its own
revenues, but you can't create instant customers.  Whatever you
make, you have to sell a certain amount to break even.  It will
take time to grow your sales to that point, and it's hard to predict,
till you try, how long it will take.&lt;br/&gt;&lt;br/&gt;We could not have bootstrapped Viaweb, for example.  We charged
quite a lot for our softwareâ€”about $140 per user per monthâ€”but
it was at least a year before our revenues would have covered even
our paltry costs.  We didn't have enough saved to live on for a
year.&lt;br/&gt;&lt;br/&gt;If you factor out the "bootstrapped" companies that were actually
funded by their founders through savings or a day job, the remainder
either (a) got really lucky, which is hard to do on demand, or (b)
began life as consulting companies and gradually transformed
themselves into product companies.&lt;br/&gt;&lt;br/&gt;Consulting is the only option you can count on.  But consulting is
far from free money.  It's not as painful as raising money from
investors, perhaps, but the pain is spread over a longer period.
Years, probably.  And for many types of startup, that delay could
be fatal.  If you're working on something so unusual that no one
else is likely to think of it, you can take your time.  Joshua
Schachter gradually built Delicious on the side while working on
Wall Street.  He got away with it because no one else realized it
was a good idea.  But if you were building something as obviously
necessary as online store software at about the same time as Viaweb,
and you were working on it on the side while spending most of your
time on client work, you were not in a good position.&lt;br/&gt;&lt;br/&gt;Bootstrapping sounds great in principle, but this apparently verdant
territory is one from which few startups emerge alive.  The mere
fact that bootstrapped startups tend to be famous on that account
should set off alarm bells.  If it worked so well, it would be the
norm.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f3n"&gt;&lt;font color="#999999"&gt;3&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
Bootstrapping may get easier, because starting a company is getting
cheaper.  But I don't think we'll ever reach the point where most
startups can do without outside funding.  Technology tends to
get dramatically cheaper, but living expenses don't.&lt;br/&gt;&lt;br/&gt;The upshot is, you can choose your pain: either the short, sharp
pain of raising money, or the chronic ache of consulting.  For a
given total amount of pain, raising money is the better choice,
because new technology is usually more valuable now than later.&lt;br/&gt;&lt;br/&gt;But although for most startups raising money will be the lesser
evil, it's still a pretty big evilâ€”so big that it can easily kill
you.  Not merely in the obvious sense that if you fail to raise
money you might have to shut the company down, but because the
&lt;i&gt;process&lt;/i&gt; of raising money itself can kill you.&lt;br/&gt;&lt;br/&gt;To survive it you need a set of techniques mostly
orthogonal to the ones used in convincing investors, just as mountain
climbers need to know survival techniques that are mostly orthogonal
to those used in physically getting up and down mountains.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;1. Have low expectations.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The reason raising money destroys so many startups' morale is not
simply that it's hard, but that it's so much harder than they
expected.  What kills you is the disappointment.  And the lower
your expectations, the harder it is to be disappointed.&lt;br/&gt;&lt;br/&gt;Startup founders tend to be optimistic.  This can work well in
technology, at least some of the time, but it's the wrong way to
approach raising money.  Better to assume investors will always let
you down.  Acquirers too, while we're at it.  At YC one of our
secondary mantras is "Deals fall through."  No matter what deal
you have going on, assume it will fall through.  The predictive
power of this simple rule is amazing.&lt;br/&gt;&lt;br/&gt;There will be a tendency, as a deal progresses, to start to believe
it will happen, and then to depend on it happening.  You must resist
this.  Tie yourself to the mast.  This is what kills you.  Deals
do not have a trajectory like most other human interactions, where
shared plans solidify linearly over time.  Deals often fall through
at the last moment.  Often the other party doesn't really think
about what they want till the last moment.  So you can't use your
everyday intuitions about shared plans as a guide.  When it comes
to deals, you have to consciously turn them off and become
pathologically cynical.&lt;br/&gt;&lt;br/&gt;This is harder to do than it sounds.  It's very flattering when
eminent investors seem interested in funding you.  It's easy to
start to believe that raising money will be quick and straightforward.
But it hardly ever is.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;2. Keep working on your startup.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;It sounds obvious to say that you should keep working on your startup
while raising money.  Actually this is hard to do.  Most startups
don't manage to.&lt;br/&gt;&lt;br/&gt;Raising money has a mysterious capacity to suck up all your attention.
Even if you only have one meeting a day with investors, somehow
that one meeting will burn up your whole day.  It costs not just
the time of the actual meeting, but the time getting there and back,
and the time preparing for it beforehand and thinking about it
afterward.&lt;br/&gt;&lt;br/&gt;The best way to survive the distraction of meeting with investors
is probably to partition the company: to pick one founder to deal
with investors while the others keep the company going.  This works
better when a startup has 3 founders than 2, and better when the
leader of the company is not also the lead developer.  In the best
case, the company keeps moving forward at about half speed.&lt;br/&gt;&lt;br/&gt;That's the best case, though.  More often than not the company comes
to a standstill while raising money.  And that is dangerous for so
many reasons.  Raising money always takes longer than you expect.
What seems like it's going to be a 2 week interruption turns into
a 4 month interruption.  That can be very demoralizing.  And worse
still, it can make you less attractive to investors.  They want to
invest in companies that are dynamic.  A company that hasn't done
anything new in 4 months doesn't seem dynamic, so they start to
lose interest.  Investors rarely grasp this, but much of what
they're responding to when they lose interest in a startup is the
damage done by their own indecision.&lt;br/&gt;&lt;br/&gt;The solution: put the startup first.  Fit meetings with investors
into the spare moments in your development schedule, rather than
doing development in the spare moments between meetings with
investors.  If you keep the company moving forwardâ€”releasing new
features, increasing traffic, doing deals, getting written 
aboutâ€”those investor meetings are more likely to be productive.  Not just
because your startup will seem more alive, but also because it will
be better for your own morale, which is one of the main ways investors
judge you.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;3. Be conservative.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;As conditions get worse, the optimal strategy becomes more conservative.
When things go well you can take risks; when things are bad you
want to play it safe.&lt;br/&gt;&lt;br/&gt;I advise approaching fundraising as if it were always going badly.
The reason is that between your ability to delude yourself and the
wildly unstable nature of the system you're dealing with, things
probably either already are or could easily become much worse than
they seem.&lt;br/&gt;&lt;br/&gt;What I tell most startups we fund is that if someone reputable
offers you funding on reasonable terms, take it.  There have been
startups that ignored this advice and got away with itâ€”startups
that ignored a good offer in the hope of getting a better one, and
actually did.  But in the same position I'd give the same advice
again.  Who knows how many bullets were in the gun they were playing
Russian roulette with?&lt;br/&gt;&lt;br/&gt;Corollary: if an investor seems interested, don't just let them
sit. You can't assume someone interested in investing will stay
interested.  In fact, you can't even tell (&lt;i&gt;they&lt;/i&gt; can't even tell)
if they're really interested till you try to convert that interest
into money.  So if you have hot prospect, either close them now or
write them off.  And unless you already have enough funding, that
reduces to: close them now.&lt;br/&gt;&lt;br/&gt;Startups don't win by getting great funding rounds, but by making
great products.  So finish raising money and get
back to work.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;4. Be flexible.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;There are two questions VCs ask that you shouldn't answer: "Who
else are you talking to?" and "How much are you trying to raise?"&lt;br/&gt;&lt;br/&gt;VCs don't expect you to answer the first question. They ask it just
in case. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f4n"&gt;&lt;font color="#999999"&gt;4&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
They do seem to expect an answer to the second.  But
I don't think you should just tell them a number.  Not as a way to
play games with them, but because you shouldn't &lt;i&gt;have&lt;/i&gt; a fixed
amount you need to raise.&lt;br/&gt;&lt;br/&gt;The custom of a startup needing a fixed amount of funding is an
obsolete one left over from the days when startups were more
expensive.  A company that needed to build a factory or hire 50
people obviously needed to raise a certain minimum amount.  But few
technology startups are in that position today.&lt;br/&gt;&lt;br/&gt;We advise startups to tell investors there are several different
routes they could take depending on how much they raised.  As little
as $50k could pay for food and rent for the founders for a year.
A couple hundred thousand would let them get office space and hire
some smart people they know from school.  A couple million would
let them really blow this thing out.  The message (and not just the
message, but the fact) should be: we're going to succeed no matter
what.  Raising more money just lets us do it faster.&lt;br/&gt;&lt;br/&gt;If you're raising an angel round, the size of the round can even
change on the fly.  In fact, it's just as well to make the round
small initially, then expand as needed, rather than trying to raise
a large round and risk losing the investors you already have if you
can't raise the full amount.  You may even want to do a "rolling
close," where the round has no predetermined size, but instead you
sell stock to investors one at a time as they say yes.  That helps
break deadlocks, because you can start as soon as the first one
is ready to buy. 
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f5n"&gt;&lt;font color="#999999"&gt;5&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;5. Be independent.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;A startup with a couple founders in their early twenties can have
expenses so low that they could be profitable on
as little as $2000 per month.  That's negligible as corporate
revenues go, but the effect on your morale and your bargaining
position is anything but.  At YC we use the phrase "ramen profitable"
to describe the situation where you're making just enough to pay
your living expenses.  Once you cross into ramen profitable,
everything changes.  You may still need investment to make it big,
but you don't need it this month.&lt;br/&gt;&lt;br/&gt;You can't plan when you start a startup how long
it will take to become profitable.  But if you find yourself in a
position where a little more effort expended on sales would carry
you over the threshold of ramen profitable, do it.&lt;br/&gt;&lt;br/&gt;Investors like it when you're ramen profitable.  It shows you've
thought about making money, instead of just working on amusing
technical problems; it shows you have the discipline to keep your
expenses low; but above all, it means you don't need them.&lt;br/&gt;&lt;br/&gt;There is nothing investors like more than a startup that seems like
it's going to succeed even without them.  Investors like it when
they can help a startup, but they don't like startups that would
die without that help.&lt;br/&gt;&lt;br/&gt;At YC we spend a lot of time trying to predict how the startups we've
funded will do, because we're trying to learn how to pick winners.
We've now watched the trajectories of so many startups that we're
getting better at predicting them.  And when we're talking
about startups we think are likely to succeed, what we find ourselves
saying is things like "Oh, those guys can take care of themselves.
They'll be fine." Not "those guys are really smart" or
"those guys are working on a great idea."
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f6n"&gt;&lt;font color="#999999"&gt;6&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
When we predict good outcomes for startups, the qualities
that come up in the supporting arguments are toughness, adaptability,
determination.  Which means to the extent we're correct, those are
the qualities you need to win.&lt;br/&gt;&lt;br/&gt;Investors know this, at least unconsciously.   The reason they like
it when you don't need them is not simply that they like what they
can't have, but because that quality is what makes founders succeed.&lt;br/&gt;&lt;br/&gt;&lt;a href="http://www.youtube.com/watch?v=KhhId_WG7RA"&gt;Sam Altman&lt;/a&gt; 
has it.  You could parachute him into an island full of
cannibals and come back in 5 years and he'd be the king.  If you're
Sam Altman, you don't have to be profitable to convey to investors
that you'll succeed with or without them.  (He wasn't, and he did.)
Not everyone has Sam's deal-making ability.  I myself don't.  But
if you don't, you can let the numbers speak for you.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;6. Don't take rejection personally.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Getting rejected by investors can make you start to doubt yourself.
After all, they're more experienced than you.  If they think your
startup is lame, aren't they probably right?&lt;br/&gt;&lt;br/&gt;Maybe, maybe not.  The way to handle rejection is with precision.
You shouldn't simply ignore rejection.  It might mean something.
But you shouldn't automatically get demoralized either.&lt;br/&gt;&lt;br/&gt;To understand what rejection means, you have to understand first
of all how common it is.  Statistically, the average VC is a rejection
machine.  David Hornik, a partner at August, told me:
&lt;blockquote&gt;
  The numbers for me ended up being something like 500 to 800 plans
  received and read, somewhere between 50 and 100 initial 1 hour
  meetings held, about 20 companies that I got interested in, about
  5 that I got serious about and did a bunch of work, 1 to 2 deals
  done in a year.  So the odds are against you.  You
  may be a great entrepreneur, working on interesting stuff, etc.
  but it is still incredibly unlikely that you get funded.
&lt;/blockquote&gt;
This is less true with angels, but VCs reject practically everyone.
The structure of their business means a partner does at most 2 new
investments a year, no matter how many good startups approach him.&lt;br/&gt;&lt;br/&gt;In addition to the odds being terrible, the average investor is,
as I mentioned, a pretty bad judge of startups.  It's harder to
judge startups than most other things, because great startup ideas
tend to seem wrong. A good startup idea has to be not just good but
novel.  And to be both good and novel, an idea probably has to seem
bad to most people, or someone would already be doing it and it
wouldn't be novel.&lt;br/&gt;&lt;br/&gt;That makes judging startups harder than most other things one judges.
You have to be an intellectual contrarian to be a good startup
investor.  That's a problem for VCs, most of whom are not particularly
imaginative.  VCs are mostly money guys, not people who make things.
&lt;font color="#999999"&gt;[&lt;a href="https://paulgraham.com/fundraising.html#f7n"&gt;&lt;font color="#999999"&gt;7&lt;/font&gt;&lt;/a&gt;]&lt;/font&gt;
Angels are better at appreciating novel ideas, because most
were founders themselves.&lt;br/&gt;&lt;br/&gt;So when you get a rejection, use the data that's in it, and not what's
not.  If an investor gives you specific reasons for not investing,
look at your startup and ask if they're right.  If they're real
problems, fix them.  But don't just take their word for it.  You're
supposed to be the domain expert; you have to decide.&lt;br/&gt;&lt;br/&gt;Though a rejection doesn't necessarily tell you anything about your
startup, it does suggest your pitch could be improved.  Figure out
what's not working and change it.  Don't just think "investors are
stupid."  Often they are, but figure out precisely where you lose
them.&lt;br/&gt;&lt;br/&gt;Don't let rejections pile up as a depressing, undifferentiated heap.
Sort them and analyze them, and then instead of thinking "no one
likes us," you'll know precisely how big a problem you have, and
what to do about it.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;7. Be able to downshift into consulting (if appropriate).&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Consulting, as I mentioned, is a dangerous way to finance a startup.
But it's better than dying.  It's a bit like anaerobic respiration:
not the optimum solution for the long term, but it can save you
from an immediate threat.  If you're having trouble raising money
from investors at all, it could save you to be able to shift
toward consulting.&lt;br/&gt;&lt;br/&gt;This works better for some startups than others.  It wouldn't have
been a natural fit for, say, Google, but if your company was making
software for building web sites, you could degrade fairly gracefully
into consulting by building sites for clients with it.&lt;br/&gt;&lt;br/&gt;So long as you were careful not to get sucked permanently into
consulting, this could even have advantages.  You'd understand your
users well if you were using the software for them.  Plus as a
consulting company you might be able to get big-name users using
your software that you wouldn't have gotten as a product company.&lt;br/&gt;&lt;br/&gt;At Viaweb we were forced to operate like a consulting company
initially, because we were so desperate for users that we'd offer
to build merchants' sites for them if they'd sign up. 
But we never charged for such work, because we didn't want them to
start treating us like actual consultants, and calling us every
time they wanted something changed on their site.  We knew we had
to stay a product company, because only
that scales.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;8. Avoid inexperienced investors.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Though novice investors seem unthreatening they can be the most
dangerous sort, because they're so nervous.  Especially in
proportion to the amount they invest.  Raising $20,000 from a first-time
angel investor can be as much work as raising $2 million from
a VC fund.&lt;br/&gt;&lt;br/&gt;Their lawyers are generally inexperienced too.  But while the
investors can admit they don't know what they're doing, their lawyers
can't.  One YC startup negotiated terms for a tiny round with
an angel, only to receive a 70-page agreement from his lawyer.  And
since the lawyer could never admit, in front of his client, that
he'd screwed up, he instead had to insist on retaining all the
draconian terms in it, so the deal fell through.&lt;br/&gt;&lt;br/&gt;Of course, someone has to take money from novice investors, or there
would never be any experienced ones.  But if you do, either (a)
drive the process yourself, including supplying the 
&lt;a href="http://ycombinator.com/seriesaa.html"&gt;paperwork&lt;/a&gt;, or
(b) use them only to fill up a larger round led by someone else.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;9. Know where you stand.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;The most dangerous thing about investors is their indecisiveness.
The worst case scenario is the long no, the no that comes after
months of meetings.  Rejections from investors are like design
flaws: inevitable, but much less costly if you discover them early.&lt;br/&gt;&lt;br/&gt;So while you're talking to investors, constantly look for signs of
where you stand.  How likely are they to offer you a term sheet?
What do they have to be convinced of first?  You shouldn't necessarily
always be asking these questions outrightâ€”that could get 
annoyingâ€”but you should always be collecting data about them.&lt;br/&gt;&lt;br/&gt;Investors tend to resist committing except to the extent you push
them to.  It's in their interest to collect the maximum amount of
information while making the minimum number of decisions.  The best
way to force them to act is, of course, competing investors.  But
you can also apply some force by focusing the discussion:
by asking what specific questions they need answered to make
up their minds, and then answering them.  If you get through several
obstacles and they keep raising new ones, assume that ultimately
they're going to flake.&lt;br/&gt;&lt;br/&gt;You have to be disciplined when collecting data about investors'
intentions.  Otherwise their desire to lead you on will combine
with your own desire to be led on to produce completely inaccurate
impressions.&lt;br/&gt;&lt;br/&gt;Use the data to weight your strategy.
You'll probably be talking to several investors.  Focus on the ones
that are most likely to say yes.  The value of a potential investor
is a combination of how good it would be if they said yes, and how
likely they are to say it.  Put the most weight on the second factor.
Partly because the most important quality in an investor is simply
investing.  But also because, as I mentioned, the biggest factor
in investors' opinion of you is other investors' opinion of you.
If you're talking to several investors and you manage to get one
over the threshold of saying yes, it will make the others much more
interested.  So you're not sacrificing the lukewarm investors if
you focus on the hot ones; convincing the hot investors is the best
way to convince the lukewarm ones.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Future&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;I'm hopeful things won't always be so awkward. I hope that as startups
get cheaper and the number of investors increases, raising money
will become, if not easy, at least straightforward.&lt;br/&gt;&lt;br/&gt;In the meantime, the brokenness of the funding process offers a big
opportunity.  Most investors have no idea how dangerous they are.
They'd be surprised to hear that raising money from them is something
that has to be treated as a threat to a company's survival.  They
just think they need a little more information to make up their
minds.  They don't get that there are 10 other investors who also
want a little more information, and that the process of talking to
them all can bring a startup to a standstill for months.&lt;br/&gt;&lt;br/&gt;Because investors don't understand the cost of dealing with them,
they don't realize how much room there is for a potential competitor
to undercut them.  I know from my own experience how much faster
investors could decide, because we've brought our own time down to
20 minutes (5 minutes of reading an application plus a 10 minute
interview plus 5 minutes of discussion).  If you were investing
more money you'd want to take longer, of course.  But if we can
decide in 20 minutes, should it take anyone longer than a couple
days?&lt;br/&gt;&lt;br/&gt;Opportunities like this don't sit unexploited forever, even in an
industry as conservative as venture capital.  So
either existing investors will start to make up their minds faster,
or new investors will emerge who do.&lt;br/&gt;&lt;br/&gt;In the meantime founders have to treat raising money as a dangerous
process.  Fortunately, I can fix the biggest danger right here.
The biggest danger is surprise.  It's that startups will underestimate
the difficulty of raising moneyâ€”that they'll cruise through all
the initial steps, but when they turn to raising money they'll find
it surprisingly hard, get demoralized, and give up. So I'm telling
you in advance: raising money is hard.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Notes&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;[&lt;a name="f1n"&gt;&lt;font color="#000000"&gt;1&lt;/font&gt;&lt;/a&gt;]
When investors can't make up their minds, they sometimes
describe it as if it were a property of the startup.  "You're too
early for us," they sometimes say.  But which of them, if they were
taken back in a time machine to the hour Google was founded, wouldn't
offer to invest at any valuation the founders chose?  An hour old
is not too early if it's the right startup.  What "you're too early"
really means is "we can't figure out yet whether you'll succeed."&lt;br/&gt;&lt;br/&gt;
[&lt;a name="f2n"&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;/a&gt;]
Investors influence one another both directly and indirectly.
They influence one another directly through the "buzz" that surrounds
a hot startup.  But they also influence one another indirectly
&lt;i&gt;through the founders.&lt;/i&gt;  When a lot of investors are interested in
you, it increases your confidence in a way that makes you much more
attractive to investors.&lt;br/&gt;&lt;br/&gt;No VC will admit they're influenced by buzz.  Some genuinely aren't.
But there are few who can say they're not influenced by confidence.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f3n"&gt;&lt;font color="#000000"&gt;3&lt;/font&gt;&lt;/a&gt;]
One VC who read this essay wrote:&lt;br/&gt;&lt;br/&gt;"We try to avoid companies that got bootstrapped with consulting. 
It creates very bad behaviors/instincts that are hard to erase 
from a company's culture."&lt;br/&gt;&lt;br/&gt;[&lt;a name="f4n"&gt;&lt;font color="#000000"&gt;4&lt;/font&gt;&lt;/a&gt;]
The optimal way to answer the first question is to say that
it would be improper to name names, while simultaneously implying
that you're talking to a bunch of other VCs who are all about to
give you term sheets.  If you're the sort of person who understands
how to do that, go ahead.  If not, don't even try.  Nothing annoys
VCs more than clumsy efforts to manipulate them.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f5n"&gt;&lt;font color="#000000"&gt;5&lt;/font&gt;&lt;/a&gt;]
The disadvantage of expanding a round on the fly is that the
valuation is fixed at the start, so if you get a sudden rush of
interest, you may have to decide between turning some investors
away and selling more of the company than you meant to.  That's a
good problem to have, however.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f6n"&gt;&lt;font color="#000000"&gt;6&lt;/font&gt;&lt;/a&gt;]
I wouldn't say that intelligence doesn't matter in startups.
We're only comparing YC startups, who've already made it over a
certain threshold.&lt;br/&gt;&lt;br/&gt;[&lt;a name="f7n"&gt;&lt;font color="#000000"&gt;7&lt;/font&gt;&lt;/a&gt;]
But not all are.  Though most VCs are suits at heart,
the most successful ones tend not to be.  Oddly enough,
the best VCs tend to be the least VC-like.&lt;br/&gt;&lt;br/&gt;
&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, David Hornik, Jessica Livingston,
Robert Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;&lt;/br&gt;&lt;/p&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//fundraising.html</guid>
      <pubDate>Fri, 01 Aug 2008 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>The Pooled-Risk Company Management Company</title>
      <link>https://paulgraham.com//prcmc.html</link>
      <description>&lt;font face="verdana" size="2"&gt;July 2008&lt;br/&gt;&lt;br/&gt;At this year's startup school, David Heinemeier Hansson gave a
 &lt;a href="http://www.omnisio.com/startupschool08/david-heinemeier-hansson-at-startup-school-08"&gt;talk&lt;/a&gt;
in which he suggested that startup founders
should do things the old fashioned way.  Instead of hoping to get
rich by building a valuable company and then selling stock in a
"liquidity event," founders should start companies that make money
and live off the revenues.&lt;br/&gt;&lt;br/&gt;Sounds&lt;/font&gt;</description>
      <content:encoded>&lt;font face="verdana" size="2"&gt;July 2008&lt;br/&gt;&lt;br/&gt;At this year's startup school, David Heinemeier Hansson gave a
 &lt;a href="http://www.omnisio.com/startupschool08/david-heinemeier-hansson-at-startup-school-08"&gt;talk&lt;/a&gt;
in which he suggested that startup founders
should do things the old fashioned way.  Instead of hoping to get
rich by building a valuable company and then selling stock in a
"liquidity event," founders should start companies that make money
and live off the revenues.&lt;br/&gt;&lt;br/&gt;Sounds like a good plan.  Let's think about the optimal way to do
this.&lt;br/&gt;&lt;br/&gt;One disadvantage of living off the revenues of your company is that
you have to keep running it.  And as anyone who runs their own
business can tell you, that requires your complete attention.  You
can't just start a business and check out once things are going
well, or they stop going well surprisingly fast.&lt;br/&gt;&lt;br/&gt;The main economic motives of startup founders seem to be freedom
and security.  They want enough money that (a) they don't have to
worry about running out of money and (b) they can spend their time
how they want.  Running your own business offers neither.  You
certainly don't have freedom: no boss is so demanding.  Nor do you
have security, because if you stop paying attention to the company,
its revenues go away, and with them your income.&lt;br/&gt;&lt;br/&gt;The best case, for most people, would be if you could hire someone
to manage the company for you once you'd grown it to a certain size.
Suppose you could find a really good manager.  Then you would have
both freedom and security.  You could pay as little attention to
the business as you wanted, knowing that your manager would keep
things running smoothly.  And that being so, revenues would continue
to flow in, so you'd have security as well.&lt;br/&gt;&lt;br/&gt;There will of course be some founders who wouldn't like that idea:
the ones who like running their company so much that there's nothing
else they'd rather do.  But this group must be small.  The way you
succeed in most businesses is to be fanatically attentive
to customers' needs.  What are the odds that your own desires would
coincide exactly with the demands of this powerful, external force?&lt;br/&gt;&lt;br/&gt;Sure, running your own company can be fairly interesting.  Viaweb
was more interesting than any job I'd had before.  And since I made
much more money from it, it offered the highest ratio of income to
boringness of anything I'd done, by orders of magnitude.  But was
it &lt;i&gt;the&lt;/i&gt; most interesting work I could imagine doing?  No.&lt;br/&gt;&lt;br/&gt;Whether the number of founders in the same position is asymptotic
or merely large, there are certainly a lot of them.  For them the
right approach would be to hand the company over to a professional
manager eventually, if they could find one who was good enough.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;So far so good.  But what if your manager was hit by a bus?  What
you really want is a management company to run your company for
you.  Then you don't depend on any one person.&lt;br/&gt;&lt;br/&gt;If you own rental property, there are companies you can hire to
manage it for you.  Some will do everything, from finding tenants
to fixing leaks.  Of course, running companies is a lot more
complicated than managing rental property, but let's suppose there
were management companies that could do it for you. They'd charge
a lot, but wouldn't it be worth it?  I'd sacrifice a large percentage
of the income for the extra peace of mind.&lt;br/&gt;&lt;br/&gt;I realize what I'm describing already sounds too good to be true, but I
can think of a way to make it even more attractive.  If
company management companies existed, there would be an additional
service they could offer clients: they could let them insure their
returns by pooling their risk.  After all, even a perfect manager can't save a company
when, as sometimes happens, its whole market dies, just as property
managers can't save you from the building burning down.  But a
company that managed a large enough number of companies could say
to all its clients: we'll combine the revenues from all your
companies, and pay you your proportionate share.&lt;br/&gt;&lt;br/&gt;If such management companies existed, they'd offer the maximum of
freedom and security.  Someone would run your company for you, and
you'd be protected even if it happened to die.&lt;br/&gt;&lt;br/&gt;Let's think about how such a management company might be organized.
The simplest way would be to have a new kind of stock representing
the total pool of companies they were managing.  When you signed
up, you'd trade your company's stock for shares of this pool, in
proportion to an estimate of your company's value that you'd both
agreed upon.  Then you'd automatically get your share of the returns
of the whole pool.&lt;br/&gt;&lt;br/&gt;The catch is that because this kind of trade would be hard to undo,
you couldn't switch management companies.  But there's a way they
could fix that: suppose all the company management companies got
together and agreed to allow their clients to exchange shares in
all their pools.  Then you could, in effect, simultaneously choose
all the management companies to run yours for you, in whatever
proportion you wanted, and change your mind later as often as you
wanted.&lt;br/&gt;&lt;br/&gt;If such pooled-risk company management companies existed, signing
up with one would seem the ideal plan for most people following the
route David advocated.&lt;br/&gt;&lt;br/&gt;Good news: they do exist.  What I've just
described is an acquisition by a public company.&lt;br/&gt;&lt;br/&gt;&lt;center&gt;_____&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;Unfortunately, though public acquirers are structurally identical
to pooled-risk company management companies, they don't think of
themselves that way.  With a property management company, you can
just walk in whenever you want and say "manage my rental property
for me" and they'll do it.  Whereas acquirers are, as of this
writing, extremely fickle.  Sometimes they're in a buying mood and
they'll overpay enormously; other times they're not interested.
They're like property management companies run by madmen.  Or more
precisely, by Benjamin Graham's Mr. Market.&lt;br/&gt;&lt;br/&gt;So while on average public acquirers behave like pooled-risk company
managers, you need a window of several years to get average case
performance.  If you wait long enough (five years, say) you're
likely to hit an up cycle where some acquirer is hot to buy you.
But you can't choose when it happens.&lt;br/&gt;&lt;br/&gt;You can't assume investors will carry you for as long as you might
have to wait. Your company has to make money.  Opinions are divided
about how early to focus on that.  
&lt;a href="http://susanitsa.wordpress.com/2006/11/08/the-joe-kraus-qa-better-late/"&gt;Joe Kraus&lt;/a&gt; says you should try
charging customers right away.  And yet some of the most successful
startups, including Google, ignored revenue at first and concentrated
exclusively on development.  The answer probably depends on the
type of company you're starting.  I can imagine some where trying
to make sales would be a good heuristic for product design, and
others where it would just be a distraction.  The test is probably
whether it helps you to understand your users.&lt;br/&gt;&lt;br/&gt;You can choose whichever revenue strategy you think is best for the
type of company you're starting, so long as you're profitable.
Being profitable ensures you'll get at least the average of the
acquisition marketâ€”in which public companies do behave as pooled-risk
company management companies.&lt;br/&gt;&lt;br/&gt;David isn't mistaken in saying you should start a company to live
off its revenues.  The mistake is thinking this is somehow opposed
to starting a company and selling it.  In fact, for most people the
latter is merely the optimal case of the former.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Thanks&lt;/b&gt; to Trevor Blackwell, Jessica Livingston, Michael
Mandel, Robert Morris, and Fred Wilson for reading drafts of this.&lt;br/&gt;&lt;br/&gt;
&lt;!--
http://news.ycombinator.com/item?id=254335"
--&gt;&lt;br/&gt;&lt;br/&gt;&lt;/font&gt;</content:encoded>
      <guid isPermaLink="false">https://paulgraham.com//prcmc.html</guid>
      <pubDate>Tue, 01 Jul 2008 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
